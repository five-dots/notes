#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results output :cache yes :session *R:blog* :width 640 :height 480
#+OPTIONS: author:nil H:9 toc:nil
#+HUGO_BASE_DIR: ~/Dropbox/repos/github/five-dots/blog
#+HUGO_SECTION: post/2019/11/

#+TITLE: 1つの org ファイルから Hugo と Qiita の Markdown を生成する
#+DATE: 2019-11-05
#+HUGO_CATEGORIES: emacs
#+HUGO_TAGS: org-mode markdown hugo
#+HUGO_CUSTOM_FRONT_MATTER: :toc true

普段、技術的なメモは Emacs の [[https://orgmode.org/ja/][org-mode]] で書いたものを [[https://github.com/five-dots/notes][自身の github リポジトリ]] に公開している。ただ、これはあくまで個人的なメモなので、それほど他人が見ることを意識したものではない。より見やすい記事として公開するために、個人のブログを、[[https://gohugo.io/][Hugo]] + [[https://www.netlify.com/][Netlify]] で開始したが、同時に力を入れて書いた技術記事は Qiita にも公開して、広く読んでもらえるようにしたい。

そこで、これまで通り、org ファイルは 1 つのリポジトリで管理しつつ、個人ブログ向けと Qiita 向けの Markdown をエクスポートできないか試してみた。

なお、Hugo テーマは [[https://github.com/olOwOlo/hugo-theme-even][even]] を利用している。その他のテーマでは、この記事と異なる結果になる可能性もあるので、その点は注意が必要だ。

* 生成されるファイル

1 つの [[https://orgmode.org/ja/][org-mode]] ファイルから、個人ブログ向けには [[https://ox-hugo.scripter.co/][ox-hugo]] で、Qiita 向けには [[https://github.com/larstvei/ox-gfm][ox-gfm]] で Markdown ファイルを出力できないか試してみた。

1. [[https://github.com/five-dots/notes/blob/master/lang/org-mode/org-for-hugo-qiita/org-for-hugo-qiita.org][元となる org ファイル@github]]
2. [[https://objective-boyd-9b8f29.netlify.com/2019/11/org-for-hugo-qiita/][個人ブログの記事]] (Markdown ファイル@github)
3. [[a][Qiitaの記事]] (Markdown ファイル@github)

4. ox-md
   - table が HTML で出力されるので、文字修飾が有効にならない
   - Footnotes が有効にならない
   - code block が =```lang```= の形式で出力されない
5. ox-gfm
   - Footnotes が有効にならない
6. ox-qmd
   - 
7. ox-pandoc

* 動作確認バージョン

| ソフトウェア | バージョン      |
|--------------+-----------------|
| OS           | Ubuntu 18.04    |
| Emacs        | 26.3            |
| org-mode     | 9.2.6           |
| Hugo         | 0.59.1/extended |

* 見出し
* Hugo=h2 / Qiita=h1
** Hugo=h3 / Qiita=h2
*** Hugo=h4 / Qiita=h3
**** Hugo=h5 / Qiita=h4
***** Hugo=h6 / Qiita=h5
** Memo

- Hugo では =*= がタイトルとして扱われるため、 =**= (h2) から見出しとして機能する
- org-mode のデフォルトでは、h4 までしか出力されないため、 =#+OPTIONS: H:6= のように追加で設定が必要
- [[https://github.com/olOwOlo/hugo-theme-even][Even]] theme では h6 が最小

* 表・文字修飾

| 項目         | org-mode        | 結果          |
|--------------+-----------------+---------------|
| 太字         | =*bold*=          | *bold*          |
| イタリック   | =/italic/=        | /italic/        |
| 下線         | =_underline_=     | _underline_     |
| 取り消し線   | =+strikethrough+= | +strikethrough+ |
| コード       | =~code~=          | ~code~          |
| 逐語         | ==verbatim==      | =verbatim=      |
| 上付き       | =hoge^{super}=    | hoge^{super}  |
| 下付き       | =hoge_{sub}=      | hoge_{sub}    |
| ギリシャ文字 | =\alpha=          | \alpha        |

** Memo

- 下線は Hugo で =span.underline {text-decoration: underline;}= を =static/css/custom.css= に追加した場合の表示結果
- コードは Hugo で =(setq org-hugo-use-code-for-kbd t)= にした場合の表示結果

* リスト
** 順序なしリスト

- hoge
  - hoge
  - fuga
  - piyo
- fuga
- piyo

** チェックボックス

 - [ ] hoge
 - [x] fuga
 - [ ] piyo

** 順序ありリスト

1. hoge
   1. hoge
   2. fuga
   3. piyo
2. fuga
3. piyo

** 定義リスト

- リンゴ :: 赤いフルーツ
- オレンジ :: 橙色フルーツ

*Memo* 
- チェックボックスは、チェックをつけてしまうと表示されなくなってしまう

* 引用

#+begin_quote
Everything should be made as simple as possible,
but not any simpler ---Albert Einstein
#+end_quote

*Memo*
- 問題なく表示されている

* 数式

- インライン =$y=f(x)$=

\(y=f(x)\)

$y=f(x)$

- ブロック =$$y=f(x)$$=

$$ y=f(x) $$
\[y=f(x)\]

- ブロック
#+begin_example
\begin{equation}
y=f(x)
\end{equation}
#+end_example

\begin{equation}
y=f(x)
\end{equation}

*Memo*
- =\begin{equation} ... \end{equation}= ブロックは Qiita では有効でない

* 脚注

- org-mode[fn:org] =[fn:name]=
[fn:org] https://orgmode.org/ja/


*Memo*
- Qiita では有効でない

* 水平線

=-----=
-----

*Memo*
- 5 つの =-= で Markdown 側では =---= に変換される

* コードブロック
** Emacs Lisp

#+begin_src emacs-lisp :exports both
(emacs-version)
#+end_src

#+RESULTS:
: GNU Emacs 26.3 (build 2, x86_64-pc-linux-gnu, GTK+ Version 3.22.30)
:  of 2019-09-17

** R
*** Code output

#+begin_src R :exports both
R.version
#+end_src

#+RESULTS:
#+begin_example
               _                           
platform       x86_64-pc-linux-gnu         
arch           x86_64                      
os             linux-gnu                   
system         x86_64, linux-gnu           
status                                     
major          3                           
minor          6.1                         
year           2019                        
month          07                          
day            05                          
svn rev        76782                       
language       R                           
version.string R version 3.6.1 (2019-07-05)
nickname       Action of the Toes
#+end_example

*** Table

#+begin_src R :results value :colnames yes :exports both
library(tidyverse)
head(iris)
#+end_src

#+RESULTS:
| Sepal.Length | Sepal.Width | Petal.Length | Petal.Width | Species |
|--------------+-------------+--------------+-------------+---------|
|          5.1 |         3.5 |          1.4 |         0.2 | setosa  |
|          4.9 |           3 |          1.4 |         0.2 | setosa  |
|          4.7 |         3.2 |          1.3 |         0.2 | setosa  |
|          4.6 |         3.1 |          1.5 |         0.2 | setosa  |
|            5 |         3.6 |          1.4 |         0.2 | setosa  |
|          5.4 |         3.9 |          1.7 |         0.4 | setosa  |

*** Plot

#+begin_src R :results graphics :exports code :file ./img/iris.png
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) + geom_point()
#+end_src

#+RESULTS:
[[file:./img/iris.png]]

#+attr_html:
[[https://dl.dropboxusercontent.com/s/4j5jstkg1fsvdiw/iris.png]]

*Memo*
- org-babel からプロット画像を出力する先を Dropbox フォルダに設定し共有リンク機能を利用して画像を公開する
- Hugo 向けには ox-hugo が自動で画像ファイルを =static/ox-hugo/= へ移動してくれるので、本来は Dropbox を利用する必要はないが、Qiita と記事を共用するためには必要
- =:exports code= に設定することで、babel からのリンク出力を停止しつつ、ローカルではプロットをインライン画像で確認できる
- [[http://ijmp320.hatenablog.jp/entry/2015/01/18/171807][ここ]]の記事を参考に、Dropbox の直リンクに変換し、以下のように HTML として出力する
- 将来的には Dropbox API + Emacs Lisp で自動化したい

#+begin_example
#+attr_html:
[[https://dl.dropboxusercontent.com/s/4j5jstkg1fsvdiw/iris.png]]
#+end_example

#+begin_src org
#+attr_html:
[[https://dl.dropboxusercontent.com/s/4j5jstkg1fsvdiw/iris.png]]
#+end_src

** Python

#+begin_src python :session :exports both
import sys
sys.version
#+end_src

#+RESULTS:
: 3.6.8 (default, Oct  7 2019, 12:59:55) 
: [GCC 8.3.0]

* 参考

- [[https://sfus.net/blog/2018/12/org-mode-with-ox-hugo/][Org-mode で記事を書いて Hugo 向け markdown を ox-hugo で自動生成する話]]
- [[https://ladicle.com/post/ox-hugo-cheat/][ox-Hugo Cheat Sheet]]
- [[http://ijmp320.hatenablog.jp/entry/2015/01/18/171807][【備忘録】Dropboxの画像のURL（直リンク）の取得]]
- [[https://qiita.com/dwarfJP/items/594a8d4b0ac6d248d1e4][emacs の org-mode で書いた記事を qiita に投稿する org-qiita.el]]
- [[https://qiita.com/PlanetMeron/items/63ac58898541cbe81ada][Qiitaの数式チートシート]]
- [[https://emacs.stackexchange.com/questions/47733/org-latex-exports-math-as-can-this-be-avoided][Org latex exports $ … $ math as \( … \) : can this be avoided?]]
- [[https://orgmode.org/manual/Advanced-Export-Configuration.html][12.17 Advanced Export Configuration]]

* Footnotes                                                        :noexport:
* TODOs
** org-qiita.el for upload
** Definition list
** github/markup, wallyqs/org-ruby
** 他のリンク精査
** Qiita + table
* COMMENT Local Variables                                           :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:

