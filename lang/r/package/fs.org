#+STARTUP: folded indent
#+PROPERTY: header-args:R :results output :colnames yes :session *R:fs*

* ~{fs}~: Provide cross platform file operations based on libuv      :noexport:

~{fs}~ は ~libuv~ を使った、ファイルシステム操作のためのパッケージ。 ~{base}~ に含まれる関数の主な違いとして、以下の点が挙げられている。

- 全ての関数がベクトル化されている (パスのベクトルを受け取ることができる)
- 全ての返り値の名前にパス情報を含めている
- 操作が失敗した際はエラーを投げる (~{base}~ の中には、warning だけのものがある)
- 全てを UTF-8 で扱う
- 関数名がわかりやすい (~dir_~, ~file_~, ~link_~, ~path_~)
\\

* 目次                                                                :quote:
#+BEGIN_QUOTE
- [[#ライブラリの読み込みとバージョンの確認][ライブラリの読み込みとバージョンの確認]]
- [[#全関数リスト][全関数リスト]]
  - [[#抽出][抽出]]
    - [[#-str_substring-start--1l-end---1l-開始終了位置で抽出][★★☆ ~str_sub(string, start = 1L, end = -1L)~ 開始・終了位置で抽出]]
    - [[#-str_subsetstring-pattern-negate--false-マッチ要素を抽出][★★★ ~str_subset(string, pattern, negate = FALSE)~ マッチ要素を抽出]]
    - [[#-str_extractstring-pattern-最初のマッチ部分を抽出][★★☆ ~str_extract(string, pattern)~ 最初のマッチ部分を抽出]]
    - [[#-str_extract_allstring-pattern-simplify--false-全てのマッチ部分を抽出][★☆☆ ~str_extract_all(string, pattern, simplify = FALSE)~ 全てのマッチ部分を抽出]]
    - [[#-str_matchstring-pattern-最初のマッチ部分を抽出][★☆☆ ~str_match(string, pattern)~ 最初のマッチ部分を抽出]]
    - [[#-str_match_allstring-pattern-全てのマッチ部分を抽出][★☆☆ ~str_match_all(string, pattern)~ 全てのマッチ部分を抽出]]
    - [[#-wordstring-start--1l-end--start-sep--fixed--単語を抽出][★☆☆ ~word(string, start = 1L, end = start, sep = fixed(" "))~ 単語を抽出]]
  - [[#置換変換削除][置換・変換・削除]]
    - [[#-str_substring-start--1l-end---1l-omit_na--false---value-開始終了位置で置換][★★☆ ~str_sub(string, start = 1L, end = -1L, omit_na = FALSE) <- value~ 開始・終了位置で置換]]
    - [[#-str_replacestring-pattern-replacement-最初のマッチを置換][★★★ ~str_replace(string, pattern, replacement)~ 最初のマッチを置換]]
    - [[#-str_replace_allstring-pattern-replacement-全てのマッチを置換][★★★ ~str_replace_all(string, pattern, replacement)~ 全てのマッチを置換]]
    - [[#-str_removestring-pattern-マッチ部分を削除][★★★ ~str_remove(string, pattern)~ マッチ部分を削除]]
    - [[#-str_remove_allstring-pattern-マッチを削除][★★★ ~str_remove_all(string, pattern)~ マッチを削除]]
    - [[#-str_to_lowerstring-locale--en-小文字に変換][★★☆ ~str_to_lower(string, locale = "en")~ 小文字に変換]]
    - [[#-str_to_upperstring-locale--en-大文字に変換][★★☆ ~str_to_upper(string, locale = "en")~ 大文字に変換]]
    - [[#-str_to_titlestring-locale--en-タイトル形式に変換][★☆☆ ~str_to_title(string, locale = "en")~ タイトル形式に変換]]
    - [[#-str_to_sentencestring-locale--en-センテンス形式に変換][★☆☆ ~str_to_sentence(string, locale = "en")~ センテンス形式に変換]]
  - [[#結合分割][結合・分割]]
    - [[#-str_c-sep---collapse--null-結合-][★★☆ ~str_c(..., sep = "", collapse = NULL)~ 結合 (~...~)]]
    - [[#-str_flattenstring-collapse---結合-ベクトル][★★☆ ~str_flatten(string, collapse = "")~ 結合 (ベクトル)]]
    - [[#-str_dupstring-times-複製して結合][★☆☆ ~str_dup(string, times)~ 複製して結合]]
    - [[#-str_splitstring-pattern-n--inf-simplify--false-分割][★★★ ~str_split(string, pattern, n = Inf, simplify = FALSE)~ 分割]]
    - [[#-str_split_fixedstring-pattern-n-固定長で分割][★☆☆ ~str_split_fixed(string, pattern, n)~ 固定長で分割]]
  - [[#変数埋め込み][変数埋め込み]]
    - [[#-str_interpstring-env--parentframe-format-付きで埋め込む][★☆☆ ~str_interp(string, env = parent.frame())~ format 付きで埋め込む]]
    - [[#-str_glue-sep---envir--parentframe-glue][★☆☆ ~str_glue(..., .sep = "", .envir = parent.frame())~ glue()]]
    - [[#-str_glue_datax--sep---envir--parentframe-na--na-glue_data][★☆☆ ~str_glue_data(.x, ..., .sep = "", .envir = parent.frame(), .na = "NA")~ glue_data()]]
  - [[#正規表現マッチを検出][正規表現マッチを検出]]
    - [[#-str_detectstring-pattern-negate--false-マッチの真偽][★★★ ~str_detect(string, pattern, negate = FALSE)~ マッチの真偽]]
    - [[#-str_startsstring-pattern-negate--false-先頭マッチの真偽][★★★ ~str_starts(string, pattern, negate = FALSE)~ 先頭マッチの真偽]]
    - [[#-str_endsstring-pattern-negate--false-末尾マッチの真偽][★★★ ~str_ends(string, pattern, negate = FALSE)~ 末尾マッチの真偽]]
    - [[#-str_whichstring-pattern-negate--false-マッチしたインデックス][★★☆ ~str_which(string, pattern, negate = FALSE)~ マッチしたインデックス]]
    - [[#-str_countstring-pattern---マッチした数をカウント][★☆☆ ~str_count(string, pattern = "")~ マッチした数をカウント]]
    - [[#-str_locatestring-pattern-マッチした開始終了位置][★☆☆ ~str_locate(string, pattern)~ マッチした開始・終了位置]]
    - [[#-str_locate_allstring-pattern-マッチした開始終了位置][★☆☆ ~str_locate_all(string, pattern)~ マッチした開始・終了位置]]
  - [[#長さの操作調整][長さの操作・調整]]
    - [[#-str_lengthstring-文字数をカウント][★★☆ ~str_length(string)~ 文字数をカウント]]
    - [[#-str_trimstring-side--cboth-left-right-空白を除去][★★☆ ~str_trim(string, side = c("both", "left", "right"))~ 空白を除去]]
    - [[#-str_squishstring-複数の空白を除去][★☆☆ ~str_squish(string)~ 複数の空白を除去]]
    - [[#-str_padstring-width-side--cleft-right-both-pad----文字埋め][★★☆ ~str_pad(string, width, side = c("left", "right", "both"), pad = " ")~ 文字埋め]]
    - [[#-str_truncstring-width-side--cright-left-center-ellipsis---文字埋め][★☆☆ ~str_trunc(string, width, side = c("right", "left", "center"), ellipsis = "...")~ 文字埋め]]
    - [[#-str_wrapstring-width--80-indent--0-exdent--0-折り返す][★☆☆ ~str_wrap(string, width = 80, indent = 0, exdent = 0)~ 折り返す]]
  - [[#並び替え][並び替え]]
    - [[#-str_orderx-decreasing--false-na_last--true-locale--en-numeric--false--並び順][★☆☆ ~str_order(x, decreasing = FALSE, na_last = TRUE, locale = "en", numeric = FALSE, ...)~ 並び順]]
    - [[#-str_sortx-decreasing--false-na_last--true-locale--en-numeric--false--ソート][★☆☆ ~str_sort(x, decreasing = FALSE, na_last = TRUE, locale = "en", numeric = FALSE, ...)~ ソート]]
  - [[#その他][その他]]
    - [[#-str_convstring-encoding-文字コード変換][★☆☆ ~str_conv(string, encoding)~ 文字コード変換]]
    - [[#-str_viewstring-pattern-match--na-最初のマッチを-html-表示][★☆☆ ~str_view(string, pattern, match = NA)~ 最初のマッチを HTML 表示]]
    - [[#-str_view_allstring-pattern-match--na-全てのマッチを-html-表示][★☆☆ ~str_view_all(string, pattern, match = NA)~ 全てのマッチを HTML 表示]]
  - [[#正規表現オプション][正規表現オプション]]
    - [[#-fixedpattern-ignore_case--false][★☆☆ ~fixed(pattern, ignore_case = FALSE)~.]]
    - [[#-collpattern-ignore_case--false-locale--en-][★☆☆ ~coll(pattern, ignore_case = FALSE, locale = "en", ...)~.]]
    - [[#-regexpattern-ignore_case--false-multiline--false-comments--false-dotall--false-][★☆☆ ~regex(pattern, ignore_case = FALSE, multiline = FALSE, comments = FALSE, dotall = FALSE, ...)~.]]
    - [[#-boundarytype--ccharacter-line_break-sentence-word-skip_word_none--na-][★☆☆ ~boundary(type = c("character", "line_break", "sentence", "word"), skip_word_none = NA, ...)~.]]
- [[#実行環境][実行環境]]
- [[#参考リンク][参考リンク]]
#+END_QUOTE

* ライブラリの読み込みとバージョンの確認

#+begin_src R :results silent
library(fs)
#+end_src
\\

- バージョン
#+begin_src R :exports both
packageVersion("fs")
#+end_src

#+RESULTS:
: [1] ‘1.3.1’
\\

* 関数リスト
** Basic operations
*** Create
**** ★★☆ ~dir_create(path, ..., mode = "u=rwx,go=rx", recurse = TRUE, recursive)~.

#+begin_src R :exports both
created_dir <- dir_create("/tmp/fs_tmp/")
created_dir
#+end_src

#+RESULTS:
: /tmp/fs_tmp
\\

**** ★★★ ~file_create(path, ..., mode = "u=rw,go=r")~.

#+begin_src R :exports both
created_file <- file_create("/tmp/fs_tmp/test.txt")
created_file
#+end_src

#+RESULTS:
: 
: /tmp/fs_tmp/test.txt
\\

**** ★☆☆ ~link_create(path, new_path, symbolic = TRUE)~.
\\
*** Copy
**** ★★☆ ~dir_copy(path, new_path, overwrite = FALSE)~.

#+begin_src R
copied_dir <- dir_copy("/tmp/fs_tmp/", "/tmp/fs_tmp2/")
copied_dir
#+end_src

#+RESULTS:
: /tmp/fs_tmp2

**** ★★☆ ~file_copy(path, new_path, overwrite = FALSE)~.
**** ★★☆ ~link_copy(path, new_path, overwrite = FALSE)~.
*** Existence
**** ★★☆ ~dir_exists(path)~.

#+begin_src R
dir_exists("/tmp/fs_tmp/")
dir_exists("/tmp/fs_tmp")
#+end_src

#+RESULTS:
: /tmp/fs_tmp 
:        TRUE
: /tmp/fs_tmp 
:        TRUE

**** ★★☆ ~file_exists(path)~.
**** ★★☆ ~link_exists(path)~.
*** Info
**** ★★☆ ~dir_info(path = ".", all = FALSE, recurse = FALSE, type = "any", regexp = NULL, glob = NULL, fail = TRUE, ...)~.

- ~data.frame~ で返す
#+begin_src R :results value :exports both
dir_info("/tmp/fs_tmp/")
#+end_src

#+RESULTS:
| path                 | type | size | permissions | modification_time   | user | group | device_id | hard_links | special_device_id |    inode | block_size | blocks | flags | generation | access_time         | change_time         | birth_time          |
|----------------------+------+------+-------------+---------------------+------+-------+-----------+------------+-------------------+----------+------------+--------+-------+------------+---------------------+---------------------+---------------------|
| /tmp/fs_tmp/test.txt | file |    0 | rw-r--r--   | 2019-10-21 16:10:56 | shun | shun  |     66306 |          1 |                 0 | 27657317 |       4096 |      0 |     0 |          0 | 2019-10-21 16:10:56 | 2019-10-21 16:10:56 | 2019-10-21 16:10:56 |
\\

**** ★★☆ ~file_info(path, fail = TRUE)~.
*** Delete
**** ★★☆ ~dir_delete(path)~.
**** ★★☆ ~file_delete(path)~.
**** ★★☆ ~link_delete(path)~.
** Direcotry
*** ★★★ ~dir_ls(path = ".", all = FALSE, recurse = FALSE, type = "any", glob = NULL, regexp = NULL, invert = FALSE, fail = TRUE, ..., recursive)~.
*** ★☆☆ ~dir_map(path = ".", fun, all = FALSE, recurse = FALSE, type = "any", fail = TRUE)~.
*** ★☆☆ ~dir_tree(path = ".", recurse = TRUE, ...)~.

#+begin_src R :exports both
dir_tree("/tmp/fs_tmp")
#+end_src

#+RESULTS:
: /tmp/fs_tmp
: └── test.txt

*** ★☆☆ ~dir_walk(path = ".", fun, all = FALSE, recurse = FALSE, type = "any", fail = TRUE)~.
** File
*** ★☆☆ ~file_access(path, mode = "exists")~.
*** ★☆☆ ~file_chmod(path, mode)~.
*** ★☆☆ ~file_chown(path, user_id = NULL, group_id = NULL)~.
*** ★☆☆ ~file_move(path, new_path)~.
*** ★☆☆ ~file_show(path = ".", browser = getOption("browser"))~.
*** ★☆☆ ~file_size(path, fail = TRUE)~.
*** ★☆☆ ~file_temp(pattern = "file", tmp_dir = tempdir(), ext = "")~.
*** ★☆☆ ~file_temp_pop()~.
*** ★☆☆ ~file_temp_push(path)~.
*** ★☆☆ ~file_touch(path, access_time = Sys.time(), modification_time = access_time)~.
** Link
*** ★☆☆ ~link_path(path)~.
** Path
*** ★☆☆ ~path(..., ext = "")~.
*** ★☆☆ ~path_abs(path, start = ".")~.
*** ★☆☆ ~path_common(path)~.
*** ★☆☆ ~path_dir(path)~.
*** ★☆☆ ~path_expand(path)~.
*** ★☆☆ ~path_expand_r(path)~.
*** ★☆☆ ~path_ext(path)~.
*** ★☆☆ ~path_ext_remove(path)~.
*** ★☆☆ ~path_ext_set(path, ext)~.
*** ★☆☆ ~path_ext<-(path, value)~.
*** ★☆☆ ~path_file(path)~.
*** ★☆☆ ~path_filter(path, glob = NULL, regexp = NULL, invert = FALSE, ...)~.
*** ★☆☆ ~path_has_parent(path, parent)~.
*** ★☆☆ ~path_home(...)~.
*** ★☆☆ ~path_home_r(...)~.
*** ★☆☆ ~path_join(parts)~.
*** ★☆☆ ~path_norm(path)~.
*** ★☆☆ ~path_package(package, ...)~.
*** ★☆☆ ~path_real(path)~.
*** ★☆☆ ~path_rel(path, start = ".")~.
*** ★☆☆ ~path_sanitize(filename, replacement = "")~.
*** ★☆☆ ~path_split(path)~.
*** ★☆☆ ~path_temp(...)~.
*** ★☆☆ ~path_tidy(path)~.
*** ★☆☆ ~path_wd(..., ext = "")~.
** Predicates
*** ★☆☆ ~is_absolute_path(path)~.
*** ★☆☆ ~is_dir(path)~.
*** ★☆☆ ~is_file(path)~.
*** ★☆☆ ~is_file_empty(path)~.
*** ★☆☆ ~is_link(path)~.
** Others
*** ★☆☆ ~as_fs_bytes(x)~.
*** ★☆☆ ~as_fs_path(x)~.
*** ★☆☆ ~as_fs_perms(x, ...)~.
*** ★☆☆ ~fs_bytes(x)~.
*** ★☆☆ ~fs_path(x)~.
*** ★☆☆ ~fs_perms(x, ...)~.
*** ★☆☆ ~group_ids()~.
*** ★☆☆ ~user_ids()~.
* 実行環境

#+begin_src R :results output :exports both
sessionInfo()
#+end_src

#+RESULTS:
#+begin_example
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] fs_1.3.1

loaded via a namespace (and not attached):
[1] compiler_3.6.1 tools_3.6.1    Rcpp_1.0.2     pacman_0.5.1
#+end_example
\\

* 参考リンク

- [[https://fs.r-lib.org/][公式サイト]]
- [[https://cloud.r-project.org/web/packages/fs/index.html][CRAN]]
- [[https://cloud.r-project.org/web/packages/fs/fs.pdf][Reference Manual]]
- [[https://github.com/r-lib/fs][Github Repo]]
- Vignette
  - [[https://cloud.r-project.org/web/packages/fs/vignettes/function-comparisons.html][Comparison of fs functions, base R, and shell commands]]
    
