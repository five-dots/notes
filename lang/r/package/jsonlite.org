#+STARTUP: folded indent
#+PROPERTY: header-args:R :results output :session *R:jsonlite*

* ~{jsonlite}~: A Robust, High Performance JSON Parser and Generator for R :noexport:

~{jsonlite}~ は R で JSON を扱うためのパッケージ。
\\

* 目次                                                                :quote:
#+BEGIN_QUOTE
- [[#ライブラリの読み込みとバージョンの確認][ライブラリの読み込みとバージョンの確認]]
- [[#関数リスト][関数リスト]]
  - [[#fromto-files][From/To Files]]
    - [[#-read_jsonpath-simplifyvector--false-][★★★ ~read_json(path, simplifyVector = FALSE, ...)~.]]
    - [[#parse_jsonjson-simplifyvector--false-][parse_json(json, simplifyVector = FALSE, ...)]]
    - [[#write_jsonx-path-][write_json(x, path, ...)]]
  - [[#fromto-r-objects][From/To R Objects]]
    - [[#tojsonx-dataframe--crows-columns-values-matrix--crowmajor-columnmajor-date--ciso8601-epoch-posixt--cstring-iso8601-epoch-mongo-factor--cstring-integer-complex--cstring-list-raw--cbase64-hex-mongo-null--clist-null-na--cnull-string-auto_unbox--false-digits--4-pretty--false-force--false-][toJSON(x, dataframe = c("rows", "columns", "values"), matrix = c("rowmajor", "columnmajor"), Date = c("ISO8601", "epoch"), POSIXt = c("string", "ISO8601", "epoch", "mongo"), factor = c("string", "integer"), complex = c("string", "list"), raw = c("base64", "hex", "mongo"), null = c("list", "null"), na = c("null", "string"), auto_unbox = FALSE, digits = 4, pretty = FALSE, force = FALSE, ...)]]
    - [[#fromjsontxt-simplifyvector--true-simplifydataframe--simplifyvector-simplifymatrix--simplifyvector-flatten--false-][fromJSON(txt, simplifyVector = TRUE, simplifyDataFrame = simplifyVector, simplifyMatrix = simplifyVector, flatten = FALSE, ...)]]
  - [[#others][Others]]
    - [[#base64_decinput][base64_dec(input)]]
    - [[#base64_encinput][base64_enc(input)]]
    - [[#flattenx-recursive--true][flatten(x, recursive = TRUE)]]
    - [[#minifytxt][minify(txt)]]
    - [[#prettifytxt-indent--4][prettify(txt, indent = 4)]]
    - [[#rbind_pagespages][rbind_pages(pages)]]
    - [[#serializejsonx-digits--8-pretty--false][serializeJSON(x, digits = 8, pretty = FALSE)]]
    - [[#stream_incon-handler--null-pagesize--500-verbose--true-][stream_in(con, handler = NULL, pagesize = 500, verbose = TRUE, ...)]]
    - [[#stream_outx-con--stdout-pagesize--500-verbose--true-prefix---][stream_out(x, con = stdout(), pagesize = 500, verbose = TRUE, prefix = "", ...)]]
    - [[#unboxx][unbox(x)]]
    - [[#unserializejsontxt][unserializeJSON(txt)]]
    - [[#validatetxt][validate(txt)]]
- [[#実行環境][実行環境]]
- [[#参考リンク][参考リンク]]
#+END_QUOTE

* ライブラリの読み込みとバージョンの確認
  
#+begin_src R :results silent
library(jsonlite)
library(tidyverse)
#+end_src
\\

- バージョン
#+begin_src R :exports both
packageVersion("jsonlite")
#+end_src

#+RESULTS:
: [1] ‘1.6’
\\

* 関数リスト
** From/To Files
*** ★★☆ ~read_json(path, simplifyVector = FALSE, ...)~.

- デフォルトは ~list~ で読み込む
#+begin_src R :exports both
tmp <- R.utils::tmpfile()
write_json(iris, tmp)
json <- read_json(tmp)
json[[1]]
#+end_src

#+RESULTS:
#+begin_example

$Sepal.Length
[1] 5.1

$Sepal.Width
[1] 3.5

$Petal.Length
[1] 1.4

$Petal.Width
[1] 0.2

$Species
[1] "setosa"
#+end_example
\\

- ~data.frame~ で読み込む
#+begin_src R :results value :colnames yes
json2 <- read_json(tmp, simplifyVector = TRUE)
head(json2)
#+end_src

#+RESULTS:
| Sepal.Length | Sepal.Width | Petal.Length | Petal.Width | Species |
|--------------+-------------+--------------+-------------+---------|
|          5.1 |         3.5 |          1.4 |         0.2 | setosa  |
|          4.9 |           3 |          1.4 |         0.2 | setosa  |
|          4.7 |         3.2 |          1.3 |         0.2 | setosa  |
|          4.6 |         3.1 |          1.5 |         0.2 | setosa  |
|            5 |         3.6 |          1.4 |         0.2 | setosa  |
|          5.4 |         3.9 |          1.7 |         0.4 | setosa  |
\\

*** ★☆☆ ~parse_json(json, simplifyVector = FALSE, ...)~.
*** ★☆☆ ~write_json(x, path, ...)~.
** From/To R Objects
*** ★★☆ ~toJSON(x, dataframe = c("rows", "columns", "values"), matrix = c("rowmajor", "columnmajor"), Date = c("ISO8601", "epoch"), POSIXt = c("string", "ISO8601", "epoch", "mongo"), factor = c("string", "integer"), complex = c("string", "list"), raw = c("base64", "hex", "mongo"), null = c("list", "null"), na = c("null", "string"), auto_unbox = FALSE, digits = 4, pretty = FALSE, force = FALSE, ...)~.

#+begin_src R
iris_j <- toJSON(iris[1:10, ])
iris_j
#+end_src

#+RESULTS:
: 
: [{"Sepal.Length":5.1,"Sepal.Width":3.5,"Petal.Length":1.4,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":4.9,"Sepal.Width":3,"Petal.Length":1.4,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":4.7,"Sepal.Width":3.2,"Petal.Length":1.3,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":4.6,"Sepal.Width":3.1,"Petal.Length":1.5,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":5,"Sepal.Width":3.6,"Petal.Length":1.4,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":5.4,"Sepal.Width":3.9,"Petal.Length":1.7,"Petal.Width":0.4,"Species":"setosa"},{"Sepal.Length":4.6,"Sepal.Width":3.4,"Petal.Length":1.4,"Petal.Width":0.3,"Species":"setosa"},{"Sepal.Length":5,"Sepal.Width":3.4,"Petal.Length":1.5,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":4.4,"Sepal.Width":2.9,"Petal.Length":1.4,"Petal.Width":0.2,"Species":"setosa"},{"Sepal.Length":4.9,"Sepal.Width":3.1,"Petal.Length":1.5,"Petal.Width":0.1,"Species":"setosa"}]
\\

*** ★★★ ~fromJSON(txt, simplifyVector = TRUE, simplifyDataFrame = simplifyVector, simplifyMatrix = simplifyVector, flatten = FALSE, ...)~.

#+begin_src R :results value :colnames yes
fromJSON(iris_j)
#+end_src

#+RESULTS:
| Sepal.Length | Sepal.Width | Petal.Length | Petal.Width | Species |
|--------------+-------------+--------------+-------------+---------|
|          5.1 |         3.5 |          1.4 |         0.2 | setosa  |
|          4.9 |           3 |          1.4 |         0.2 | setosa  |
|          4.7 |         3.2 |          1.3 |         0.2 | setosa  |
|          4.6 |         3.1 |          1.5 |         0.2 | setosa  |
|            5 |         3.6 |          1.4 |         0.2 | setosa  |
|          5.4 |         3.9 |          1.7 |         0.4 | setosa  |
|          4.6 |         3.4 |          1.4 |         0.3 | setosa  |
|            5 |         3.4 |          1.5 |         0.2 | setosa  |
|          4.4 |         2.9 |          1.4 |         0.2 | setosa  |
|          4.9 |         3.1 |          1.5 |         0.1 | setosa  |
\\

** Others
*** ★☆☆ ~base64_dec(input)~.
*** ★☆☆ ~base64_enc(input)~.
*** ★☆☆ ~flatten(x, recursive = TRUE)~.
*** ★☆☆ ~minify(txt)~.
*** ★☆☆ ~prettify(txt, indent = 4)~.
*** ★☆☆ ~rbind_pages(pages)~.
*** ★☆☆ ~serializeJSON(x, digits = 8, pretty = FALSE)~.
*** ★☆☆ ~stream_in(con, handler = NULL, pagesize = 500, verbose = TRUE, ...)~.
*** ★☆☆ ~stream_out(x, con = stdout(), pagesize = 500, verbose = TRUE, prefix = "", ...)~.
*** ★☆☆ ~unbox(x)~.
*** ★☆☆ ~unserializeJSON(txt)~.
*** ★☆☆ ~validate(txt)~.
\\
* 実行環境

#+begin_src R :results output :exports both
sessionInfo()
#+end_src

#+RESULTS:
#+begin_example
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] forcats_0.4.0   stringr_1.4.0   dplyr_0.8.3     purrr_0.3.3    
 [5] readr_1.3.1     tidyr_1.0.0     tibble_2.1.3    ggplot2_3.2.1  
 [9] tidyverse_1.2.1 jsonlite_1.6   

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2        cellranger_1.1.0  pillar_1.4.2      compiler_3.6.1   
 [5] prettyunits_1.0.2 progress_1.2.2    tools_3.6.1       zeallot_0.1.0    
 [9] lubridate_1.7.4   lifecycle_0.1.0   nlme_3.1-141      gtable_0.3.0     
[13] lattice_0.20-38   pkgconfig_2.0.3   rlang_0.4.0       cli_1.9.9.9000   
[17] rstudioapi_0.10   haven_2.1.1       withr_2.1.2       xml2_1.2.2       
[21] httr_1.4.1        generics_0.0.2    vctrs_0.2.0       hms_0.5.1        
[25] grid_3.6.1        tidyselect_0.2.5  glue_1.3.1        R6_2.4.0         
[29] fansi_0.4.0       readxl_1.3.1      modelr_0.1.5      magrittr_1.5     
[33] backports_1.1.5   scales_1.0.0      rvest_0.3.4       assertthat_0.2.1 
[37] colorspace_1.4-1  stringi_1.4.3     lazyeval_0.2.2    munsell_0.5.0    
[41] broom_0.5.2       crayon_1.3.4
#+end_example
\\

* 参考リンク

- [[https://arxiv.org/abs/1403.2805][公式サイト]]
- [[https://cran.r-project.org/web/packages/jsonlite/index.html][CRAN]]
- [[https://cran.r-project.org/web/packages/jsonlite/jsonlite.pdf][Reference Manual]]
- [[https://github.com/jeroen/jsonlite][Github Repo]]
- Vignette
  - [[https://cran.r-project.org/web/packages/jsonlite/vignettes/json-aaquickstart.html][Getting started with JSON and jsonlite]]
  - [[https://cran.r-project.org/web/packages/jsonlite/vignettes/json-apis.html][Fetching JSON data from REST APIs]]
  - [[https://cran.r-project.org/web/packages/jsonlite/vignettes/json-paging.html][Combining pages of JSON data with jsonlite]]
  - [[https://cran.r-project.org/web/packages/jsonlite/vignettes/json-mapping.pdf][A mapping between JSON data and R objects(PDF)]]
  - [[https://cran.r-project.org/web/packages/jsonlite/vignettes/json-opencpu.pdf][Simple JSON RPC with OpenCPU(PDF)]]
- Blog
  - [[https://notchained.hatenablog.com/entry/2017/01/06/150736][メモ：RでJSONファイルを読み書きするときはjsonlite::read_json(), jsonlite::write_json()@Technically, technophobic.]]
    
