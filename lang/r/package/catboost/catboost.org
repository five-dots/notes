
#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results output :session *R:catboost* :width 640 :height 480 :colnames yes

* ={catboost}=
* [[file:./../general/tree_models.org][List of Tree Models]]
* ライブラリの読み込み

#+begin_src R :results silent
library(tidyverse)
library(catboost)
#+end_src

* 全関数

#+begin_src R
pacman::p_funs(catboost)
#+end_src

#+RESULTS:
:  [1] "catboost.caret"                  "catboost.cv"                    
:  [3] "catboost.drop_unused_features"   "catboost.get_feature_importance"
:  [5] "catboost.get_model_params"       "catboost.get_object_importance" 
:  [7] "catboost.load_model"             "catboost.load_pool"             
:  [9] "catboost.predict"                "catboost.save_model"            
: [11] "catboost.save_pool"              "catboost.shrink"                
: [13] "catboost.staged_predict"         "catboost.sum_models"            
: [15] "catboost.train"

* Reference

- =catboost.Pool= class
- nrow, ncol, colnames などの関数が使える
#+begin_src R :results silent
catboost.load_pool(
  data, # file, matrix or data.frame
  label = NULL, # vector or matrix
  cat_features = NULL,
  column_description = NULL,
  pairs = NULL,
  delimiter = "\t",
  has_header = FALSE,
  weight = NULL,
  group_id = NULL,
  group_weight = NULL,
  subgroup_id = NULL,
  pairs_weight = NULL,
  baseline = NULL,
  feature_names = NULL,
  thread_count = -1
)
#+end_src

- train メソッド
#+begin_src R
catboost.train(
  learn_pool,
  test_pool = NULL,
  params = list()
)

catboost.cv(
  pool,
  params = list(),
  fold_count = 3,
  type = "Classical",
  partition_random_seed = 0,
  shuffle = TRUE,
  stratified = FALSE,
  early_stopping_rounds = NULL
)
#+end_src

- predict メソッド
#+begin_src R
catboost.predict(
  model, # catboost.Model obj
  pool, # catboost.Pool obj
  verbose = FALSE,
  prediction_type = "RawFormulaVal", # 'Probability', 'Class' ,'RawFormulaVal'
  ntree_start = 0,
  ntree_end = 0,
  thread_count = -1
)
#+end_src

* [[https://github.com/catboost/tutorials/blob/master/r_tutorial.ipynb][R Tutorial]]
** データ

#+begin_src R
train_path = system.file("extdata", "adult_train.1000", package="catboost")
test_path = system.file("extdata", "adult_test.1000", package="catboost")

column_description_vector = rep('numeric', 15)
cat_features <- c(3, 5, 7, 8, 9, 10, 11, 15)
for (i in cat_features)
  column_description_vector[i] <- 'factor'

train <- read.table(train_path, head = F, sep = "\t", colClasses = column_description_vector,
                    na.strings='NAN')
test <- read.table(test_path, head = F, sep = "\t", colClasses = column_description_vector,
                   na.strings='NAN')

target <- c(1)
train_pool <- catboost.load_pool(data=train[,-target], label = train[,target])
test_pool <- catboost.load_pool(data=test[,-target], label = test[,target])
class(train_pool)
#+end_src

#+RESULTS:
: [1] "catboost.Pool"

** 当てはめ

#+begin_src R
fit_params <- list(
  iterations       = 100,
  thread_count     = 10,
  loss_function    = 'Logloss',
  ignored_features = c(4,9),
  border_count     = 32,
  depth            = 5,
  learning_rate    = 0.03,
  l2_leaf_reg      = 3.5,
  train_dir        = 'train_dir',
  logging_level    = 'Silent'
)
model <- catboost.train(train_pool, test_pool, fit_params)
class(model)
model
#+end_src

#+RESULTS:
#+begin_example
[1] "catboost.Model"
$handle
<pointer: 0x107a16a40>

$raw
   [1] 43 42 4d 31 90 e6 00 00 14 00 00 00 00 00 00 00 0c 00 14 00 04 00 08 00
  [25] 0c 00 10 00 0c 00 00 00 30 00 00 00 dc 13 00 00 10 00 00 00 04 00 00 00
  [49] 01 00 00 00 34 00 00 00 05 00 00 00 2c 11 00 00 e8 10 00 00 94 0d 00 00
  [73] 4c 0d 00 00 34 00 00 00 12 00 00 00 46 6c 61 62 75 66 66 65 72 73 4d 6f
  [97] 64 65 6c 5f 76 31 00 00 12 00 00 00 73 74 61 74 69 63 5f 70 72 6f 76 69
 [121] 64 65 72 5f 76 31 00 00 34 1d ff ff 04 0d 00 00 04 00 00 00 f7 0c 00 00
 [145] 7b 22 64 65 74 61 69 6c 65 64 5f 70 72 6f 66 69 6c 65 22 3a 66 61 6c 73
 [169] 65 2c 22 62 6f 6f 73 74 69 6e 67 5f 6f 70 74 69 6f 6e 73 22 3a 7b 22 61
 [193] 70 70 72 6f 78 5f 6f 6e 5f 66 75 6c 6c 5f 68 69 73 74 6f 72 79 22 3a 66
 [217] 61 6c 73 65 2c 22 66 6f 6c 64 5f 6c 65 6e 5f 6d 75 6c 74 69 70 6c 69 65
 [241] 72 22 3a 32 2c 22 66 6f 6c 64 5f 70 65 72 6d 75 74 61 74 69 6f 6e 5f 62
 [265] 6c 6f 63 6b 22 3a 30 2c 22 62 6f 6f 73 74 69 6e 67 5f 74 79 70 65 22 3a
 [289] 22 50 6c 61 69 6e 22 2c 22 69 74 65 72 61 74 69 6f 6e 73 22 3a 31 30 30
 [313] 2c 22 6d 6f 64 65 6c 5f 73 68 72 69 6e 6b 5f 72 61 74 65 22 3a 30 2c 22
 [337] 6f 64 5f 63 6f 6e 66 69 67 22 3a 7b 22 77 61 69 74 5f 69 74 65 72 61 74
 [361] 69 6f 6e 73 22 3a 32 30 2c 22 74 79 70 65 22 3a 22 4e 6f 6e 65 22 2c 22
 [385] 73 74 6f 70 5f 70 76 61 6c 75 65 22 3a 30 7d 2c 22 62 6f 6f 73 74 5f 66
 [409] 72 6f 6d 5f 61 76 65 72 61 67 65 22 3a 66 61 6c 73 65 2c 22 70 65 72 6d
 [433] 75 74 61 74 69 6f 6e 5f 63 6f 75 6e 74 22 3a 34 2c 22 6c 65 61 72 6e 69
 [457] 6e 67 5f 72 61 74 65 22 3a 30 2e 30 32 39 39 39 39 39 39 39 33 33 7d 2c
 [481] 22 6d 65 74 72 69 63 73 22 3a 7b 22 6f 62 6a 65 63 74 69 76 65 5f 6d 65
 [505] 74 72 69 63 22 3a 7b 22 74 79 70 65 22 3a 22 4c 6f 67 6c 6f 73 73 22 2c
 [529] 22 70 61 72 61 6d 73 22 3a 7b 7d 7d 2c 22 65 76 61 6c 5f 6d 65 74 72 69
 [553] 63 22 3a 7b 22 74 79 70 65 22 3a 22 4c 6f 67 6c 6f 73 73 22 2c 22 70 61
 [577] 72 61 6d 73 22 3a 7b 7d 7d 2c 22 63 75 73 74 6f 6d 5f 6d 65 74 72 69 63
 [601] 73 22 3a 5b 5d 7d 2c 22 6d 65 74 61 64 61 74 61 22 3a 7b 7d 2c 22 63 61
 [625] 74 5f 66 65 61 74 75 72 65 5f 70 61 72 61 6d 73 22 3a 7b 22 73 74 6f 72
 [649] 65 5f 61 6c 6c 5f 73 69 6d 70 6c 65 5f 63 74 72 22 3a 66 61 6c 73 65 2c
 [673] 22 63 74 72 5f 6c 65 61 66 5f 63 6f 75 6e 74 5f 6c 69 6d 69 74 22 3a 31
 [697] 38 34 34 36 37 34 34 30 37 33 37 30 39 35 35 31 36 31 35 2c 22 73 69 6d
 [721] 70 6c 65 5f 63 74 72 73 22 3a 5b 7b 22 63 74 72 5f 62 69 6e 61 72 69 7a
 [745] 61 74 69 6f 6e 22 3a 7b 22 62 6f 72 64 65 72 5f 63 6f 75 6e 74 22 3a 31
 [769] 35 2c 22 62 6f 72 64 65 72 5f 74 79 70 65 22 3a 22 55 6e 69 66 6f 72 6d
 [793] 22 7d 2c 22 74 61 72 67 65 74 5f 62 69 6e 61 72 69 7a 61 74 69 6f 6e 22
 [817] 3a 7b 22 62 6f 72 64 65 72 5f 63 6f 75 6e 74 22 3a 31 2c 22 62 6f 72 64
 [841] 65 72 5f 74 79 70 65 22 3a 22 4d 69 6e 45 6e 74 72 6f 70 79 22 7d 2c 22
 [865] 70 72 69 6f 72 5f 65 73 74 69 6d 61 74 69 6f 6e 22 3a 22 4e 6f 22 2c 22
 [889] 70 72 69 6f 72 73 22 3a 5b 5b 30 2c 31 5d 2c 5b 30 2e 35 2c 31 5d 2c 5b
 [913] 31 2c 31 5d 5d 2c 22 63 74 72 5f 74 79 70 65 22 3a 22 42 6f 72 64 65 72
 [937] 73 22 7d 2c 7b 22 63 74 72 5f 62 69 6e 61 72 69 7a 61 74 69 6f 6e 22 3a
 [961] 7b 22 62 6f 72 64 65 72 5f 63 6f 75 6e 74 22 3a 31 35 2c 22 62 6f 72 64
 [985] 65 72 5f 74 79 70 65 22 3a 22 55 6e 69 66 6f 72
 [ reached getOption("max.print") -- omitted 63160 entries ]

$feature_importances
          [,1]
V2   4.8351601
V3   0.6282719
V4   0.3590358
V5  12.0475178
V6   0.0000000
V7  16.7281365
V8  14.8822650
V9  34.3260767
V10  0.2452127
V11  0.0000000
V12 11.2170518
V13  0.2650176
V14  4.4662540
V15  0.0000000

$tree_count
[1] 100

attr(,"class")
[1] "catboost.Model"
#+end_example

** 予測

- Probability
#+begin_src R
prediction <- catboost.predict(model, test_pool, prediction_type = 'Probability')
cat("Sample predictions: ", sample(prediction, 5), "\n")
#+end_src

#+RESULTS:
: Sample predictions:  0.2747081 0.4272914 0.1410019 0.143347 0.9206163

- Class
#+begin_src R
labels <- catboost.predict(model, test_pool, prediction_type = 'Class')
table(labels, test[,target])
#+end_src

#+RESULTS:
:       
: labels  -1   1
:      0 421 114
:      1  79 386

#+begin_src R
calc_accuracy <- function(prediction, expected) {
  labels <- ifelse(prediction > 0.5, 1, -1)
  accuracy <- sum(labels == expected) / length(labels)
  return(accuracy)
}
accuracy <- calc_accuracy(prediction, test[,target])
cat("\nAccuracy: ", accuracy, "\n")
#+end_src

#+RESULTS:
: 
: Accuracy:  0.807

** Importance

#+begin_src R
catboost.get_feature_importance(model, train_pool)
#+end_src

#+RESULTS:
#+begin_example
          [,1]
V2   4.8351601
V3   0.6282719
V4   0.3590358
V5  12.0475178
V6   0.0000000
V7  16.7281365
V8  14.8822650
V9  34.3260767
V10  0.2452127
V11  0.0000000
V12 11.2170518
V13  0.2650176
V14  4.4662540
V15  0.0000000
#+end_example

* 参考

- [[https://catboost.ai/][公式サイト]]
- [[https://github.com/catboost/catboost][Github repo]]
- Vignette
  - [[https://github.com/catboost/tutorials/blob/master/r_tutorial.ipynb][R Tutorial]]

- Blog
  - [[https://qiita.com/fu23/items/02f9a58e4184fa4b7590][Rでcatboostのインストールとチュートリアルの実行（Windows）@Qiita]]
    
