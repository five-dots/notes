#+STARTUP: folded indent
#+PROPERTY: header-args:R :results value :colnames yes :session *R:readr*

* ~{readr}~: Read flat files (csv, tsv, fwf) into R                  :noexport:

~{readr}~ 
\\

* 目次                                                            :quote:toc:
#+BEGIN_QUOTE
- [[#ライブラリの読み込みとバージョンの確認][ライブラリの読み込みとバージョンの確認]]
- [[#全関数リスト][全関数リスト]]
- [[#関数リスト][関数リスト]]
  - [[#parser-文字列から特定の型へ変換する][Parser 文字列から特定の型へ変換する]]
    - [[#parse_number][parse_number()]]
    - [[#parse_double][parse_double()]]
    - [[#parse_logical][parse_logical()]]
- [[#実行環境][実行環境]]
- [[#参考リンク][参考リンク]]
#+END_QUOTE

* ライブラリの読み込みとバージョンの確認

#+begin_src R :results silent
library(readr)
#+end_src
\\

- バージョン
#+begin_src R :results output :exports both
packageVersion("readr")
#+end_src

#+RESULTS:
: [1] ‘1.3.1’
\\

* 全関数リスト

#+begin_src R :results output
pacman::p_funs(readr)
#+end_src

#+RESULTS:
#+begin_example
  [1] "AccumulateCallback"      "as.col_spec"            
  [3] "ChunkCallback"           "clipboard"              
  [5] "col_character"           "col_date"               
  [7] "col_datetime"            "col_double"             
  [9] "col_factor"              "col_guess"              
 [11] "col_integer"             "col_logical"            
 [13] "col_number"              "col_skip"               
 [15] "col_time"                "cols"                   
 [17] "cols_condense"           "cols_only"              
 [19] "count_fields"            "DataFrameCallback"      
 [21] "datasource"              "date_names"             
 [23] "date_names_lang"         "date_names_langs"       
 [25] "default_locale"          "format_csv"             
 [27] "format_csv2"             "format_delim"           
 [29] "format_tsv"              "fwf_cols"               
 [31] "fwf_empty"               "fwf_positions"          
 [33] "fwf_widths"              "guess_encoding"         
 [35] "guess_parser"            "ListCallback"           
 [37] "locale"                  "melt_csv"               
 [39] "melt_csv_chunked"        "melt_csv2"              
 [41] "melt_csv2_chunked"       "melt_delim"             
 [43] "melt_delim_chunked"      "melt_fwf"               
 [45] "melt_table"              "melt_table2"            
 [47] "melt_tsv"                "melt_tsv_chunked"       
 [49] "output_column"           "parse_character"        
 [51] "parse_date"              "parse_datetime"         
 [53] "parse_double"            "parse_factor"           
 [55] "parse_guess"             "parse_integer"          
 [57] "parse_logical"           "parse_number"           
 [59] "parse_time"              "parse_vector"           
 [61] "problems"                "read_csv"               
 [63] "read_csv_chunked"        "read_csv2"              
 [65] "read_csv2_chunked"       "read_delim"             
 [67] "read_delim_chunked"      "read_file"              
 [69] "read_file_raw"           "read_fwf"               
 [71] "read_lines"              "read_lines_chunked"     
 [73] "read_lines_raw"          "read_lines_raw_chunked" 
 [75] "read_log"                "read_rds"               
 [77] "read_table"              "read_table2"            
 [79] "read_tsv"                "read_tsv_chunked"       
 [81] "readr_example"           "show_progress"          
 [83] "SideEffectChunkCallback" "spec"                   
 [85] "spec_csv"                "spec_csv2"              
 [87] "spec_delim"              "spec_table"             
 [89] "spec_table2"             "spec_tsv"               
 [91] "stop_for_problems"       "tokenize"               
 [93] "tokenizer_csv"           "tokenizer_delim"        
 [95] "tokenizer_fwf"           "tokenizer_line"         
 [97] "tokenizer_log"           "tokenizer_tsv"          
 [99] "tokenizer_ws"            "type_convert"           
[101] "write_csv"               "write_csv2"             
[103] "write_delim"             "write_excel_csv"        
[105] "write_excel_csv2"        "write_file"             
[107] "write_lines"             "write_rds"              
[109] "write_tsv"
#+end_example

* 関数リスト
** Parser 文字列から特定の型へ変換する
*** parse_number()

#+begin_src R :results output :exports both
parse_number("￥10,300 です。")
#+end_src

#+RESULTS:
: [1] 10300

*** parse_double()

#+begin_src R :results output :exports both
parse_double("6e23")
#+end_src

#+RESULTS:
: [1] 6e+23

*** parse_logical()

- 1/0/T/F/TRUE/FALSE を大文字小文字問わず logical に変換
#+begin_src R :results output :exports both
parse_logical("TRUE")
#+end_src

#+RESULTS:
: [1] TRUE

* 実行環境

#+begin_src R :results output :exports both
sessionInfo()
#+end_src

#+RESULTS:
#+begin_example
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] stringr_1.4.0

loaded via a namespace (and not attached):
[1] compiler_3.6.1 magrittr_1.5   tools_3.6.1    stringi_1.4.3
#+end_example
\\

* 参考リンク

- [[https://readr.tidyverse.org/][公式サイト]] 
- [[https://cran.r-project.org/web/packages/readr/index.html][CRAN]]
- [[https://cran.r-project.org/web/packages/readr/readr.pdf][Reference Manual]]
- [[https://github.com/tidyverse/readr][Github Repo]]
- [[https://rawgit.com/rstudio/cheatsheets/master/data-import.pdf][Cheatsheet(PDF)]]
- [[https://r4ds.had.co.nz/][R for Data Science]]
- Vignette
  - [[https://cran.r-project.org/web/packages/readr/vignettes/locales.html][Locales]]
  - [[https://cran.r-project.org/web/packages/readr/vignettes/readr.html][Introduction to readr]]
- Blog
  - [[https://heavywatal.github.io/rstats/readr.html][readr — 高速で柔軟なテーブル読み込み@Heavy Watal]]

