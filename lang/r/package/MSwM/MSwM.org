#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :session *R:time_series* :width 560 :height 420
#+LATEX_HEADER: \usepackage{bm}

* ={MSwM}= Fitting Markov Switching Models
* ライブラリの読み込み

#+begin_src R :results silent
library(tidyverse)
library(glue)
library(lubridate)
library(MSwM)
library(tidyquant)
#+end_src

* TODO

- 次期のレジーム予測
- CAPM + レジーム
- レジーム判定のタイムラグ
- Stan での実装

* 概要

- n 個の状態があり、それに対応する n 個の AR 過程を仮定する
- n x n の遷移確率行列で表されるマルコフ過程に従って状態変化すると仮定する
- EM アルゴリズムを用いて、n 通りある状態のいずれかであったかの事後確率列を求める

: EM アルゴリズム
  - Expectation-Maximization Algorithm 期待値最大化法
  - パラメタを最尤推定する手法のひとつ
   
- ~{MSwM}~ はマルコフ状態転換モデルを推定するに当たって、何かしらの説明変数を仮定
- それとの回帰モデルに基づいて、EM アルゴリズムで事後確率を求める
- いかなる時系列であれ、（どんなに恣意的でも良いので）説明変数を持ってくる必要がある

* 全関数 

#+begin_src R :results output
ls("package:MSwM")
#+end_src

#+RESULTS:
: [1] "AIC"       "intervals" "msmFit"    "msmResid"  "plot"      "plotDiag" 
: [7] "plotProb"  "plotReg"   "summary"

* =msmFit()=

#+begin_src R
msmFit(
  object,
  k,
  sw,
  p,
  data,
  family,
  control)
#+end_src

control paramters
- =trace=:
  A logical value. If it is TRUE, tracing information on the progress of the optimization is produced.

- =maxiter=:
  The maximum number of iterations in the EM method. Default is 100.

- =tol=: 
  Tolerance. 
  The algorithm stops if it is unable to reduce the value by a factor of tol at a step. Default is 1e-8.

- =maxiterOuter=:
  The number of short runs of the EM method to stablish the initial values. Default is 5

- =maxiterInner=:  
  The number of iterations in the EM method in each short run to stablish the initial values. Default is 10

- =parallelization=: 
  A logical value. Whether the process is done by using parallelization or not. Default is TRUE.

* Vignette の例
** 例 1 (2 regimes)
*** データ

- シミュレーションデータ
- 2 レジームの例
  - レジーム 1: 強い自己相関
  - レジーム 2: 外生変数 x のみに反応

$y1_t = 8 + 2x_t + \epsilen, \epsilon \sim N(0,1)$
$y2_t = 1 + 0.9y_{t-1} + \epsilen, \epsilon \sim N(0,0.5)$

#+begin_src R :results value :colnames yes
data(examle)
head(example)
#+end_src

#+RESULTS:
|    x |     y |
|------+-------|
| 0.71 |  9.13 |
| 0.97 |   9.5 |
| 0.07 |  9.98 |
|    1 | 11.14 |
| 0.55 | 11.21 |
| 0.19 | 10.61 |

#+begin_src R :results output graphics file :file (my/get-babel-file)
example %>%
  pivot_longer(c(x, y), names_to = "key", values_to = "val") %>%
  rowid_to_column() %>%
  ggplot(aes(x = rowid, y = val)) +
  geom_line() +
  facet_grid(key ~ ., scales = "free_y")
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-tUcF7k.png]]

*** モデル

#+begin_src R :results output
mod <- lm(y ~ x, data = example)
summary(mod)
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = y ~ x, data = example)

Residuals:
    Min      1Q  Median      3Q     Max 
-2.8998 -0.8429 -0.0427  0.7420  4.0337 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   9.0486     0.1398  64.709  < 2e-16 ***
x             0.8235     0.2423   3.398  0.00077 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.208 on 298 degrees of freedom
Multiple R-squared:  0.03731,	Adjusted R-squared:  0.03408 
F-statistic: 11.55 on 1 and 298 DF,  p-value: 0.0007701
#+end_example

*** 残差チェック

- ホワイトノイズには見えない
#+begin_src R :results graphics :file (my/get-babel-file)
qqnorm(resid(mod))
qqline(resid(mod))
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-0PHb2f.png]]

- 残差に強い自己相関が残っている
#+begin_src R :results output graphics file :file (my/get-babel-file)
acf(resid(mod))
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-BRdXly.png]]

*** マルコフ転換モデル

- sw: 説明変数の数 + 1 の TRUE/FALSE
- このケースでは、切片 + X + AR1 の 3 つ + 1

#+begin_src R :results output
mod_mswm <- msmFit(mod,
                   k = 2, # レジーム数
                   p = 1, # AR次数
                   sw = c(TRUE, TRUE, TRUE, TRUE),
                   control = list(parallel = FALSE))
summary(mod_mswm)
#+end_src

#+RESULTS:
#+begin_example

Error in validMSM.lm(ans) : 
  The length of sw has to be equal of the number of coefficients in the model plus 1

Markov Switching Model

Call: msmFit(object = mod, k = 2, sw = c(TRUE, TRUE, TRUE, TRUE), p = 1, 
    control = list(parallel = FALSE))

       AIC     BIC    logLik
  637.0736 693.479 -312.5368

Coefficients:

Regime 1 
---------
               Estimate Std. Error t value  Pr(>|t|)    
(Intercept)(S)   0.8417     0.3024  2.7834  0.005379 ** 
x(S)            -0.0533     0.1340 -0.3978  0.690778    
y_1(S)           0.9208     0.0305 30.1902 < 2.2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.5034675
Multiple R-squared: 0.8375

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-1.5153667307 -0.0906543205  0.0001873641  0.1656717257  1.2020898978 

Regime 2 
---------
               Estimate Std. Error t value  Pr(>|t|)    
(Intercept)(S)   8.6393     0.7254 11.9097 < 2.2e-16 ***
x(S)             1.8771     0.3107  6.0415 1.527e-09 ***
y_1(S)          -0.0569     0.0798 -0.7130    0.4758    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.9339683
Multiple R-squared: 0.2408

Standardized Residuals:
        Min          Q1         Med          Q3         Max 
-2.31102193 -0.03317755  0.01034138  0.04509105  2.85245597 

Transition probabilities:
           Regime 1   Regime 2
Regime 1 0.98499729 0.02290884
Regime 2 0.01500271 0.97709116
#+end_example

- 遷移確率行列をみると、レジーム間の変動が起こりにくいことがわかる

*** プロット
**** 線グラフ

#+begin_src R :results graphics :file (my/get-babel-file)
plot(mod_mswm)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-ozK0Ah.png]]

**** QQ-Plot

#+begin_src R :results output graphics file :file (my/get-babel-file)
qqnorm(msmResid(mod_mswm))
qqline(msmResid(mod_mswm))
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-0lKdeN.png]]

**** ACF

#+begin_src R :results output graphics file :file (my/get-babel-file)
acf(msmResid(mod_mswm))
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-fmEi1F.png]]

**** plotProb

- ~plotProb(x, which)~
  - 1: represents the plots that contains, for each regime, its smoothed and filtered probabilities..
  - 2:(number of regimes +1): represents plot of the regime minus one with the response variable against the smoothed probabilities.
#+begin_src R :results output graphics file :file (my/get-babel-file)
plotProb(mod_mswm)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-N5w9N7.png]]

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotProb(mod_mswm, which = 1)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-GYyGk2.png]]

**** plotReg

- Comparative plots of response and explanatory variables with regime specifications
#+begin_src R :results output graphics file :file (my/get-babel-file)
plotReg(mod_mswm, regime = 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-81nddn.png]]

**** plotDiag

- ~plotDiag(x, regime, which)~
  - 1: represents the plot of residuals against fitted values.
  - 2: represents the Normal Q-Q plot.
  - 3: represents the ACF/PACF of residuals and ACF/PACF of square residuals.

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(mod_mswm, regime = 1, which = 1)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-7vZTuM.png]]

** 例 2 (traffic data)
*** データ

- 天気と交通事故死者数の関係
- Prec = Precipitaion (降水量)
#+begin_src R :colnames yes
data(traffic)
head(traffic)
#+end_src

#+RESULTS:
| Date       | NDead |             Temp |  Prec |
|------------+-------+------------------+-------|
| 01/01/2010 |     3 | 9.27333333333333 | 109.1 |
| 02/01/2010 |     2 | 8.76179775280899 | 150.3 |
| 03/01/2010 |     3 |  9.4043956043956 | 442.1 |
| 04/01/2010 |     4 |            10.34 | 700.9 |
| 05/01/2010 |     4 | 9.35384615384615 | 132.9 |
| 06/01/2010 |     4 | 7.40888888888889 | 429.2 |

#+begin_src R :results output graphics file :file (my/get-babel-file)
traffic %>%
  pivot_longer(c(NDead, Temp, Prec)) %>%
  mutate(Date = dmy(Date)) %>%
  ggplot(aes(x = Date, y = value)) +
  geom_line() +
  facet_grid(name ~ ., scales = "free_y")
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-jadcup.png]]

*** glm モデル

- 死者数 = カウントデータ なので、ポアソン回帰で分析する
#+begin_src R :results output
model <- glm(NDead ~ Temp + Prec, data = traffic, family = "poisson")
summary(model)
#+end_src

#+RESULTS:
#+begin_example

Call:
glm(formula = NDead ~ Temp
Prec, family = "poisson", data = traffic)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1571  -1.0676  -0.2119   0.8080   3.0629  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)    
(Intercept) 1.1638122  0.0808726  14.391  < 2e-16 ***
Temp        0.0225513  0.0041964   5.374  7.7e-08 ***
Prec        0.0002187  0.0001113   1.964   0.0495 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 597.03  on 364  degrees of freedom
Residual deviance: 567.94  on 362  degrees of freedom
AIC: 1755.9

Number of Fisher Scoring iterations: 5
#+end_example

*** マルコフ転換モデル

#+begin_src R :results output
m1 <- msmFit(object = model, k = 2, sw = c(TRUE, TRUE, TRUE), family = "poisson",
             control = list(parallel = FALSE))
summary(m1)
#+end_src

#+RESULTS:
#+begin_example

Markov Switching Model

Call: msmFit(object = model, k = 2, sw = c(TRUE, TRUE, TRUE), family = "poisson", 
    control = list(parallel = FALSE))

       AIC      BIC    logLik
  1713.877 1772.676 -850.9387

Coefficients:

Regime 1 
---------
               Estimate Std. Error t value Pr(>|t|)    
(Intercept)(S)   1.5658     0.1631  9.6002  < 2e-16 ***
Temp(S)          0.0194     0.0080  2.4250  0.01531 *  
Prec(S)          0.0004     0.0002  2.0000  0.04550 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Regime 2 
---------
               Estimate Std. Error t value  Pr(>|t|)    
(Intercept)(S)   0.7649     0.1983  3.8573 0.0001146 ***
Temp(S)          0.0288     0.0084  3.4286 0.0006067 ***
Prec(S)          0.0002     0.0002  1.0000 0.3173105    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Transition probabilities:
          Regime 1  Regime 2
Regime 1 0.5086244 0.2712396
Regime 2 0.4913756 0.7287604
#+end_example

* [[http://sinhrks.hatenablog.com/entry/2014/10/26/225850][R の {MSwM} パッケージでマルコフ転換モデルをためす@StatsFragments]] の例
** データ

#+begin_src R :results silent
x <- rpois(500, lambda = 10)   # x はポアソン分布に従う
y1 <- x * 4 + 20    # 状態 1のときの x, yの関係
y2 <- x * 2 + 60    # 状態 2のときの x, yの関係

# ノイズ付与
noise <- rnorm(1:500, mean = 10, sd = 5)
y1 <- y1 + noise
y2 <- y2 + noise

# 適当なタイミングで状態転換 (1:200までは状態 1, 201:400までは状態 2, 以降は状態 1)
y <- c(y1[1:200], y2[201:400], y1[401:500])

# 実際に観測されたデータ
observed <- data.frame(x = x, y = y)
#+end_src

** プロット (線グラフ)

- 1:200 までは状態 1, 201:400 までは状態 2, 以降は状態 1
#+begin_src R :results graphics :file (get-babel-file)
observed %>%
  rowid_to_column() %>%
  gather("key", "value", -rowid) %>%
  ggplot(aes(x = rowid, y = value)) +
  geom_line() +
  facet_grid(key ~ ., scales = "free_y")
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-REmCcY.png]]

** プロット (散布図)

- 2 つの状態を合わせたプロット
#+begin_src R :results graphics :file (get-babel-file)
ggplot(observed, aes(x, y)) + geom_point() + geom_smooth()
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-EZRaOt.png]]

** プロット (散布図:状態毎) 

#+begin_src R :results graphics :file (get-babel-file)
bind_rows(data.frame(key = "y1", y = y1, x = x, stringsAsFactors = FALSE),
          data.frame(key = "y2", y = y2, x = x, stringsAsFactors = FALSE)) %>%
  ggplot(aes(x, y)) +
  geom_point() +
  geom_smooth() +
  facet_grid(~ key)
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-Knd75E.png]]

** 回帰モデル

- まずは、ベースとなる線形モデルを作成する (by ~lm()~ or ~glm()~)
#+begin_src R :results output
lm_fit <- lm(y ~ x, data = observed)
summary(lm_fit)
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = y ~ x, data = observed)

Residuals:
    Min      1Q  Median      3Q     Max 
-25.663  -9.600  -2.472  10.632  28.672 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  47.7603     1.6823   28.39   <2e-16 ***
x             3.0617     0.1644   18.63   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 11.68 on 498 degrees of freedom
Multiple R-squared:  0.4107,	Adjusted R-squared:  0.4095 
F-statistic:   347 on 1 and 498 DF,  p-value: < 2.2e-16
#+end_example

** MS モデル

#+begin_src R :results silent
msmFit(
  object, # lm, glm or formula
  k,      # レジーム数
  sw,     # どの係数が Swiching するかを TRUE/FALSE で指定
  p,      # AR モデルの次数
  data,   # data.frame, list or environment
  family, # GLM の場合は、分布を指定
  control)
#+end_src

- 真のモデル
  y1 = x * 4 + 20
  y2 = x * 2 + 60

#+begin_src R :results output
msm_fit <- msmFit(lm_fit, k = 2, sw = c(TRUE, TRUE, TRUE, TRUE), p = 1)
summary(msm_fit)
#+end_src

#+RESULTS:
#+begin_example

Markov Switching Model

Call: msmFit(object = lm_fit, k = 2, sw = c(TRUE, TRUE, TRUE, TRUE), 
    p = 1)

       AIC     BIC    logLik
  3042.169 3104.72 -1515.085

Coefficients:

Regime 1 
---------
               Estimate Std. Error t value Pr(>|t|)    
(Intercept)(S)  72.2196     3.7366 19.3276   <2e-16 ***
x(S)             1.9981     0.1018 19.6277   <2e-16 ***
y_1(S)          -0.0273     0.0408 -0.6691   0.5034    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.836735
Multiple R-squared: 0.6587

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-1.153885e+01 -2.085459e-02 -1.090413e-03 -4.973351e-06  1.337314e+01 

Regime 2 
---------
               Estimate Std. Error t value Pr(>|t|)    
(Intercept)(S)  30.3534     1.0788 28.1363   <2e-16 ***
x(S)             3.9634     0.0928 42.7091   <2e-16 ***
y_1(S)          -0.0006     0.0078 -0.0769   0.9387    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 4.966906
Multiple R-squared: 0.8597

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-13.036728178  -1.047307601   0.002016357   1.107764334  12.019154954 

Transition probabilities:
            Regime 1    Regime 2
Regime 1 0.994982083 0.003349156
Regime 2 0.005017917 0.996650844
#+end_example

** プロット (plotReg)

#+begin_src R :results graphics :file (get-babel-file)
plotReg(msm_fit, regime = 1)
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-XvPRO4.png]]


#+begin_src R :results graphics :file (get-babel-file)
plotReg(msm_fit, regime = 2)
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-vNjHK3.png]]

** プロット (plotProb)

- 各時点がどちらの状態であるかの確率
#+begin_src R :results graphics :file (get-babel-file)
plotProb(msm_fit, which = 1)
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-IsWQw8.png]]

** プロット (残差)

#+begin_src R :results graphics :file (get-babel-file)
plot(msm_fit)
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-t8LTAG.png]]

* SPY の例
** lm

- リターンのモデルを作成する場合は切片のみモデルが最小
#+begin_src R :results output
lm_mod <- lm(c2c_ret ~ 1, data)
summary(lm_mod)
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = c2c_ret ~ 1, data = data)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.067776 -0.003799  0.000167  0.004658  0.048853 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)  
(Intercept) 0.0004368  0.0001979   2.207   0.0274 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.009416 on 2263 degrees of freedom
#+end_example

** msmFit (regime = 2)

#+begin_src R :results output
ms_mod_r2 <- msmFit(lm_mod, k = 2, p = 1, sw = c(TRUE, TRUE, TRUE))
summary(ms_mod_r2)
#+end_src

#+RESULTS:
#+begin_example
Markov Switching Model

Call: msmFit(object = lm_mod, k = 2, sw = c(TRUE, TRUE, TRUE), p = 1)

        AIC       BIC   logLik
  -15452.56 -15398.77 7730.282

Coefficients:

Regime 1 
---------
               Estimate Std. Error t value  Pr(>|t|)    
(Intercept)(S)   0.0012     0.0002  6.0000 1.973e-09 ***
c2c_ret_1(S)    -0.0831     0.0284 -2.9261  0.003432 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.005121971
Multiple R-squared: 0.00792

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-1.420372e-02 -1.886603e-03 -6.752405e-05  1.928871e-03  1.469824e-02 

Regime 2 
---------
               Estimate Std. Error t value Pr(>|t|)
(Intercept)(S)  -0.0008     0.0005  -1.600   0.1096
c2c_ret_1(S)    -0.0387     0.0357  -1.084   0.2784

Residual standard error: 0.0138362
Multiple R-squared: 0.001444

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-0.0666155672 -0.0004594262  0.0001298733  0.0012586298  0.0490338429 

Transition probabilities:
           Regime 1   Regime 2
Regime 1 0.97152342 0.04924836
Regime 2 0.02847658 0.95075164
#+end_example

** msmFit (regime = 3)

#+begin_src R :results output
ms_mod_r3 <- msmFit(lm_mod, k = 3, p = 1, sw = c(TRUE, TRUE, TRUE))
summary(ms_mod_r3)
#+end_src

#+RESULTS:
#+begin_example
Error in solve.default(res$Hessian) : 
  Lapack routine dgesv: system is exactly singular: U[5,5] = 0
Markov Switching Model

Call: msmFit(object = lm_mod, k = 3, sw = c(TRUE, TRUE))

        AIC       BIC   logLik
  -15558.07 -15517.72 7782.036

Coefficients:

Regime 1 
---------
               Estimate Std. Error t value Pr(>|t|)
(Intercept)(S)    4e-04      3e-04  1.3333   0.1824

Residual standard error: 0.008982086
Multiple R-squared:     0

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-0.0243765268 -0.0015801436  0.0000593498  0.0019527184  0.0246553928 

Regime 2 
---------
               Estimate Std. Error t value  Pr(>|t|)    
(Intercept)(S)   0.0012     0.0002       6 1.973e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.003951994
Multiple R-squared:     0

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-8.693672e-03 -1.214980e-03 -6.347924e-06  1.063441e-03  9.081232e-03 

Regime 3 
---------
               Estimate Std. Error t value Pr(>|t|)
(Intercept)(S)  -0.0016     0.0010    -1.6   0.1096

Residual standard error: 0.01746388
Multiple R-squared: 1.538e-34

Standardized Residuals:
          Min            Q1           Med            Q3           Max 
-6.573562e-02 -3.835755e-05  2.114661e-05  2.592375e-04  5.089311e-02 

Transition probabilities:
           Regime 1     Regime 2     Regime 3
Regime 1 0.91409108 7.944336e-02 3.375709e-02
Regime 2 0.07500013 9.205566e-01 5.603476e-09
Regime 3 0.01090879 1.269306e-09 9.662429e-01
#+end_example

** 比較

- AIC では 3 レジームの方が良い結果
#+begin_src R :results output
AIC(ms_mod_r2)
AIC(ms_mod_r3)
#+end_src

#+RESULTS:
: [1] -15448.56
: [1] -15552.07

- 主に以下に分類される
  - 低ボラティリティ + プラスリターン
  - 高ボラティリティ + マイナスプラスリターン
#+begin_src R :results output
ms_mod_r2@Coef
ms_mod_r2@std
ms_mod_r3@Coef
ms_mod_r3@std
#+end_src

#+RESULTS:
:     (Intercept)   c2c_ret_1
: 1  0.0012249052 -0.08306379
: 2 -0.0007814783 -0.03874025
: [1] 0.005121971 0.013836203
:    (Intercept)
: 1  0.000397773
: 2  0.001225405
: 3 -0.001603441
: [1] 0.008982086 0.003951994 0.017463882

** plotProb

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotProb(ms_mod_r2, which = 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-FRQyRm.png]]

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotProb(ms_mod_r2, which = 3)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-2oT4xo.png]]

** plotDiag (Regime = 1)

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(ms_mod_r2, regime = 1, which = 1)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-tLdYGt.png]]

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(ms_mod_r2, regime = 1, which = 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-hz7pFD.png]]

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(ms_mod_r2, regime = 1, which = 3)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-MWTdH7.png]]

** plotDiag (Regime = 2)

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(ms_mod_r2, regime = 2, which = 1)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-HJaOXi.png]]

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(ms_mod_r2, regime = 2, which = 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-VfGwqc.png]]

#+begin_src R :results output graphics file :file (my/get-babel-file)
plotDiag(ms_mod_r2, regime = 2, which = 3)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-8lFXdt.png]]

* レジーム毎の正規性の検定例 (US Sector ETF)
** データ

- US セクター ETF の例
#+begin_src R :results silent
symbols <- tribble(
  ~symbol,  ~sector,
  "XLE",    "Energy",
  "XLF",    "Financials",
  "XLU",    "Utilities",
  "XLI",    "Industrial",
  "XLK",    "Technology",
  "XLV",    "Health",
  "XLY",    "Consumer Discretionary",
  "XLP",    "Consumer Staples",
  "XLB",    "Materials",
)
rawdata <- tq_get(symbols$symbol, from = "1998-01-01")
#+end_src

- 日次・週次・月次リターンへ変換
#+begin_src R :results silent
convert_to_ret <- function(rawdata, symbols, mutate_fun) {
  rawdata %>%
    group_by(symbol) %>%
    tq_transmute(adjusted, mutate_fun = mutate_fun, col_rename = "ret") %>%
    slice(-1) %>%
    ungroup() %>%
    left_join(symbols, by = "symbol")
}

ret_daily <- convert_to_ret(rawdata, symbols, dailyReturn)
ret_weekly <- convert_to_ret(rawdata, symbols, weeklyReturn)
ret_monthly <- convert_to_ret(rawdata, symbols, monthlyReturn)
#+end_src

** Jarque Bera Test

- レジーム分割前の全データで正規性を検定
- 月次の XLE 以外は全て正規性が棄却される

#+begin_src R :results silent
test_normality <- function(ret_data) {
  ret_data %>%
    group_split(symbol) %>%
    map_dfr(~ {
      jb_test <- tseries::jarque.bera.test(.$ret)
      data.frame(
        symbol = .$symbol[1],
        tstat = jb_test$statistic,
        is_norm =  jb_test$p.value > 0.05,
        stringsAsFactors = FALSE
      )
    })
}
#+end_src

#+begin_src R :results value :colnames yes
test_normality(ret_daily)
#+end_src

#+RESULTS:
| symbol |            tstat | is_norm |
|--------+------------------+---------|
| XLB    | 7410.91800127917 | FALSE   |
| XLE    | 16801.8459473542 | FALSE   |
| XLF    | 151031.534343345 | FALSE   |
| XLI    | 6787.77857135695 | FALSE   |
| XLK    | 10909.4929476117 | FALSE   |
| XLP    | 4306.04204714911 | FALSE   |
| XLU    | 19095.1836799477 | FALSE   |
| XLV    |  15278.495442284 | FALSE   |
| XLY    | 6680.85790844789 | FALSE   |

#+begin_src R :results value :colnames yes
test_normality(ret_weekly)
#+end_src

#+RESULTS:
| symbol |            tstat | is_norm |
|--------+------------------+---------|
| XLB    | 372.137746246193 | FALSE   |
| XLE    |  965.68439272557 | FALSE   |
| XLF    | 11485.9351930836 | FALSE   |
| XLI    |   777.4282874696 | FALSE   |
| XLK    | 400.043052643123 | FALSE   |
| XLP    | 945.894303884269 | FALSE   |
| XLU    | 2056.73823243309 | FALSE   |
| XLV    | 1709.04933601911 | FALSE   |
| XLY    | 923.021676086587 | FALSE   |

#+begin_src R :results value :colnames yes
test_normality(ret_monthly)
#+end_src

#+RESULTS:
| symbol |            tstat | is_norm |
|--------+------------------+---------|
| XLB    | 27.8280759981605 | FALSE   |
| XLE    | 2.39486887369797 | TRUE    |
| XLF    |  114.60827178149 | FALSE   |
| XLI    | 27.9930920153642 | FALSE   |
| XLK    | 36.0089838270799 | FALSE   |
| XLP    | 45.9010937219418 | FALSE   |
| XLU    | 39.7637434217942 | FALSE   |
| XLV    | 17.7115257365793 | FALSE   |
| XLY    | 10.9691823106205 | FALSE   |

** Jarque Bera Test with Regimes
*** 関数

- Error in solve.default(res$Hessian) : 
   Lapack routine dgesv: system is exactly singular: U[8,8] = 0
  - [[https://stackoverflow.com/questions/6572119/r-solvesystem-is-exactly-singular][R solve:system is exactly singular]]
  - 何度か繰り返すとうまく行く?

#+begin_src R :results silent
test_normality_ms <- function(ret_data, k = 3, smooth = TRUE) {
  ret_data %>%
    group_split(symbol) %>%
    map_dfr(~ {
      print(.$symbol[1])
      lm_mod <- lm(ret ~ 1, .)
      ms_mod_r3 <- msmFit(lm_mod, k = k, p = 1, sw = c(TRUE, TRUE, TRUE))

      if (smooth) {
        prob <- ms_mod_r3@Fit@smoProb
      } else {
        prob <- ms_mod_r3@Fit@filtProb
      }

      idx <- apply(prob, 1, which.max)
      map_dfr(1:k, function(r) {
        d <- .$ret[idx == r]
        jb_test <- tseries::jarque.bera.test(d)
        data.frame(
          symbol = .$symbol[1],
          regime = r,
          count = length(d),
          tstat = jb_test$statistic,
          is_norm =  jb_test$p.value > 0.05,
          mean = ms_mod_r3@Coef[r, 1],
          ar = ms_mod_r3@Coef[r, 2],
          sd = ms_mod_r3@std[r],
          stringsAsFactors = FALSE
        )
      })
    })
}
#+end_src

*** モデルの当てはめ
**** 関数

#+begin_src R :results silent
fit_ms <- function(ret, regimes = 2) {
  lm_mod <- lm(ret ~ 1)
  tryCatch({
    msmFit(lm_mod, k = regimes, sw = c(TRUE, TRUE))
  }, error = function(e) {
    message(e)
    NA
  })
}

add_fit <- function(params, ret_data) {
  params %>%
    mutate(fit = pmap(., function(symbol, regimes, ...) {
      print(glue("{symbol}, {regimes}"))

      ## 既に fit object がある場合は Skip する
      args <- list(...)
      if ("fit" %in% names(args) && class(args$fit) == "MSM.lm") {
        print("skipping...")
        return(args$fit)
      }

      ret <- ret_data[ret_data$symbol == symbol, ]$ret
      fit_ms(ret, regimes)
    }))
}

add_regime_data <- function(fits, ret_data) {
  fits %>%
    mutate(data = pmap(., function(symbol, regimes, fit, ...) {
      if (class(fit) != "MSM.lm") return(NA)

      ## 既に data object がある場合は Skip する
      args <- list(...)
      if ("data" %in% names(args) && is.list(args$data)) {
        print("skipping...")
        return(args$data)
      }

      prob <- fit@Fit@filtProb
      idx <- apply(prob, 1, which.max)
      ret <- ret_data[ret_data$symbol == symbol, ]$ret

      map(1:regimes, function(regime) {
        ret[idx == regime]
      })
    }))
}
#+end_src

**** 当てはめ

#+begin_src R :results silent
regimes <- 2:3
fit_params <- crossing(symbol = symbols$symbol, regimes = regimes)

## ms_fits_daily <- add_fit(fit_params, ret_daily) %>% add_regime_data(ret_daily)
## ms_fits_weekly <- add_fit(fit_params, ret_weekly) %>% add_regime_data(ret_weekly)
## ms_fits_monthly <- add_fit(fit_params, ret_monthly) %>% add_regime_data(ret_monthly)

## もしくは、保存したデータを読み込む
load(".RData")
#+end_src

*** 正規性の検定
**** 関数

#+begin_src R :results silent
extract_regime_info <- function(fits) {
  fits %>%
    pmap_dfr(., function(symbol, regimes, fit, data) {
      print(glue("{symbol} {regimes}"))
      map_dfr(1:regimes, function(regime) {

        if (class(fit) != "MSM.lm") {
          return(data.frame(
            symbol = symbol, regime = regime, count = NA_real_,
            tstat = NA_real_, is_norm = NA, mean = NA_real_, sd = NA_real_,
            stringsAsFactors = FALSE))
        }

        r <- data[[regime]]
        jb_test <- tseries::jarque.bera.test(r)
        data.frame(
          symbol = symbol,
          regimes = regimes,
          regime = regime,
          count = length(r),
          tstat = jb_test$statistic,
          is_norm =  jb_test$p.value > 0.05,
          mean = fit@Coef[regime, 1],
          sd = fit@std[regime],
          stringsAsFactors = FALSE
        )
      })
    })
}
#+end_src

**** テスト

#+begin_src R :results silent
regimes_daily <- extract_regime_info(ms_fits_daily)
regimes_weekly <- extract_regime_info(ms_fits_weekly)
regimes_monthly <- extract_regime_info(ms_fits_monthly)
#+end_src

**** Daily

- regime = 2
#+begin_src R :results value :colnames yes
regimes_daily %>%
  dplyr::filter(regimes == 2) %>%
  select(-regimes) %>%
  mutate_if(is.numeric, round, digit = 5)
#+end_src

#+RESULTS:
| symbol | regime | count |     tstat | is_norm |     mean |      sd |
|--------+--------+-------+-----------+---------+----------+---------|
| XLB    |      1 |  1665 | 294.58032 | FALSE   | -0.00057 | 0.02215 |
| XLB    |      2 |  3595 |    7.4447 | FALSE   |  0.00088 | 0.00964 |
| XLE    |      1 |  1022 | 388.88134 | FALSE   | -0.00122 | 0.02847 |
| XLE    |      2 |  4238 |  11.68693 | FALSE   |  0.00081 | 0.01219 |
| XLF    |      1 |  1117 | 2211.0265 | FALSE   |   -3e-04 | 0.03532 |
| XLF    |      2 |  4143 |  26.12944 | FALSE   |    6e-04 | 0.00982 |
| XLI    |      1 |  3484 |   21.5375 | FALSE   |  0.00089 | 0.00801 |
| XLI    |      2 |  1776 | 223.36046 | FALSE   | -0.00055 | 0.01933 |
| XLK    |      1 |  3478 |  58.11827 | FALSE   |  0.00094 | 0.00886 |
| XLK    |      2 |  1782 | 397.80258 | FALSE   | -0.00077 |  0.0246 |
| XLP    |      1 |  3431 |   9.97436 | FALSE   |  0.00062 |  0.0059 |
| XLP    |      2 |  1829 | 140.93865 | FALSE   | -0.00031 | 0.01361 |
| XLU    |      1 |  4200 |   8.92986 | FALSE   |  0.00079 |  0.0078 |
| XLU    |      2 |  1060 | 407.11166 | FALSE   | -0.00111 | 0.01943 |
| XLV    |      1 |  3838 |  16.09219 | FALSE   |  0.00068 |  0.0074 |
| XLV    |      2 |  1422 | 569.64573 | FALSE   | -0.00039 | 0.01737 |
| XLY    |      1 |  3289 |  24.61866 | FALSE   |  0.00082 | 0.00795 |
| XLY    |      2 |  1971 | 268.19287 | FALSE   | -0.00022 | 0.02012 |

- regime = 3
#+begin_src R :results value :colnames yes
regimes_daily %>%
  dplyr::filter(regimes == 3) %>%
  select(-regimes) %>%
  mutate_if(is.numeric, round, digit = 5)
#+end_src

#+RESULTS:
| symbol | regime | count |     tstat | is_norm |     mean |      sd |
|--------+--------+-------+-----------+---------+----------+---------|
| XLB    |      1 |  2107 |  41.25554 | FALSE   |  0.00148 | 0.00696 |
| XLB    |      2 |  1994 |  55.17468 | FALSE   | -0.00015 | 0.01307 |
| XLB    |      3 |  1159 | 171.14315 | FALSE   | -0.00027 | 0.02468 |
| XLE    |      1 |  1770 |  86.03563 | FALSE   | -0.00032 | 0.01569 |
| XLE    |      2 |  2713 |   69.8923 | FALSE   |  0.00166 | 0.00904 |
| XLE    |      3 |   777 | 333.09587 | FALSE   | -0.00108 | 0.03078 |
| XLF    |      1 |  2848 |  25.07305 | FALSE   |  0.00088 | 0.00809 |
| XLF    |      2 |  2110 |   5.49231 | TRUE    | -0.00061 | 0.01791 |
| XLF    |      3 |   302 |  74.83502 | FALSE   |  0.00217 | 0.05655 |
| XLI    |      1 |   939 |  52.45904 | FALSE   | -0.00069 | 0.02243 |
| XLI    |      2 |  2477 |  25.50459 | FALSE   |  0.00019 | 0.01134 |
| XLI    |      3 |  1844 |  22.18043 | FALSE   |  0.00132 | 0.00548 |
| XLP    |      1 |  1397 |  46.59976 | FALSE   |  0.00026 | 0.00796 |
| XLP    |      2 |  2270 |  37.74053 | FALSE   |  0.00085 |  0.0044 |
| XLP    |      3 |  1593 | 136.90364 | FALSE   | -0.00036 | 0.01418 |
| XLU    |      1 |   184 |  10.43161 | FALSE   | -0.00247 | 0.03237 |
| XLU    |      2 |  2147 |   9.23521 | FALSE   | -0.00019 | 0.01263 |
| XLU    |      3 |  2929 |   9.92264 | FALSE   |  0.00099 | 0.00666 |
| XLV    |      1 |  2336 |  56.81078 | FALSE   |  0.00111 | 0.00528 |
| XLV    |      2 |  1858 |  62.96394 | FALSE   |  0.00011 | 0.01006 |
| XLV    |      3 |  1066 | 490.81269 | FALSE   | -0.00044 | 0.01892 |

**** Weekly

- regime = 2
#+begin_src R :results value :colnames yes
regimes_weekly %>%
  dplyr::filter(regimes == 2) %>%
  select(-regimes) %>%
  mutate_if(is.numeric, round, digit = 5)
#+end_src

#+RESULTS:
| symbol | regime | count |    tstat | is_norm |     mean |      sd |
|--------+--------+-------+----------+---------+----------+---------|
| XLB    |      1 |   674 |  0.37951 | TRUE    |  0.00442 | 0.01851 |
| XLB    |      2 |   417 |  2.59525 | TRUE    | -0.00189 | 0.04362 |
| XLE    |      1 |   738 |  3.75135 | TRUE    |  0.00379 |  0.0229 |
| XLE    |      2 |   353 | 36.80542 | FALSE   | -0.00178 | 0.04651 |
| XLF    |      1 |   906 |  0.83346 | TRUE    |  0.00232 | 0.02238 |
| XLF    |      2 |   185 | 80.94202 | FALSE   | -0.00063 | 0.07483 |
| XLI    |      1 |   359 | 18.17034 | FALSE   | -0.00117 |  0.0408 |
| XLI    |      2 |   732 |  5.10327 | TRUE    |  0.00345 | 0.01782 |
| XLK    |      1 |   379 |  1.05952 | TRUE    | -0.00244 | 0.04718 |
| XLK    |      2 |   712 |  0.70893 | TRUE    |  0.00399 | 0.01892 |
| XLP    |      1 |   282 |  9.99328 | FALSE   | -0.00197 | 0.02952 |
| XLP    |      2 |   809 |  2.83979 | TRUE    |  0.00272 | 0.01295 |
| XLU    |      1 |   140 | 17.98564 | FALSE   | -0.00365 | 0.04069 |
| XLU    |      2 |   951 |  3.47033 | TRUE    |  0.00262 | 0.01779 |
| XLV    |      1 |   244 | 26.69404 | FALSE   | -0.00154 | 0.03796 |
| XLV    |      2 |   847 |  2.25809 | TRUE    |  0.00295 | 0.01606 |
| XLY    |      1 |   676 |  1.36956 | TRUE    |  0.00388 | 0.01713 |
| XLY    |      2 |   415 | 34.96088 | FALSE   | -0.00097 | 0.04243 |

- regime = 3
#+begin_src R :results value :colnames yes
regimes_weekly %>%
  dplyr::filter(regimes == 3) %>%
  select(-regimes) %>%
  mutate_if(is.numeric, round, digit = 5)
#+end_src

#+RESULTS:
| symbol | regime | count |      tstat | is_norm |     mean |      sd |
|--------+--------+-------+------------+---------+----------+---------|
| XLB    |      1 |   224 |    21.7427 | FALSE   |  0.00247 | 0.02309 |
| XLB    |      2 |   435 |    6.48495 | FALSE   | -0.00155 |  0.0439 |
| XLB    |      3 |   432 |   17.56399 | FALSE   |  0.00563 | 0.01439 |
| XLE    |      1 |   109 | 1267.50893 | FALSE   |  0.00133 | 0.02474 |
| XLE    |      2 |   417 |   62.80297 | FALSE   |  -0.0017 | 0.04668 |
| XLE    |      3 |   565 |   17.72452 | FALSE   |  0.00573 | 0.02132 |
| XLF    |      1 |   488 |    0.44159 | TRUE    | -0.00072 |  0.0373 |
| XLF    |      2 |   565 |    2.59654 | TRUE    |  0.00322 | 0.01775 |
| XLF    |      3 |    38 |    1.08266 | TRUE    |  0.00798 | 0.12688 |
| XLI    |      1 |   395 |   31.33429 | FALSE   | -0.00089 | 0.04053 |
| XLI    |      2 |   147 |  482.97711 | FALSE   | -0.00215 |  0.0205 |
| XLI    |      3 |   549 |   21.02534 | FALSE   |  0.00721 | 0.01488 |
| XLP    |      1 |   628 |   24.84556 | FALSE   |  0.00387 | 0.01072 |
| XLP    |      2 |   189 |   22.04509 | FALSE   |  0.00081 | 0.01665 |
| XLP    |      3 |   274 |   25.14817 | FALSE   |  -0.0022 |  0.0307 |
| XLU    |      1 |   307 |     91.145 | FALSE   | -0.00117 | 0.02054 |
| XLU    |      2 |   629 |   29.26723 | FALSE   |  0.00591 | 0.01436 |
| XLU    |      3 |   155 |   48.31081 | FALSE   |  -0.0028 | 0.04103 |
| XLV    |      1 |   510 |   21.27523 | FALSE   |  0.00349 |  0.0139 |
| XLV    |      2 |   276 |   48.98955 | FALSE   | -0.00154 | 0.03843 |
| XLV    |      3 |   305 |   31.12859 | FALSE   |  0.00231 | 0.01829 |
| XLY    |      1 |   514 |   21.62053 | FALSE   |  0.00546 | 0.01401 |
| XLY    |      2 |   413 |     40.194 | FALSE   | -0.00084 | 0.04277 |
| XLY    |      3 |   164 |   21.68153 | FALSE   |  0.00163 |  0.0209 |

**** Monthly

- regime = 2
#+begin_src R :results value :colnames yes
regimes_monthly %>%
  dplyr::filter(regimes == 2) %>%
  select(-regimes) %>%
  mutate_if(is.numeric, round, digit = 5)
#+end_src

#+RESULTS:
| symbol | regime | count |   tstat | is_norm |     mean |      sd |
|--------+--------+-------+---------+---------+----------+---------|
| XLB    |      1 |   122 | 1.83464 | TRUE    |  0.01206 | 0.03537 |
| XLB    |      2 |   129 | 0.42417 | TRUE    |  0.00336 | 0.07675 |
| XLE    |      1 |   251 | 2.39487 | TRUE    |  0.00774 | 0.06908 |
| XLE    |      2 |     0 |     nil | nil     |  0.00584 | 0.03013 |
| XLF    |      1 |   211 | 3.19347 | TRUE    |  0.00848 |  0.0413 |
| XLF    |      2 |    40 | 1.13516 | TRUE    | -0.00111 | 0.11013 |
| XLI    |      1 |   114 | 0.36874 | TRUE    |  0.00164 | 0.06984 |
| XLI    |      2 |   137 | 0.63894 | TRUE    |  0.01256 | 0.03098 |
| XLK    |      1 |    67 | 1.51628 | TRUE    | -0.01322 | 0.10682 |
| XLK    |      2 |   184 | 3.39908 | TRUE    |  0.01441 | 0.04115 |
| XLP    |      1 |   225 | 4.34584 | TRUE    |  0.01451 | 0.02539 |
| XLP    |      2 |    26 |  3.1752 | TRUE    | -0.03353 | 0.04151 |
| XLU    |      1 |   107 | 6.18258 | FALSE   | -0.00602 | 0.04981 |
| XLU    |      2 |   144 | 7.87622 | FALSE   |  0.02285 | 0.01914 |
| XLV    |      1 |   190 | 1.02778 | TRUE    |  0.01187 | 0.03093 |
| XLV    |      2 |    61 | 1.43672 | TRUE    | -0.00285 | 0.05333 |
| XLY    |      1 |   163 | 1.13477 | TRUE    |  0.01169 | 0.03384 |
| XLY    |      2 |    88 | 1.65364 | TRUE    |  0.00355 | 0.07004 |

- regime = 3
#+begin_src R :results value :colnames yes
regimes_monthly %>%
  dplyr::filter(regimes == 3) %>%
  select(-regimes) %>%
  mutate_if(is.numeric, round, digit = 5)
#+end_src

#+RESULTS:
| symbol | regime | count |    tstat | is_norm |     mean |      sd |
|--------+--------+-------+----------+---------+----------+---------|
| XLB    |      1 |    58 |  2.85496 | TRUE    | -0.01147 | 0.02584 |
| XLB    |      2 |   134 |   0.8037 | TRUE    |  0.00497 | 0.07643 |
| XLB    |      3 |    59 |   2.3879 | TRUE    |  0.03389 | 0.02367 |
| XLE    |      1 |   179 |  0.11286 | TRUE    |  0.00126 | 0.06945 |
| XLE    |      2 |    40 |  1.43752 | TRUE    | -0.00527 | 0.02489 |
| XLE    |      3 |    32 |  2.04124 | TRUE    |  0.04837 | 0.04134 |
| XLF    |      1 |   139 |  1.65741 | TRUE    |  0.00179 | 0.05787 |
| XLF    |      2 |    94 |  2.07385 | TRUE    |  0.01414 |   0.028 |
| XLF    |      3 |    18 |  1.59345 | TRUE    |  0.00093 |  0.1401 |
| XLI    |      1 |     0 |      nil | nil     |  0.01387 |  0.0306 |
| XLI    |      2 |   126 |  0.47907 | TRUE    |  0.01148 | 0.03124 |
| XLI    |      3 |   125 |  0.91255 | TRUE    |  0.00164 | 0.06984 |
| XLK    |      1 |    71 |  1.13855 | TRUE    | -0.01267 |  0.1062 |
| XLK    |      2 |    97 |  8.88301 | FALSE   |  0.03701 | 0.03096 |
| XLK    |      3 |    83 |  8.89968 | FALSE   | -0.00891 | 0.03663 |
| XLP    |      1 |    63 |  1.73723 | TRUE    |  0.01176 | 0.02585 |
| XLP    |      2 |    33 |  5.32426 | TRUE    |  -0.0315 | 0.04267 |
| XLP    |      3 |   155 |   0.2478 | TRUE    |  0.01659 | 0.02469 |
| XLU    |      1 |   154 |  1.66891 | TRUE    |  0.02193 | 0.02258 |
| XLU    |      2 |    26 |  1.22934 | TRUE    | -0.04649 | 0.01691 |
| XLU    |      3 |    71 |  0.72778 | TRUE    | -0.00637 | 0.05667 |
| XLV    |      1 |   167 |  1.24865 | TRUE    |   0.0111 | 0.03111 |
| XLV    |      2 |     0 |      nil | nil     |  0.01278 |  0.0307 |
| XLV    |      3 |    84 |  0.97783 | TRUE    | -0.00286 | 0.05334 |
| XLY    |      1 |   105 |  1.23774 | TRUE    |  0.00328 | 0.07014 |
| XLY    |      2 |   113 |  7.58805 | FALSE   |  0.00656 | 0.03306 |
| XLY    |      3 |    33 | 15.03461 | FALSE   |  0.01801 | 0.03394 |

*** プロット
**** 関数

#+begin_src R :results silent
extract_plot_data <- function(fits, regimes = 2) {
  fits %>%
    filter(regimes == !!regimes) %>%
    pmap(function(symbol, regimes, fit, data) {
      hist_data <- imap_dfr(data, ~ {
        data.frame(symbol = symbol, regime = .y, ret = .x,
                   stringsAsFactors = FALSE)
      })

      ## レジームを SD の小さい順に並び替える
      ## order <- hist_data %>%
      ##   group_by(regime) %>%
      ##   summarise(sd =  sd(ret)) %>%
      ##   mutate(rank = min_rank()) %>%
      ##   as.matrix()
      ## hist_data$regime <- order[hist_data$regime, "rank"]

      grid <- seq(min(hist_data$ret), max(hist_data$ret), length = 100)
      dens_data <- hist_data %>%
        group_split(regime) %>%
        map_dfr(~ {
          data.frame(
            symbol = symbol,
            regime = .$regime[1],
            ret = grid,
            density = dnorm(grid, mean(.$ret), sd(.$ret)),
            stringsAsFactors = FALSE
          )
        })
      list(hist_data = hist_data, dens_data = dens_data)
    })
}

plots_by_regime <- function(fits, regimes = 2) {
  plots_data <- extract_plot_data(fits, regimes = regimes)
  hist_data <- map_dfr(plots_data, 1)
  dens_data <- map_dfr(plots_data, 2)

  hist_data %>%
    ggplot(aes(ret))  +
    geom_histogram(aes(y = stat(density)), binwidth = 0.005, fill = "white", color = "black") +
    geom_density(fill = "black", alpha = 0.3) +
    geom_line(aes(y = density), data = dens_data, colour = "red") +
    ## facet_grid(regime ~ symbol)
    facet_grid(symbol ~ regime)
}
#+end_src

**** Daily
***** Regime = 2

#+begin_src R :results output graphics file :file (my/get-babel-file) :height 900
plots_by_regime(ms_fits_daily, 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-cjmaBM.png]]

***** Regime = 3

#+begin_src R :results output graphics file :file (my/get-babel-file) :height 900
ms_fits_daily %>%
  filter(!(symbol == "XLK" & regimes == 3) & !(symbol == "XLY" & regimes == 3)) %>%
  plots_by_regime(3)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-mJYhth.png]]

**** Weekly
***** Regime = 2

#+begin_src R :results output graphics file :file (my/get-babel-file) :height 900
plots_by_regime(ms_fits_weekly, 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-SF7RoH.png]]

***** Regime = 3

#+begin_src R :results output graphics file :file (my/get-babel-file) :height 900
ms_fits_weekly %>%
  filter(!(symbol == "XLK" & regimes == 3)) %>%
  plots_by_regime(3)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-DnAMKM.png]]

**** Monthly
* 参考

- [[https://cran.r-project.org/web/packages/MSwM/index.html][CRAN]]
- [[https://cran.r-project.org/web/packages/MSwM/MSwM.pdf][Reference Manual]]
- Vignette
  - [[https://cran.r-project.org/web/packages/MSwM/vignettes/examples.pdf][example (PDF)]] 

- Blog
  - [[https://tjo.hatenablog.com/entry/2013/06/20/191317][マルコフ状態転換モデルのRパッケージ{MSwM}の使い方（異常値検出・ステータス変化検出などに有用）@渋谷駅前で働くデータサイエンティストのブログ]]
  - [[http://sinhrks.hatenablog.com/entry/2014/10/26/225850][R の {MSwM} パッケージでマルコフ転換モデルをためす@StatsFragments]]
  - [[http://user.keio.ac.jp/~nagakura/R/R_markov_regime.pdf][マルコフレジームスイッチングモデルの推定]]

- Paper
  - [[https://www.terrapub.co.jp/journals/jjssj/pdf/4401/44010137.pdf][沖本　竜義, マルコフスイッチングモデルのマクロ経済・ファイナンスへの応用]]


