#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results value :colnames yes :session *R:scoped-verbs-variants*

* 目次                                                            :TOC:QUOTE:
#+BEGIN_QUOTE
- [[#scoped-verbs-の亜種と-tidyselect][Scoped Verbs の亜種と {tidyselect}]]
- [[#ライブラリの読み込みとバージョンの確認][ライブラリの読み込みとバージョンの確認]]
- [[#基本][基本]]
- [[#select-helpers][Select helpers]]
  - [[#-starts_withmatch-ignorecase--true-vars--peek_vars][★★★ ~starts_with(match, ignore.case = TRUE, vars = peek_vars())~.]]
  - [[#-ends_withmatch-ignorecase--true-vars--peek_vars][★★★ ~ends_with(match, ignore.case = TRUE, vars = peek_vars())~.]]
  - [[#-containsmatch-ignorecase--true-vars--peek_vars][★★☆ ~contains(match, ignore.case = TRUE, vars = peek_vars())~.]]
  - [[#-matchesmatch-ignorecase--true-vars--peek_vars][★☆☆ ~matches(match, ignore.case = TRUE, vars = peek_vars())~.]]
  - [[#-num_rangeprefix-range-width--null-vars--peek_vars][★☆☆ ~num_range(prefix, range, width = NULL, vars = peek_vars())~.]]
  - [[#-one_of-vars--peek_vars][★★☆ ~one_of(..., .vars = peek_vars())~.]]
  - [[#-everythingvars--peek_vars][★☆☆ ~everything(vars = peek_vars())~.]]
  - [[#-last_coloffset--0l-vars--peek_vars][★☆☆ ~last_col(offset = 0L, vars = peek_vars())~.]]
- [[#dplyr][dplyr]]
  - [[#-vars][★★★ ~vars(...)~.]]
  - [[#-all_varsexpr][★☆☆ ~all_vars(expr)~.]]
  - [[#-any_varsexpr][★☆☆ ~any_vars(expr)~.]]
- [[#_all][_all]]
  - [[#-arrange_alltbl-funs--list--by_group--false][★☆☆ ~arrange_all(.tbl, .funs = list(), ..., .by_group = FALSE)~.]]
  - [[#-distinct_alltbl-funs--list--keep_all--false][★☆☆ ~distinct_all(.tbl, .funs = list(), ..., .keep_all = FALSE)~.]]
  - [[#-filter_alltbl-vars_predicate-preserve--false][★☆☆ ~filter_all(.tbl, .vars_predicate, .preserve = FALSE)~.]]
  - [[#-group_by_alltbl-funs--list--add--false-drop--group_by_drop_defaulttbl][★☆☆ ~group_by_all(.tbl, .funs = list(), ..., .add = FALSE, .drop = group_by_drop_default(.tbl))~.]]
  - [[#-mutate_alltbl-funs-][★★☆ ~mutate_all(.tbl, .funs, ...)~.]]
  - [[#-rename_alltbl-funs--list-][★★☆ ~rename_all(.tbl, .funs = list(), ...)~.]]
  - [[#-select_alltbl-funs--list-][★☆☆ ~select_all(.tbl, .funs = list(), ...)~.]]
  - [[#-summarise_alltbl-funs-][★★☆ ~summarise_all(.tbl, .funs, ...)~.]]
  - [[#-transmute_alltbl-funs-][★☆☆ ~transmute_all(.tbl, .funs, ...)~.]]
- [[#_at][_at]]
  - [[#-arrange_attbl-vars-funs--list--by_group--false][★☆☆ ~arrange_at(.tbl, .vars, .funs = list(), ..., .by_group = FALSE)~.]]
  - [[#-distinct_attbl-vars-funs--list--keep_all--false][★☆☆ ~distinct_at(.tbl, .vars, .funs = list(), ..., .keep_all = FALSE)~.]]
  - [[#-filter_attbl-vars-vars_predicate-preserve--false][★☆☆ ~filter_at(.tbl, .vars, .vars_predicate, .preserve = FALSE)~.]]
  - [[#-group_by_attbl-vars-funs--list--add--false-drop--group_by_drop_defaulttbl][★☆☆ ~group_by_at(.tbl, .vars, .funs = list(), ..., .add = FALSE, .drop = group_by_drop_default(.tbl))~.]]
  - [[#-mutate_attbl-vars-funs--cols--null][★★☆ ~mutate_at(.tbl, .vars, .funs, ..., .cols = NULL)~.]]
  - [[#-rename_attbl-vars-funs--list-][★★☆ ~rename_at(.tbl, .vars, .funs = list(), ...)~.]]
  - [[#-select_attbl-vars-funs--list-][★★☆ ~select_at(.tbl, .vars, .funs = list(), ...)~.]]
  - [[#-summarise_attbl-vars-funs--cols--null][★★☆ ~summarise_at(.tbl, .vars, .funs, ..., .cols = NULL)~.]]
  - [[#-transmute_attbl-vars-funs--cols--null][★☆☆ ~transmute_at(.tbl, .vars, .funs, ..., .cols = NULL)~.]]
- [[#_if][_if]]
  - [[#-arrange_iftbl-predicate-funs--list--by_group--false][★☆☆ ~arrange_if(.tbl, .predicate, .funs = list(), ..., .by_group = FALSE)~.]]
  - [[#-distinct_iftbl-predicate-funs--list--keep_all--false][★☆☆ ~distinct_if(.tbl, .predicate, .funs = list(), ..., .keep_all = FALSE)~.]]
  - [[#-filter_iftbl-predicate-vars_predicate-preserve--false][★☆☆ ~filter_if(.tbl, .predicate, .vars_predicate, .preserve = FALSE)~.]]
  - [[#-group_by_iftbl-predicate-funs--list--add--false-drop--group_by_drop_defaulttbl][★☆☆ ~group_by_if(.tbl, .predicate, .funs = list(), ..., .add = FALSE, .drop = group_by_drop_default(.tbl))~.]]
  - [[#-mutate_iftbl-predicate-funs-][★☆☆ ~mutate_if(.tbl, .predicate, .funs, ...)~.]]
  - [[#-rename_iftbl-predicate-funs--list-][★☆☆ ~rename_if(.tbl, .predicate, .funs = list(), ...)~.]]
  - [[#-select_iftbl-predicate-funs--list-][★☆☆ ~select_if(.tbl, .predicate, .funs = list(), ...)~.]]
  - [[#-summarise_iftbl-predicate-funs-][★☆☆ ~summarise_if(.tbl, .predicate, .funs, ...)~.]]
  - [[#-transmute_iftbl-predicate-funs-][★☆☆ ~transmute_if(.tbl, .predicate, .funs, ...)~.]]
- [[#_prepare][_prepare]]
  - [[#-distinct_preparedata-vars-group_vars--character-keep_all--false][★☆☆ ~distinct_prepare(.data, vars, group_vars = character(), .keep_all = FALSE)~.]]
  - [[#-group_by_preparedata--dots--list-add--false][★☆☆ ~group_by_prepare(.data, ..., .dots = list(), add = FALSE)~.]]
- [[#実行環境][実行環境]]
#+END_QUOTE

* Scoped Verbs の亜種と {tidyselect}

- *Scoped verbs* の末尾に ~_if()~, ~_all()~, ~_at()~ が付く亜種では、複数の列に一括して関数を適応できる
- ~_at()~ 系の関数では、列の選択を柔軟に行うための関数が ~{tidyselect}~ パッケージからインポートされている (*Select Helpers* と呼ばれている)

* ライブラリの読み込みとバージョンの確認

#+begin_src R :results silent
library(dplyr)
#+end_src
\\

- バージョン
#+begin_src R :results output :exports both
packageVersion("dplyr")
#+end_src

#+RESULTS:
: [1] ‘0.8.3’
\\

* 基本

- ~{dplyr}~ の *Scoped verbs* には、末尾に ~_all~, ~_at~, ~_if~ が付く亜種が存在する
  - ~arrange()~, ~distinct()~, ~filter()~, ~group_by()~, ~mutate()~, ~rename()~, ~select()~, ~summarise()~, ~transmute()~ の計 9 つ

- 亜種毎のルール
  - ~_all~: 全ての列に ~.funs~ の関数を適応
  - ~_at~: ~.vars~ で列を選択し ~.funs~ の関数を適応
  - ~_if~: ~.predicate~ で列を選択し ~.funs~ の関数を適応

- ~.funs~ の指定方法
  - ~"min"~, ~min~, のように文字列もしくは、シンボルで指定
  - ~~ fun(.)~ のようにラムダ式で指定
  - ~list(min, max)~ で複数の関数を指定
  - ~list("min" = min, "max" = max)~ で列名を指定できる
  - ~funs(min, max)~ の指定方法は *soft-deprecated*

- ~.vars~ の指定方法
  - ~c("hoge", "fuga")~ character vector で指定する
  - ~vars(starts_with("hoge"))~ *select_helpers* を使う場合

- ~.predicate~ の指定方法
  - ~is.numeric()~ のように TRUE/FALSE を返す関数を指定
\\
 
* Select helpers

- パッケージに ~{tidyselect}~ パッケージから import されている
- ~_at~ 系の関数で列名を選択するために利用する

** ★★★ ~starts_with(match, ignore.case = TRUE, vars = peek_vars())~.

- 列名のプレフィックスで指定

#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, starts_with("Sepal"))
#+end_src

#+RESULTS:
: 
:   Sepal.Length    Sepal.Width 
: "Sepal.Length"  "Sepal.Width"
\\

** ★★★ ~ends_with(match, ignore.case = TRUE, vars = peek_vars())~.

- 列名のサフィックスで指定

#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, ends_with("Width"))
#+end_src

#+RESULTS:
: 
:   Sepal.Width   Petal.Width 
: "Sepal.Width" "Petal.Width"
\\

** ★★☆ ~contains(match, ignore.case = TRUE, vars = peek_vars())~.

- 文字列を含む列を選択する

#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, contains("etal"))
#+end_src

#+RESULTS:
: 
:   Petal.Length    Petal.Width 
: "Petal.Length"  "Petal.Width"
\\

** ★☆☆ ~matches(match, ignore.case = TRUE, vars = peek_vars())~.

- 正規表現を含む列を選択する

#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, matches(".t."))
#+end_src

#+RESULTS:
: 
:   Sepal.Length    Sepal.Width   Petal.Length    Petal.Width 
: "Sepal.Length"  "Sepal.Width" "Petal.Length"  "Petal.Width"
\\

** ★☆☆ ~num_range(prefix, range, width = NULL, vars = peek_vars())~.

- prefix + 連番のような列名から連番の範囲を指定して抽出できる

#+begin_src R :exports both :results output
col_names <- c("col01", "col02", "col03", "col04")
tidyselect::vars_select(col_names, num_range(prefix = "col", range = 1:3, width = 2))
#+end_src

#+RESULTS:
:   col01   col02   col03 
: "col01" "col02" "col03"
\\

** ★★☆ ~one_of(..., .vars = peek_vars())~.

- character vector で列を指定

#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, one_of(c("Sepal.Width", "Petal.Width")))
#+end_src

#+RESULTS:
:   Sepal.Width   Petal.Width 
: "Sepal.Width" "Petal.Width"
\\

** ★☆☆ ~everything(vars = peek_vars())~.

- 全てにマッチする
 
#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, everything())
#+end_src

#+RESULTS:
:   Sepal.Length    Sepal.Width   Petal.Length    Petal.Width        Species 
: "Sepal.Length"  "Sepal.Width" "Petal.Length"  "Petal.Width"      "Species"
\\

- 特定の列を先頭に持ってきたい場合に、「残り全て」を指定するために使う

#+begin_src R
FANG %>% select(date, everything()) %>% head(4)
#+end_src

#+RESULTS:
|       date | symbol |  open |  high |   low | close |   volume | adjusted |
|------------+--------+-------+-------+-------+-------+----------+----------|
| 2013-01-02 | FB     | 27.44 | 28.18 | 27.42 |    28 | 69846400 |       28 |
| 2013-01-03 | FB     | 27.88 | 28.47 | 27.59 | 27.77 | 63140600 |    27.77 |
| 2013-01-04 | FB     | 28.01 | 28.93 | 27.83 | 28.76 | 72715400 |    28.76 |
| 2013-01-07 | FB     | 28.69 | 29.79 | 28.65 | 29.42 | 83781800 |    29.42 |
\\

** ★☆☆ ~last_col(offset = 0L, vars = peek_vars())~.

- 後ろから offset を指定して選択

#+begin_src R :exports both :results output
col_names <- names(iris)
tidyselect::vars_select(col_names, last_col())
#+end_src

#+RESULTS:
: 
:   Petal.Width 
: "Petal.Width"
\\

* dplyr
** ★★★ ~vars(...)~.
** ★☆☆ ~all_vars(expr)~.
** ★☆☆ ~any_vars(expr)~.
* _all
** ★☆☆ ~arrange_all(.tbl, .funs = list(), ..., .by_group = FALSE)~.
** ★☆☆ ~distinct_all(.tbl, .funs = list(), ..., .keep_all = FALSE)~.
** ★☆☆ ~filter_all(.tbl, .vars_predicate, .preserve = FALSE)~.
** ★☆☆ ~group_by_all(.tbl, .funs = list(), ..., .add = FALSE, .drop = group_by_drop_default(.tbl))~.
** ★★☆ ~mutate_all(.tbl, .funs, ...)~.
** ★★☆ ~rename_all(.tbl, .funs = list(), ...)~.
** ★☆☆ ~select_all(.tbl, .funs = list(), ...)~.
** ★★☆ ~summarise_all(.tbl, .funs, ...)~.
** ★☆☆ ~transmute_all(.tbl, .funs, ...)~.
* _at
** ★☆☆ ~arrange_at(.tbl, .vars, .funs = list(), ..., .by_group = FALSE)~.
** ★☆☆ ~distinct_at(.tbl, .vars, .funs = list(), ..., .keep_all = FALSE)~.
** ★☆☆ ~filter_at(.tbl, .vars, .vars_predicate, .preserve = FALSE)~.
** ★☆☆ ~group_by_at(.tbl, .vars, .funs = list(), ..., .add = FALSE, .drop = group_by_drop_default(.tbl))~.
** ★★☆ ~mutate_at(.tbl, .vars, .funs, ..., .cols = NULL)~.
** ★★☆ ~rename_at(.tbl, .vars, .funs = list(), ...)~.
** ★★☆ ~select_at(.tbl, .vars, .funs = list(), ...)~.
** ★★☆ ~summarise_at(.tbl, .vars, .funs, ..., .cols = NULL)~.
** ★☆☆ ~transmute_at(.tbl, .vars, .funs, ..., .cols = NULL)~.
* _if
** ★☆☆ ~arrange_if(.tbl, .predicate, .funs = list(), ..., .by_group = FALSE)~.
** ★☆☆ ~distinct_if(.tbl, .predicate, .funs = list(), ..., .keep_all = FALSE)~.
** ★☆☆ ~filter_if(.tbl, .predicate, .vars_predicate, .preserve = FALSE)~.
** ★☆☆ ~group_by_if(.tbl, .predicate, .funs = list(), ..., .add = FALSE, .drop = group_by_drop_default(.tbl))~.
** ★☆☆ ~mutate_if(.tbl, .predicate, .funs, ...)~.
** ★☆☆ ~rename_if(.tbl, .predicate, .funs = list(), ...)~.
** ★☆☆ ~select_if(.tbl, .predicate, .funs = list(), ...)~.
** ★☆☆ ~summarise_if(.tbl, .predicate, .funs, ...)~.
** ★☆☆ ~transmute_if(.tbl, .predicate, .funs, ...)~.
* _prepare
** ★☆☆ ~distinct_prepare(.data, vars, group_vars = character(), .keep_all = FALSE)~.
** ★☆☆ ~group_by_prepare(.data, ..., .dots = list(), add = FALSE)~.
* 実行環境

#+begin_src R :results output :exports both
sessionInfo()
#+end_src

#+RESULTS:
#+begin_example
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] rlang_0.4.0                tidyquant_0.5.7           
[3] quantmod_0.4-15            TTR_0.23-5                
[5] PerformanceAnalytics_1.5.3 xts_0.11-2                
[7] zoo_1.8-6                  lubridate_1.7.4           
[9] dplyr_0.8.3               

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2       rstudioapi_0.10  magrittr_1.5     tidyselect_0.2.5
 [5] lattice_0.20-38  R6_2.4.0         quadprog_1.5-7   fansi_0.4.0     
 [9] httr_1.4.1       stringr_1.4.0    tools_3.6.1      grid_3.6.1      
[13] utf8_1.1.4       cli_1.1.0        assertthat_0.2.1 tibble_2.1.3    
[17] crayon_1.3.4     purrr_0.3.2      vctrs_0.2.0      zeallot_0.1.0   
[21] curl_3.3         Quandl_2.10.0    glue_1.3.1       stringi_1.4.3   
[25] compiler_3.6.1   pillar_1.4.2     backports_1.1.5  jsonlite_1.6    
[29] pkgconfig_2.0.3
#+end_example
