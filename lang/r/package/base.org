#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :session *R:base* :width 560 :height 420 :results output

* ライブラリの読み込み
  
#+begin_src R :results silent
library(tidyverse)
#+end_src
* 全関数

- アルファベットから始まる関数 = 1142 個
#+begin_src R
funs <- pacman::p_funs(base) %>% str_subset("^\\w")
length(funs)
funs
#+end_src

#+RESULTS:
#+begin_example
[1] 1142
   [1] "abbreviate"                         "abs"                               
   [3] "acos"                               "acosh"                             
   [5] "addNA"                              "addTaskCallback"                   
   [7] "agrep"                              "agrepl"                            
   [9] "alist"                              "all"                               
  [11] "all.equal"                          "all.equal.character"               
  [13] "all.equal.default"                  "all.equal.environment"             
  [15] "all.equal.envRefClass"              "all.equal.factor"                  
  [17] "all.equal.formula"                  "all.equal.language"                
  [19] "all.equal.list"                     "all.equal.numeric"                 
  [21] "all.equal.POSIXt"                   "all.equal.raw"                     
  [23] "all.names"                          "all.vars"                          
  [25] "allowInterrupts"                    "any"                               
  [27] "anyDuplicated"                      "anyDuplicated.array"               
  [29] "anyDuplicated.data.frame"           "anyDuplicated.default"             
  [31] "anyDuplicated.matrix"               "anyNA"                             
  [33] "anyNA.numeric_version"              "anyNA.POSIXlt"                     
  [35] "aperm"                              "aperm.default"                     
  [37] "aperm.table"                        "append"                            
  [39] "apply"                              "Arg"                               
  [41] "args"                               "array"                             
  [43] "arrayInd"                           "as.array"                          
  [45] "as.array.default"                   "as.call"                           
  [47] "as.character"                       "as.character.condition"            
  [49] "as.character.Date"                  "as.character.default"              
  [51] "as.character.error"                 "as.character.factor"               
  [53] "as.character.hexmode"               "as.character.numeric_version"      
  [55] "as.character.octmode"               "as.character.POSIXt"               
  [57] "as.character.srcref"                "as.complex"                        
  [59] "as.data.frame"                      "as.data.frame.array"               
  [61] "as.data.frame.AsIs"                 "as.data.frame.character"           
  [63] "as.data.frame.complex"              "as.data.frame.data.frame"          
  [65] "as.data.frame.Date"                 "as.data.frame.default"             
  [67] "as.data.frame.difftime"             "as.data.frame.factor"              
  [69] "as.data.frame.integer"              "as.data.frame.list"                
  [71] "as.data.frame.logical"              "as.data.frame.matrix"              
  [73] "as.data.frame.model.matrix"         "as.data.frame.noquote"             
  [75] "as.data.frame.numeric"              "as.data.frame.numeric_version"     
  [77] "as.data.frame.ordered"              "as.data.frame.POSIXct"             
  [79] "as.data.frame.POSIXlt"              "as.data.frame.raw"                 
  [81] "as.data.frame.table"                "as.data.frame.ts"                  
  [83] "as.data.frame.vector"               "as.Date"                           
  [85] "as.Date.character"                  "as.Date.default"                   
  [87] "as.Date.factor"                     "as.Date.numeric"                   
  [89] "as.Date.POSIXct"                    "as.Date.POSIXlt"                   
  [91] "as.difftime"                        "as.double"                         
  [93] "as.double.difftime"                 "as.double.POSIXlt"                 
  [95] "as.environment"                     "as.expression"                     
  [97] "as.expression.default"              "as.factor"                         
  [99] "as.function"                        "as.function.default"               
 [101] "as.hexmode"                         "as.integer"                        
 [103] "as.list"                            "as.list.data.frame"                
 [105] "as.list.Date"                       "as.list.default"                   
 [107] "as.list.environment"                "as.list.factor"                    
 [109] "as.list.function"                   "as.list.numeric_version"           
 [111] "as.list.POSIXct"                    "as.list.POSIXlt"                   
 [113] "as.logical"                         "as.logical.factor"                 
 [115] "as.matrix"                          "as.matrix.data.frame"              
 [117] "as.matrix.default"                  "as.matrix.noquote"                 
 [119] "as.matrix.POSIXlt"                  "as.name"                           
 [121] "as.null"                            "as.null.default"                   
 [123] "as.numeric"                         "as.numeric_version"                
 [125] "as.octmode"                         "as.ordered"                        
 [127] "as.package_version"                 "as.pairlist"                       
 [129] "as.POSIXct"                         "as.POSIXct.Date"                   
 [131] "as.POSIXct.default"                 "as.POSIXct.numeric"                
 [133] "as.POSIXct.POSIXlt"                 "as.POSIXlt"                        
 [135] "as.POSIXlt.character"               "as.POSIXlt.Date"                   
 [137] "as.POSIXlt.default"                 "as.POSIXlt.factor"                 
 [139] "as.POSIXlt.numeric"                 "as.POSIXlt.POSIXct"                
 [141] "as.qr"                              "as.raw"                            
 [143] "as.single"                          "as.single.default"                 
 [145] "as.symbol"                          "as.table"                          
 [147] "as.table.default"                   "as.vector"                         
 [149] "as.vector.factor"                   "asin"                              
 [151] "asinh"                              "asNamespace"                       
 [153] "asplit"                             "asS3"                              
 [155] "asS4"                               "assign"                            
 [157] "atan"                               "atan2"                             
 [159] "atanh"                              "attach"                            
 [161] "attachNamespace"                    "attr"                              
 [163] "attr.all.equal"                     "attr<-"                            
 [165] "attributes"                         "attributes<-"                      
 [167] "autoload"                           "autoloader"                        
 [169] "backsolve"                          "baseenv"                           
 [171] "basename"                           "besselI"                           
 [173] "besselJ"                            "besselK"                           
 [175] "besselY"                            "beta"                              
 [177] "bindingIsActive"                    "bindingIsLocked"                   
 [179] "bindtextdomain"                     "bitwAnd"                           
 [181] "bitwNot"                            "bitwOr"                            
 [183] "bitwShiftL"                         "bitwShiftR"                        
 [185] "bitwXor"                            "body"                              
 [187] "body<-"                             "bquote"                            
 [189] "break"                              "browser"                           
 [191] "browserCondition"                   "browserSetDebug"                   
 [193] "browserText"                        "builtins"                          
 [195] "by"                                 "by.data.frame"                     
 [197] "by.default"                         "bzfile"                            
 [199] "c"                                  "c.Date"                            
 [201] "c.difftime"                         "c.noquote"                         
 [203] "c.numeric_version"                  "c.POSIXct"                         
 [205] "c.POSIXlt"                          "c.warnings"                        
 [207] "call"                               "callCC"                            
 [209] "capabilities"                       "casefold"                          
 [211] "cat"                                "cbind"                             
 [213] "cbind.data.frame"                   "ceiling"                           
 [215] "char.expand"                        "character"                         
 [217] "charmatch"                          "charToRaw"                         
 [219] "chartr"                             "check_tzones"                      
 [221] "chkDots"                            "chol"                              
 [223] "chol.default"                       "chol2inv"                          
 [225] "choose"                             "class"                             
 [227] "class<-"                            "clearPushBack"                     
 [229] "close"                              "close.connection"                  
 [231] "close.srcfile"                      "close.srcfilealias"                
 [233] "closeAllConnections"                "col"                               
 [235] "colMeans"                           "colnames"                          
 [237] "colnames<-"                         "colSums"                           
 [239] "commandArgs"                        "comment"                           
 [241] "comment<-"                          "complex"                           
 [243] "computeRestarts"                    "conditionCall"                     
 [245] "conditionCall.condition"            "conditionMessage"                  
 [247] "conditionMessage.condition"         "conflictRules"                     
 [249] "conflicts"                          "Conj"                              
 [251] "contributors"                       "cos"                               
 [253] "cosh"                               "cospi"                             
 [255] "crossprod"                          "Cstack_info"                       
 [257] "cummax"                             "cummin"                            
 [259] "cumprod"                            "cumsum"                            
 [261] "curlGetHeaders"                     "cut"                               
 [263] "cut.Date"                           "cut.default"                       
 [265] "cut.POSIXt"                         "data.class"                        
 [267] "data.frame"                         "data.matrix"                       
 [269] "date"                               "debug"                             
 [271] "debuggingState"                     "debugonce"                         
 [273] "default.stringsAsFactors"           "delayedAssign"                     
 [275] "deparse"                            "det"                               
 [277] "detach"                             "determinant"                       
 [279] "determinant.matrix"                 "dget"                              
 [281] "diag"                               "diag<-"                            
 [283] "diff"                               "diff.Date"                         
 [285] "diff.default"                       "diff.difftime"                     
 [287] "diff.POSIXt"                        "difftime"                          
 [289] "digamma"                            "dim"                               
 [291] "dim.data.frame"                     "dim<-"                             
 [293] "dimnames"                           "dimnames.data.frame"               
 [295] "dimnames<-"                         "dimnames<-.data.frame"             
 [297] "dir"                                "dir.create"                        
 [299] "dir.exists"                         "dirname"                           
 [301] "do.call"                            "dontCheck"                         
 [303] "double"                             "dput"                              
 [305] "dQuote"                             "drop"                              
 [307] "droplevels"                         "droplevels.data.frame"             
 [309] "droplevels.factor"                  "dump"                              
 [311] "duplicated"                         "duplicated.array"                  
 [313] "duplicated.data.frame"              "duplicated.default"                
 [315] "duplicated.matrix"                  "duplicated.numeric_version"        
 [317] "duplicated.POSIXlt"                 "duplicated.warnings"               
 [319] "dyn.load"                           "dyn.unload"                        
 [321] "dynGet"                             "eapply"                            
 [323] "eigen"                              "emptyenv"                          
 [325] "enc2native"                         "enc2utf8"                          
 [327] "encodeString"                       "Encoding"                          
 [329] "Encoding<-"                         "endsWith"                          
 [331] "enquote"                            "env.profile"                       
 [333] "environment"                        "environment<-"                     
 [335] "environmentIsLocked"                "environmentName"                   
 [337] "errorCondition"                     "eval"                              
 [339] "eval.parent"                        "evalq"                             
 [341] "exists"                             "exp"                               
 [343] "expand.grid"                        "expm1"                             
 [345] "expression"                         "extSoftVersion"                    
 [347] "F"                                  "factor"                            
 [349] "factorial"                          "fifo"                              
 [351] "file"                               "file.access"                       
 [353] "file.append"                        "file.choose"                       
 [355] "file.copy"                          "file.create"                       
 [357] "file.exists"                        "file.info"                         
 [359] "file.link"                          "file.mode"                         
 [361] "file.mtime"                         "file.path"                         
 [363] "file.remove"                        "file.rename"                       
 [365] "file.show"                          "file.size"                         
 [367] "file.symlink"                       "Filter"                            
 [369] "Find"                               "find.package"                      
 [371] "findInterval"                       "findPackageEnv"                    
 [373] "findRestart"                        "floor"                             
 [375] "flush"                              "flush.connection"                  
 [377] "for"                                "force"                             
 [379] "forceAndCall"                       "formals"                           
 [381] "formals<-"                          "format"                            
 [383] "format.AsIs"                        "format.data.frame"                 
 [385] "format.Date"                        "format.default"                    
 [387] "format.difftime"                    "format.factor"                     
 [389] "format.hexmode"                     "format.info"                       
 [391] "format.libraryIQR"                  "format.numeric_version"            
 [393] "format.octmode"                     "format.packageInfo"                
 [395] "format.POSIXct"                     "format.POSIXlt"                    
 [397] "format.pval"                        "format.summaryDefault"             
 [399] "formatC"                            "formatDL"                          
 [401] "forwardsolve"                       "function"                          
 [403] "gamma"                              "gc"                                
 [405] "gc.time"                            "gcinfo"                            
 [407] "gctorture"                          "gctorture2"                        
 [409] "get"                                "get0"                              
 [411] "getAllConnections"                  "getCallingDLL"                     
 [413] "getCallingDLLe"                     "getConnection"                     
 [415] "getDLLRegisteredRoutines"           "getDLLRegisteredRoutines.character"
 [417] "getDLLRegisteredRoutines.DLLInfo"   "getElement"                        
 [419] "geterrmessage"                      "getExportedValue"                  
 [421] "getHook"                            "getLoadedDLLs"                     
 [423] "getNamespace"                       "getNamespaceExports"               
 [425] "getNamespaceImports"                "getNamespaceInfo"                  
 [427] "getNamespaceName"                   "getNamespaceUsers"                 
 [429] "getNamespaceVersion"                "getNativeSymbolInfo"               
 [431] "getOption"                          "getRversion"                       
 [433] "getSrcLines"                        "getTaskCallbackNames"              
 [435] "gettext"                            "gettextf"                          
 [437] "getwd"                              "gl"                                
 [439] "globalenv"                          "gregexpr"                          
 [441] "grep"                               "grepl"                             
 [443] "grepRaw"                            "grouping"                          
 [445] "gsub"                               "gzcon"                             
 [447] "gzfile"                             "I"                                 
 [449] "iconv"                              "iconvlist"                         
 [451] "icuGetCollate"                      "icuSetCollate"                     
 [453] "identical"                          "identity"                          
 [455] "if"                                 "ifelse"                            
 [457] "Im"                                 "importIntoEnv"                     
 [459] "inherits"                           "integer"                           
 [461] "interaction"                        "interactive"                       
 [463] "intersect"                          "intToBits"                         
 [465] "intToUtf8"                          "inverse.rle"                       
 [467] "invisible"                          "invokeRestart"                     
 [469] "invokeRestartInteractively"         "is.array"                          
 [471] "is.atomic"                          "is.call"                           
 [473] "is.character"                       "is.complex"                        
 [475] "is.data.frame"                      "is.double"                         
 [477] "is.element"                         "is.environment"                    
 [479] "is.expression"                      "is.factor"                         
 [481] "is.finite"                          "is.function"                       
 [483] "is.infinite"                        "is.integer"                        
 [485] "is.language"                        "is.list"                           
 [487] "is.loaded"                          "is.logical"                        
 [489] "is.matrix"                          "is.na"                             
 [491] "is.na.data.frame"                   "is.na.numeric_version"             
 [493] "is.na.POSIXlt"                      "is.na<-"                           
 [495] "is.na<-.default"                    "is.na<-.factor"                    
 [497] "is.na<-.numeric_version"            "is.name"                           
 [499] "is.nan"                             "is.null"                           
 [501] "is.numeric"                         "is.numeric_version"                
 [503] "is.numeric.Date"                    "is.numeric.difftime"               
 [505] "is.numeric.POSIXt"                  "is.object"                         
 [507] "is.ordered"                         "is.package_version"                
 [509] "is.pairlist"                        "is.primitive"                      
 [511] "is.qr"                              "is.R"                              
 [513] "is.raw"                             "is.recursive"                      
 [515] "is.single"                          "is.symbol"                         
 [517] "is.table"                           "is.unsorted"                       
 [519] "is.vector"                          "isatty"                            
 [521] "isBaseNamespace"                    "isdebugged"                        
 [523] "isFALSE"                            "isIncomplete"                      
 [525] "isNamespace"                        "isNamespaceLoaded"                 
 [527] "ISOdate"                            "ISOdatetime"                       
 [529] "isOpen"                             "isRestart"                         
 [531] "isS4"                               "isSeekable"                        
 [533] "isSymmetric"                        "isSymmetric.matrix"                
 [535] "isTRUE"                             "jitter"                            
 [537] "julian"                             "julian.Date"                       
 [539] "julian.POSIXt"                      "kappa"                             
 [541] "kappa.default"                      "kappa.lm"                          
 [543] "kappa.qr"                           "kronecker"                         
 [545] "l10n_info"                          "La_library"                        
 [547] "La_version"                         "La.svd"                            
 [549] "labels"                             "labels.default"                    
 [551] "lapply"                             "lazyLoad"                          
 [553] "lazyLoadDBexec"                     "lazyLoadDBfetch"                   
 [555] "lbeta"                              "lchoose"                           
 [557] "length"                             "length.POSIXlt"                    
 [559] "length<-"                           "length<-.Date"                     
 [561] "length<-.difftime"                  "length<-.factor"                   
 [563] "length<-.POSIXct"                   "length<-.POSIXlt"                  
 [565] "lengths"                            "letters"                           
 [567] "LETTERS"                            "levels"                            
 [569] "levels.default"                     "levels<-"                          
 [571] "levels<-.factor"                    "lfactorial"                        
 [573] "lgamma"                             "libcurlVersion"                    
 [575] "library"                            "library.dynam"                     
 [577] "library.dynam.unload"               "licence"                           
 [579] "license"                            "list"                              
 [581] "list.dirs"                          "list.files"                        
 [583] "list2env"                           "load"                              
 [585] "loadedNamespaces"                   "loadingNamespaceInfo"              
 [587] "loadNamespace"                      "local"                             
 [589] "lockBinding"                        "lockEnvironment"                   
 [591] "log"                                "log10"                             
 [593] "log1p"                              "log2"                              
 [595] "logb"                               "logical"                           
 [597] "lower.tri"                          "ls"                                
 [599] "make.names"                         "make.unique"                       
 [601] "makeActiveBinding"                  "Map"                               
 [603] "mapply"                             "margin.table"                      
 [605] "mat.or.vec"                         "match"                             
 [607] "match.arg"                          "match.call"                        
 [609] "match.fun"                          "Math.data.frame"                   
 [611] "Math.Date"                          "Math.difftime"                     
 [613] "Math.factor"                        "Math.POSIXt"                       
 [615] "matrix"                             "max"                               
 [617] "max.col"                            "mean"                              
 [619] "mean.Date"                          "mean.default"                      
 [621] "mean.difftime"                      "mean.POSIXct"                      
 [623] "mean.POSIXlt"                       "mem.limits"                        
 [625] "mem.maxNSize"                       "mem.maxVSize"                      
 [627] "memCompress"                        "memDecompress"                     
 [629] "memory.profile"                     "merge"                             
 [631] "merge.data.frame"                   "merge.default"                     
 [633] "message"                            "mget"                              
 [635] "min"                                "missing"                           
 [637] "Mod"                                "mode"                              
 [639] "mode<-"                             "month.abb"                         
 [641] "month.name"                         "months"                            
 [643] "months.Date"                        "months.POSIXt"                     
 [645] "mostattributes<-"                   "names"                             
 [647] "names.POSIXlt"                      "names<-"                           
 [649] "names<-.POSIXlt"                    "namespaceExport"                   
 [651] "namespaceImport"                    "namespaceImportClasses"            
 [653] "namespaceImportFrom"                "namespaceImportMethods"            
 [655] "nargs"                              "nchar"                             
 [657] "ncol"                               "NCOL"                              
 [659] "Negate"                             "new.env"                           
 [661] "next"                               "NextMethod"                        
 [663] "ngettext"                           "nlevels"                           
 [665] "noquote"                            "norm"                              
 [667] "normalizePath"                      "nrow"                              
 [669] "NROW"                               "nullfile"                          
 [671] "numeric"                            "numeric_version"                   
 [673] "nzchar"                             "objects"                           
 [675] "oldClass"                           "oldClass<-"                        
 [677] "OlsonNames"                         "on.exit"                           
 [679] "open"                               "open.connection"                   
 [681] "open.srcfile"                       "open.srcfilealias"                 
 [683] "open.srcfilecopy"                   "Ops.data.frame"                    
 [685] "Ops.Date"                           "Ops.difftime"                      
 [687] "Ops.factor"                         "Ops.numeric_version"               
 [689] "Ops.ordered"                        "Ops.POSIXt"                        
 [691] "options"                            "order"                             
 [693] "ordered"                            "outer"                             
 [695] "package_version"                    "packageEvent"                      
 [697] "packageHasNamespace"                "packageNotFoundError"              
 [699] "packageStartupMessage"              "packBits"                          
 [701] "pairlist"                           "parent.env"                        
 [703] "parent.env<-"                       "parent.frame"                      
 [705] "parse"                              "parseNamespaceFile"                
 [707] "paste"                              "paste0"                            
 [709] "path.expand"                        "path.package"                      
 [711] "pcre_config"                        "pi"                                
 [713] "pipe"                               "pmatch"                            
 [715] "pmax"                               "pmax.int"                          
 [717] "pmin"                               "pmin.int"                          
 [719] "polyroot"                           "pos.to.env"                        
 [721] "Position"                           "pretty"                            
 [723] "pretty.default"                     "prettyNum"                         
 [725] "print"                              "print.AsIs"                        
 [727] "print.by"                           "print.condition"                   
 [729] "print.connection"                   "print.data.frame"                  
 [731] "print.Date"                         "print.default"                     
 [733] "print.difftime"                     "print.Dlist"                       
 [735] "print.DLLInfo"                      "print.DLLInfoList"                 
 [737] "print.DLLRegisteredRoutines"        "print.eigen"                       
 [739] "print.factor"                       "print.function"                    
 [741] "print.hexmode"                      "print.libraryIQR"                  
 [743] "print.listof"                       "print.NativeRoutineList"           
 [745] "print.noquote"                      "print.numeric_version"             
 [747] "print.octmode"                      "print.packageInfo"                 
 [749] "print.POSIXct"                      "print.POSIXlt"                     
 [751] "print.proc_time"                    "print.restart"                     
 [753] "print.rle"                          "print.simple.list"                 
 [755] "print.srcfile"                      "print.srcref"                      
 [757] "print.summary.table"                "print.summary.warnings"            
 [759] "print.summaryDefault"               "print.table"                       
 [761] "print.warnings"                     "prmatrix"                          
 [763] "proc.time"                          "prod"                              
 [765] "prop.table"                         "provideDimnames"                   
 [767] "psigamma"                           "pushBack"                          
 [769] "pushBackLength"                     "q"                                 
 [771] "qr"                                 "qr.coef"                           
 [773] "qr.default"                         "qr.fitted"                         
 [775] "qr.Q"                               "qr.qty"                            
 [777] "qr.qy"                              "qr.R"                              
 [779] "qr.resid"                           "qr.solve"                          
 [781] "qr.X"                               "quarters"                          
 [783] "quarters.Date"                      "quarters.POSIXt"                   
 [785] "quit"                               "quote"                             
 [787] "R_system_version"                   "R.home"                            
 [789] "R.version"                          "R.Version"                         
 [791] "R.version.string"                   "range"                             
 [793] "range.default"                      "rank"                              
 [795] "rapply"                             "raw"                               
 [797] "rawConnection"                      "rawConnectionValue"                
 [799] "rawShift"                           "rawToBits"                         
 [801] "rawToChar"                          "rbind"                             
 [803] "rbind.data.frame"                   "rcond"                             
 [805] "Re"                                 "read.dcf"                          
 [807] "readBin"                            "readChar"                          
 [809] "readline"                           "readLines"                         
 [811] "readRDS"                            "readRenviron"                      
 [813] "Recall"                             "Reduce"                            
 [815] "reg.finalizer"                      "regexec"                           
 [817] "regexpr"                            "registerS3method"                  
 [819] "registerS3methods"                  "regmatches"                        
 [821] "regmatches<-"                       "remove"                            
 [823] "removeTaskCallback"                 "rep"                               
 [825] "rep_len"                            "rep.Date"                          
 [827] "rep.factor"                         "rep.int"                           
 [829] "rep.numeric_version"                "rep.POSIXct"                       
 [831] "rep.POSIXlt"                        "repeat"                            
 [833] "replace"                            "replicate"                         
 [835] "require"                            "requireNamespace"                  
 [837] "restartDescription"                 "restartFormals"                    
 [839] "retracemem"                         "return"                            
 [841] "returnValue"                        "rev"                               
 [843] "rev.default"                        "rle"                               
 [845] "rm"                                 "RNGkind"                           
 [847] "RNGversion"                         "round"                             
 [849] "round.Date"                         "round.POSIXt"                      
 [851] "row"                                "row.names"                         
 [853] "row.names.data.frame"               "row.names.default"                 
 [855] "row.names<-"                        "row.names<-.data.frame"            
 [857] "row.names<-.default"                "rowMeans"                          
 [859] "rownames"                           "rownames<-"                        
 [861] "rowsum"                             "rowsum.data.frame"                 
 [863] "rowsum.default"                     "rowSums"                           
 [865] "sample"                             "sample.int"                        
 [867] "sapply"                             "save"                              
 [869] "save.image"                         "saveRDS"                           
 [871] "scale"                              "scale.default"                     
 [873] "scan"                               "search"                            
 [875] "searchpaths"                        "seek"                              
 [877] "seek.connection"                    "seq"                               
 [879] "seq_along"                          "seq_len"                           
 [881] "seq.Date"                           "seq.default"                       
 [883] "seq.int"                            "seq.POSIXt"                        
 [885] "sequence"                           "serialize"                         
 [887] "set.seed"                           "setdiff"                           
 [889] "setequal"                           "setHook"                           
 [891] "setNamespaceInfo"                   "setSessionTimeLimit"               
 [893] "setTimeLimit"                       "setwd"                             
 [895] "showConnections"                    "shQuote"                           
 [897] "sign"                               "signalCondition"                   
 [899] "signif"                             "simpleCondition"                   
 [901] "simpleError"                        "simpleMessage"                     
 [903] "simpleWarning"                      "simplify2array"                    
 [905] "sin"                                "single"                            
 [907] "sinh"                               "sink"                              
 [909] "sink.number"                        "sinpi"                             
 [911] "slice.index"                        "socketConnection"                  
 [913] "socketSelect"                       "solve"                             
 [915] "solve.default"                      "solve.qr"                          
 [917] "sort"                               "sort.default"                      
 [919] "sort.int"                           "sort.list"                         
 [921] "sort.POSIXlt"                       "source"                            
 [923] "split"                              "split.data.frame"                  
 [925] "split.Date"                         "split.default"                     
 [927] "split.POSIXct"                      "split<-"                           
 [929] "split<-.data.frame"                 "split<-.default"                   
 [931] "sprintf"                            "sqrt"                              
 [933] "sQuote"                             "srcfile"                           
 [935] "srcfilealias"                       "srcfilecopy"                       
 [937] "srcref"                             "standardGeneric"                   
 [939] "startsWith"                         "stderr"                            
 [941] "stdin"                              "stdout"                            
 [943] "stop"                               "stopifnot"                         
 [945] "storage.mode"                       "storage.mode<-"                    
 [947] "str2expression"                     "str2lang"                          
 [949] "strftime"                           "strptime"                          
 [951] "strrep"                             "strsplit"                          
 [953] "strtoi"                             "strtrim"                           
 [955] "structure"                          "strwrap"                           
 [957] "sub"                                "subset"                            
 [959] "subset.data.frame"                  "subset.default"                    
 [961] "subset.matrix"                      "substitute"                        
 [963] "substr"                             "substr<-"                          
 [965] "substring"                          "substring<-"                       
 [967] "sum"                                "summary"                           
 [969] "summary.connection"                 "summary.data.frame"                
 [971] "Summary.data.frame"                 "summary.Date"                      
 [973] "Summary.Date"                       "summary.default"                   
 [975] "Summary.difftime"                   "summary.factor"                    
 [977] "Summary.factor"                     "summary.matrix"                    
 [979] "Summary.numeric_version"            "Summary.ordered"                   
 [981] "summary.POSIXct"                    "Summary.POSIXct"                   
 [983] "summary.POSIXlt"                    "Summary.POSIXlt"                   
 [985] "summary.proc_time"                  "summary.srcfile"                   
 [987] "summary.srcref"                     "summary.table"                     
 [989] "summary.warnings"                   "suppressMessages"                  
 [991] "suppressPackageStartupMessages"     "suppressWarnings"                  
 [993] "suspendInterrupts"                  "svd"                               
 [995] "sweep"                              "switch"                            
 [997] "sys.call"                           "sys.calls"                         
 [999] "Sys.chmod"                          "Sys.Date"                          
 [ reached getOption("max.print") -- omitted 142 entries ]
#+end_example
* Predicate (50) -> [[file:../general/predicate.org][predicate]]

#+begin_src R
pred_funs <- str_subset(funs, "^is\\.")
length(pred_funs)
pred_funs
#+end_src

#+RESULTS:
#+begin_example
[1] 50
 [1] "is.array"                "is.atomic"              
 [3] "is.call"                 "is.character"           
 [5] "is.complex"              "is.data.frame"          
 [7] "is.double"               "is.element"             
 [9] "is.environment"          "is.expression"          
[11] "is.factor"               "is.finite"              
[13] "is.function"             "is.infinite"            
[15] "is.integer"              "is.language"            
[17] "is.list"                 "is.loaded"              
[19] "is.logical"              "is.matrix"              
[21] "is.na"                   "is.na.data.frame"       
[23] "is.na.numeric_version"   "is.na.POSIXlt"          
[25] "is.na<-"                 "is.na<-.default"        
[27] "is.na<-.factor"          "is.na<-.numeric_version"
[29] "is.name"                 "is.nan"                 
[31] "is.null"                 "is.numeric"             
[33] "is.numeric_version"      "is.numeric.Date"        
[35] "is.numeric.difftime"     "is.numeric.POSIXt"      
[37] "is.object"               "is.ordered"             
[39] "is.package_version"      "is.pairlist"            
[41] "is.primitive"            "is.qr"                  
[43] "is.R"                    "is.raw"                 
[45] "is.recursive"            "is.single"              
[47] "is.symbol"               "is.table"               
[49] "is.unsorted"             "is.vector"
#+end_example

* Cast (106)

#+begin_src R
cast_funs <- str_subset(funs, "^as\\.")
length(cast_funs)
cast_funs
#+end_src

#+RESULTS:
#+begin_example
[1] 106
  [1] "as.array"                      "as.array.default"             
  [3] "as.call"                       "as.character"                 
  [5] "as.character.condition"        "as.character.Date"            
  [7] "as.character.default"          "as.character.error"           
  [9] "as.character.factor"           "as.character.hexmode"         
 [11] "as.character.numeric_version"  "as.character.octmode"         
 [13] "as.character.POSIXt"           "as.character.srcref"          
 [15] "as.complex"                    "as.data.frame"                
 [17] "as.data.frame.array"           "as.data.frame.AsIs"           
 [19] "as.data.frame.character"       "as.data.frame.complex"        
 [21] "as.data.frame.data.frame"      "as.data.frame.Date"           
 [23] "as.data.frame.default"         "as.data.frame.difftime"       
 [25] "as.data.frame.factor"          "as.data.frame.integer"        
 [27] "as.data.frame.list"            "as.data.frame.logical"        
 [29] "as.data.frame.matrix"          "as.data.frame.model.matrix"   
 [31] "as.data.frame.noquote"         "as.data.frame.numeric"        
 [33] "as.data.frame.numeric_version" "as.data.frame.ordered"        
 [35] "as.data.frame.POSIXct"         "as.data.frame.POSIXlt"        
 [37] "as.data.frame.raw"             "as.data.frame.table"          
 [39] "as.data.frame.ts"              "as.data.frame.vector"         
 [41] "as.Date"                       "as.Date.character"            
 [43] "as.Date.default"               "as.Date.factor"               
 [45] "as.Date.numeric"               "as.Date.POSIXct"              
 [47] "as.Date.POSIXlt"               "as.difftime"                  
 [49] "as.double"                     "as.double.difftime"           
 [51] "as.double.POSIXlt"             "as.environment"               
 [53] "as.expression"                 "as.expression.default"        
 [55] "as.factor"                     "as.function"                  
 [57] "as.function.default"           "as.hexmode"                   
 [59] "as.integer"                    "as.list"                      
 [61] "as.list.data.frame"            "as.list.Date"                 
 [63] "as.list.default"               "as.list.environment"          
 [65] "as.list.factor"                "as.list.function"             
 [67] "as.list.numeric_version"       "as.list.POSIXct"              
 [69] "as.list.POSIXlt"               "as.logical"                   
 [71] "as.logical.factor"             "as.matrix"                    
 [73] "as.matrix.data.frame"          "as.matrix.default"            
 [75] "as.matrix.noquote"             "as.matrix.POSIXlt"            
 [77] "as.name"                       "as.null"                      
 [79] "as.null.default"               "as.numeric"                   
 [81] "as.numeric_version"            "as.octmode"                   
 [83] "as.ordered"                    "as.package_version"           
 [85] "as.pairlist"                   "as.POSIXct"                   
 [87] "as.POSIXct.Date"               "as.POSIXct.default"           
 [89] "as.POSIXct.numeric"            "as.POSIXct.POSIXlt"           
 [91] "as.POSIXlt"                    "as.POSIXlt.character"         
 [93] "as.POSIXlt.Date"               "as.POSIXlt.default"           
 [95] "as.POSIXlt.factor"             "as.POSIXlt.numeric"           
 [97] "as.POSIXlt.POSIXct"            "as.qr"                        
 [99] "as.raw"                        "as.single"                    
[101] "as.single.default"             "as.symbol"                    
[103] "as.table"                      "as.table.default"             
[105] "as.vector"                     "as.vector.factor"
#+end_example

* all.equal (12)

- =all.equal()= の S3 メソッド群
#+begin_src R
equal_funs <- str_subset(funs, "^all\\.equal")
length(equal_funs)
equal_funs
#+end_src

#+RESULTS:
: [1] 12
:  [1] "all.equal"             "all.equal.character"   "all.equal.default"    
:  [4] "all.equal.environment" "all.equal.envRefClass" "all.equal.factor"     
:  [7] "all.equal.formula"     "all.equal.language"    "all.equal.list"       
: [10] "all.equal.numeric"     "all.equal.POSIXt"      "all.equal.raw"

* sample (2)

#+begin_src R
sample_funs <- str_subset(funs, "^sample")
length(sample_funs)
sample_funs
#+end_src

#+RESULTS:
: [1] 2
: [1] "sample"     "sample.int"
* Higher order functions (16)

#+begin_src R
apply_funs <- str_subset(funs, "apply")
length(apply_funs)
apply_funs
#+end_src

#+RESULTS:
: [1] 8
: [1] "apply"  "eapply" "lapply" "mapply" "rapply" "sapply" "tapply" "vapply"

- *High-Order Functions* = 高階関数 (関数を引数にしたり、戻り値にする関数)
- *Closure* = 高階関数の中でも、関数によって作成された関数
#+begin_src R :results silent
apply(X, MARGIN, FUN, ...) # X matrix, MARGIN 1=row, 2=column
eapply(env, FUN, ..., all.names = FALSE, USE.NAMES = TRUE)
lapply(X, FUN, ...) # X vector or list
mapply(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE)
rapply(object, f, classes = "ANY", deflt = NULL, how = c("unlist", "replace", "list"), ...)
sapply(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE) # X vector or list
tapply(X, INDEX, FUN = NULL, ..., default = NA, simplify = TRUE)
vapply(X, FUN, FUN.VALUE, ..., USE.NAMES = TRUE) # X vector or list

replicate(n, expr, simplify = "array") # sapply wrapper
simplify2array(x, higher = TRUE) # sapply utility

Reduce(f, x, init, right = FALSE, accumulate = FALSE)
Filter(f, x)
Find(f, x, right = FALSE, nomatch = NULL)
Map(f, ...)
Negate(f)
Position(f, x, right = FALSE, nomatch = NA_integer_)
#+end_src
* Print (37)

#+begin_src R
print_funs <- str_subset(funs, "^print")
length(print_funs)
print_funs
#+end_src

#+RESULTS:
#+begin_example
[1] 37
 [1] "print"                       "print.AsIs"                 
 [3] "print.by"                    "print.condition"            
 [5] "print.connection"            "print.data.frame"           
 [7] "print.Date"                  "print.default"              
 [9] "print.difftime"              "print.Dlist"                
[11] "print.DLLInfo"               "print.DLLInfoList"          
[13] "print.DLLRegisteredRoutines" "print.eigen"                
[15] "print.factor"                "print.function"             
[17] "print.hexmode"               "print.libraryIQR"           
[19] "print.listof"                "print.NativeRoutineList"    
[21] "print.noquote"               "print.numeric_version"      
[23] "print.octmode"               "print.packageInfo"          
[25] "print.POSIXct"               "print.POSIXlt"              
[27] "print.proc_time"             "print.restart"              
[29] "print.rle"                   "print.simple.list"          
[31] "print.srcfile"               "print.srcref"               
[33] "print.summary.table"         "print.summary.warnings"     
[35] "print.summaryDefault"        "print.table"                
[37] "print.warnings"
#+end_example
* structure
