#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results output :session *R:pca* :width 640 :height 480

* 主成分分析(principal component analysis: PCA)

概要
- 相関のある多変数から相関のない少数で全体のばらつきを最もよく表す主成分を合成する
- 相関関係を用いて、無相関な変数をあらたに合成する
- データの分散を最大にするように主成分軸を引く
- 主成分軸の寄与率 (データを説明できる度合い) を見る
- データセットを元のデータ変数の空間から主成分ベクトルのなす空間へ射影したもの

目的
- データの特徴を損なわずに次元を削減するために用いられる (次元圧縮)
- 多変数を可視化するため (多変数を 2-3 の変数に縮約する)

手法
- 第一主成分の分散を最大化
- 続く主成分はそれまでに決定した主成分と直交するという拘束条件の下で分散を最大化
- M 次元から N 次元に写像する

* [[https://logics-of-blue.com/principal-components-analysis/][主成分分析の考え方@Logics of Blue]] の例
** データ

#+begin_src R :results output graphics file :file (my/get-babel-file)
sample_data <- data.frame(
  X = c(2,4, 6, 5,7, 8,10),
  Y = c(6,8,10,11,9,12,14)
)

plot(Y ~ X, data=sample_data)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-jFlrdc.png]]

** 寄与率

- 主成分分析には、 =prcomp()= を使う
  - =princomp()= もあるが、制約があるため =prcomp()= を使う
- =sacle = TRUE= で相関係数に対して固有値ベクトルを求める 
  - default は FALSE であるが S 言語との互換性のため
- Propotion of Variance = 寄与率
#+begin_src R
pcr_model_sample <- prcomp(sample_data, scale=TRUE)
summary(pcr_model_sample)
#+end_src

#+RESULTS:
: 
: Importance of components:
:                           PC1     PC2
: Standard deviation     1.3801 0.30861
: Proportion of Variance 0.9524 0.04762
: Cumulative Proportion  0.9524 1.00000

** 主成分得点

#+begin_src R
pcr_model_sample$x
#+end_src

#+RESULTS:
:            PC1        PC2
: [1,] -2.138090  0.0000000
: [2,] -1.069045  0.0000000
: [3,]  0.000000  0.0000000
: [4,]  0.000000  0.5345225
: [5,]  0.000000 -0.5345225
: [6,]  1.069045  0.0000000
: [7,]  2.138090  0.0000000

** 主成分得点の図示

- =biplot()=
- 主成分を x,y 軸に合わせてプロットする
- 2 変数であれば、x-y 軸の 2 軸で表現できる (3 変数であれば 3 次元)
#+begin_src R :results output graphics file :file (my/get-babel-file)
par(mfrow=c(1,2))
plot(Y ~ X, data=sample_data, main="元のデータ")
biplot(pcr_model_sample, main="主成分軸に合わせて回転された")
par(mfrow=c(1,1))
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-pu5N7m.png]]

** 主成分軸の計算方法

- データのいずれかの固有値問題を解く
  - 分散共分散行列
  - 相関係数

- rotation = 回転
  - 各変数への Factor の負荷率 (Loading) を表す
#+begin_src R
cov(sample_data)
cor(sample_data)

eigen_a <- eigen(cov(sample_data))
eigen_b <- eigen(cor(sample_data))

eigen_a$vectors
eigen_b$vectors
pcr_model_sample$rotation # 上の2つの結果と一致
#+end_src

#+RESULTS:
#+begin_example
         X        Y
X 7.000000 6.333333
Y 6.333333 7.000000

          X         Y
X 1.0000000 0.9047619
Y 0.9047619 1.0000000

          [,1]       [,2]
[1,] 0.7071068 -0.7071068
[2,] 0.7071068  0.7071068

          [,1]       [,2]
[1,] 0.7071068 -0.7071068
[2,] 0.7071068  0.7071068

        PC1        PC2
X 0.7071068 -0.7071068
Y 0.7071068  0.7071068
#+end_example

- 固有値ベクトルと元データを掛けると主成分得点が計算できる
- 主成分を用いた回帰分析
  - a は固有ベクトル, c は定数
  - 係数 x 変数ではなく、固有ベクトル x 主成分という関係

$Y_i = \alpha_{i,1} PC1 + \alpha_{i,2} PC2 + \dots + c_i$

#+begin_src R
as.matrix(sample_data) %*% eigen_a$vectors
#+end_src

#+RESULTS:
:           [,1]     [,2]
: [1,]  5.656854 2.828427
: [2,]  8.485281 2.828427
: [3,] 11.313708 2.828427
: [4,] 11.313708 4.242641
: [5,] 11.313708 1.414214
: [6,] 14.142136 2.828427
: [7,] 16.970563 2.828427

** iris を分析

- Rotation = 相関係数の固有値ベクトル = 因子寄与率 (Factor Loading)
- PC1 で 7 割を説明

#+begin_src R
pca_data <- iris[,-5] # Species はfactor なので除外
model_pca_iris <- prcomp(pca_data, scale=T)

model_pca_iris
summary(model_pca_iris)
#+end_src

#+RESULTS:
#+begin_example
Standard deviations (1, .., p=4):
[1] 1.7083611 0.9560494 0.3830886 0.1439265

Rotation (n x k) = (4 x 4):
                    PC1         PC2        PC3        PC4
Sepal.Length  0.5210659 -0.37741762  0.7195664  0.2612863
Sepal.Width  -0.2693474 -0.92329566 -0.2443818 -0.1235096
Petal.Length  0.5804131 -0.02449161 -0.1421264 -0.8014492
Petal.Width   0.5648565 -0.06694199 -0.6342727  0.5235971
Importance of components:
                          PC1    PC2     PC3     PC4
Standard deviation     1.7084 0.9560 0.38309 0.14393
Proportion of Variance 0.7296 0.2285 0.03669 0.00518
Cumulative Proportion  0.7296 0.9581 0.99482 1.00000
#+end_example

- =ggbiplot::ggbiplot()= でプロット
- group 毎に楕円を書いてくれる
- 変数の矢印の意味
  - 向きが固有ベクトルの値 (Loading) になっている
  - 左右 = PC1 に対しての影響
  - 上下 = PC2 に対しての影響
  - 矢印の方向が同じであれば、似た効果を持つ変数と言える
  - Sepal.Width が特異な変数
#+begin_src R :results output graphics file :file (my/get-babel-file)

## devtools::install_github("vqv/ggbiplot") # CRAN にはない
library(ggbiplot)
ggbiplot(
  model_pca_iris, 
  obs.scale = 1, 
  var.scale = 1, 
  groups = iris$Species, 
  ellipse = TRUE, 
  circle = TRUE,
  alpha=0.5
)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-zsCn2R.png]]

* 参考

- [[https://ja.wikipedia.org/wiki/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%9][主成分分析@Wikipedia]]
- [[https://logics-of-blue.com/principal-components-analysis/][主成分分析の考え方@Logics of Blue]]
- [[https://qiita.com/NoriakiOshita/items/460247bb57c22973a5f0][意味がわかる主成分分析@Qiita]]
- [[https://orizuru.io/blog/machine-learning/pca_kaisetsu/][主成分分析とは何なのか、とにかく全力でわかりやすく解説する@Orizuru]]
