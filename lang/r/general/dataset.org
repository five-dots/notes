#+startup: folded indent
#+property: header-args:R :results value :session *R:dataset* :colnames yes

* Table of Contents :toc:quote:
#+BEGIN_QUOTE
- [[#library][Library]]
- [[#by-package][By Package]]
  - [[#datasets-package][datasets package]]
    - [[#list][List]]
    - [[#iris][iris]]
    - [[#mtcars][mtcars]]
    - [[#sleep][sleep]]
    - [[#warpbreaks-poisson][warpbreaks (poisson)]]
  - [[#ggplot2-package][ggplot2 package]]
    - [[#list-1][List]]
    - [[#mpg][mpg]]
  - [[#dplyr-package][dplyr package]]
    - [[#list-2][List]]
  - [[#mlbench-package][mlbench package]]
    - [[#list-3][List]]
    - [[#bostonhousing-regression][BostonHousing (regression)]]
    - [[#breastcancer-binary][BreastCancer (binary)]]
    - [[#dna-multiclass][DNA (multiclass)]]
    - [[#glass-multiclass][Glass (multiclass)]]
    - [[#housevotes84-binary][HouseVotes84 (binary)]]
    - [[#ionosphere-binary][Ionosphere (binary)]]
    - [[#letterrecognition-multiclass][LetterRecognition (multiclass)]]
    - [[#ozone][Ozone]]
    - [[#pimaindiansdiabetes-binary][PimaIndiansDiabetes (binary)]]
    - [[#satellite-multiclass][Satellite (multiclass)]]
    - [[#servo-regression][Servo (regression)]]
    - [[#shuttle-multiclass][Shuttle (multiclass)]]
    - [[#sonar-binary][Sonar (binary)]]
    - [[#soybean-multiclass][Soybean (multiclass)]]
    - [[#vehicle-multiclass][Vehicle (multiclass)]]
    - [[#vowel-multiclass][Vowel (multiclass)]]
    - [[#zoo-multiclass][Zoo (multiclass)]]
  - [[#modeldata-package][modeldata package]]
    - [[#list-4][List]]
    - [[#chicago-regression-time-series][Chicago (regression, time-series)]]
    - [[#sacramento-regression][Sacramento (regression)]]
    - [[#smithsonian-geo-data][Smithsonian (geo data)]]
    - [[#ad_data][ad_data]]
    - [[#attrition-binary][attrition (binary)]]
    - [[#biomass-regression][biomass (regression)]]
    - [[#car_prices-regression][car_prices (regression)]]
    - [[#cells-binary][cells (binary)]]
    - [[#check_times-regression][check_times (regression)]]
    - [[#concrete-regression][concrete (regression)]]
    - [[#covers][covers]]
    - [[#credit_data-binary][credit_data (binary)]]
    - [[#drinks-time-series][drinks (time-series)]]
    - [[#hpc_cv-multiclass][hpc_cv (multiclass)]]
    - [[#hpc_data-multiclass][hpc_data (multiclass)]]
    - [[#lending_club-binary][lending_club (binary)]]
    - [[#meats-regression][meats (regression)]]
    - [[#mlc_churn-binary][mlc_churn (binary)]]
    - [[#oils-multiclass][oils (multiclass)]]
    - [[#okc-binary][okc (binary)]]
    - [[#okc_test-natural-language][okc_test (natural language)]]
    - [[#parabolic-binary][parabolic (binary)]]
    - [[#pathology-binary][pathology (binary)]]
    - [[#pd_speech][pd_speech]]
    - [[#scat][scat]]
    - [[#solubility_test-regression][solubility_test (regression)]]
    - [[#stackoverflow][stackoverflow]]
    - [[#two_class_dat-binary][two_class_dat (binary)]]
    - [[#two_class_example-binary][two_class_example (binary)]]
    - [[#wa_churn-binary][wa_churn (binary)]]
  - [[#nycflights13-package][nycflights13 package]]
    - [[#list-5][List]]
    - [[#flights][flights]]
    - [[#weather][weather]]
    - [[#planes][planes]]
    - [[#airports][airports]]
    - [[#airlnes][airlnes]]
  - [[#faraway-package][faraway package]]
    - [[#list-6][List]]
    - [[#gala][gala]]
- [[#simulation-data][Simulation Data]]
  - [[#binary-task][Binary Task]]
  - [[#multiclass-task][Multiclass Task]]
  - [[#regression-task][Regression Task]]
  - [[#poisson-regression-task][Poisson Regression Task]]
- [[#summary-by-task][Summary by Task]]
  - [[#binary-task-1][Binary Task]]
  - [[#multiclass-task-1][Multiclass Task]]
  - [[#multiclass-task-image][Multiclass Task (Image)]]
  - [[#regression-task-1][Regression Task]]
  - [[#poisson-regression-task-1][Poisson Regression Task]]
  - [[#time-series-task][Time-Series Task]]
  - [[#natural-language-task][Natural Language Task]]
- [[#kaggle][Kaggle]]
- [[#links][Links]]
#+END_QUOTE

* Library

#+begin_src R :results silent
library(tidyverse)
library(datasets)
library(nycflights13)
library(mlbench)
library(modeldata)
library(faraway)
#+end_src

* By Package
** datasets package
*** List

#+begin_src R :rownames yes :exports both
pacman::p_data(datasets)
#+end_src

#+RESULTS:
|     | Data                   | Description                                                     |
|-----+------------------------+-----------------------------------------------------------------|
|   1 | AirPassengers          | Monthly Airline Passenger Numbers 1949-1960                     |
|   2 | BJsales                | Sales Data with Leading Indicator                               |
|   3 | BJsales.lead (BJsales) | Sales Data with Leading Indicator                               |
|   4 | BOD                    | Biochemical Oxygen Demand                                       |
|   5 | CO2                    | Carbon Dioxide Uptake in Grass Plants                           |
|   6 | ChickWeight            | Weight versus age of chicks on different diets                  |
|   7 | DNase                  | Elisa assay of DNase                                            |
|   8 | EuStockMarkets         | Daily Closing Prices of Major European Stock Indices, 1991-1998 |
|   9 | Formaldehyde           | Determination of Formaldehyde                                   |
|  10 | HairEyeColor           | Hair and Eye Color of Statistics Students                       |
|  11 | Harman23.cor           | Harman Example 2.3                                              |
|  12 | Harman74.cor           | Harman Example 7.4                                              |
|  13 | Indometh               | Pharmacokinetics of Indomethacin                                |
|  14 | InsectSprays           | Effectiveness of Insect Sprays                                  |
|  15 | JohnsonJohnson         | Quarterly Earnings per Johnson & Johnson Share                  |
|  16 | LakeHuron              | Level of Lake Huron 1875-1972                                   |
|  17 | LifeCycleSavings       | Intercountry Life-Cycle Savings Data                            |
|  18 | Loblolly               | Growth of Loblolly pine trees                                   |
|  19 | Nile                   | Flow of the River Nile                                          |
|  20 | Orange                 | Growth of Orange Trees                                          |
|  21 | OrchardSprays          | Potency of Orchard Sprays                                       |
|  22 | PlantGrowth            | Results from an Experiment on Plant Growth                      |
|  23 | Puromycin              | Reaction Velocity of an Enzymatic Reaction                      |
|  24 | Seatbelts              | Road Casualties in Great Britain 1969-84                        |
|  25 | Theoph                 | Pharmacokinetics of Theophylline                                |
|  26 | Titanic                | Survival of passengers on the Titanic                           |
|  27 | ToothGrowth            | The Effect of Vitamin C on Tooth Growth in Guinea Pigs          |
|  28 | UCBAdmissions          | Student Admissions at UC Berkeley                               |
|  29 | UKDriverDeaths         | Road Casualties in Great Britain 1969-84                        |
|  30 | UKgas                  | UK Quarterly Gas Consumption                                    |
|  31 | USAccDeaths            | Accidental Deaths in the US 1973-1978                           |
|  32 | USArrests              | Violent Crime Rates by US State                                 |
|  33 | USJudgeRatings         | Lawyers' Ratings of State Judges in the US Superior Court       |
|  34 | USPersonalExpenditure  | Personal Expenditure Data                                       |
|  35 | UScitiesD              | Distances Between European Cities and Between US Cities         |
|  36 | VADeaths               | Death Rates in Virginia (1940)                                  |
|  37 | WWWusage               | Internet Usage per Minute                                       |
|  38 | WorldPhones            | The World's Telephones                                          |
|  39 | ability.cov            | Ability and Intelligence Tests                                  |
|  40 | airmiles               | Passenger Miles on Commercial US Airlines, 1937-1960            |
|  41 | airquality             | New York Air Quality Measurements                               |
|  42 | anscombe               | Anscombe's Quartet of 'Identical' Simple Linear Regressions     |
|  43 | attenu                 | The Joyner-Boore Attenuation Data                               |
|  44 | attitude               | The Chatterjee-Price Attitude Data                              |
|  45 | austres                | Quarterly Time Series of the Number of Australian Residents     |
|  46 | beaver1 (beavers)      | Body Temperature Series of Two Beavers                          |
|  47 | beaver2 (beavers)      | Body Temperature Series of Two Beavers                          |
|  48 | cars                   | Speed and Stopping Distances of Cars                            |
|  49 | chickwts               | Chicken Weights by Feed Type                                    |
|  50 | co2                    | Mauna Loa Atmospheric CO2 Concentration                         |
|  51 | crimtab                | Student's 3000 Criminals Data                                   |
|  52 | discoveries            | Yearly Numbers of Important Discoveries                         |
|  53 | esoph                  | Smoking, Alcohol and (O)esophageal Cancer                       |
|  54 | euro                   | Conversion Rates of Euro Currencies                             |
|  55 | euro.cross (euro)      | Conversion Rates of Euro Currencies                             |
|  56 | eurodist               | Distances Between European Cities and Between US Cities         |
|  57 | faithful               | Old Faithful Geyser Data                                        |
|  58 | fdeaths (UKLungDeaths) | Monthly Deaths from Lung Diseases in the UK                     |
|  59 | freeny                 | Freeny's Revenue Data                                           |
|  60 | freeny.x (freeny)      | Freeny's Revenue Data                                           |
|  61 | freeny.y (freeny)      | Freeny's Revenue Data                                           |
|  62 | infert                 | Infertility after Spontaneous and Induced Abortion              |
|  63 | iris                   | Edgar Anderson's Iris Data                                      |
|  64 | iris3                  | Edgar Anderson's Iris Data                                      |
|  65 | islands                | Areas of the World's Major Landmasses                           |
|  66 | ldeaths (UKLungDeaths) | Monthly Deaths from Lung Diseases in the UK                     |
|  67 | lh                     | Luteinizing Hormone in Blood Samples                            |
|  68 | longley                | Longley's Economic Regression Data                              |
|  69 | lynx                   | Annual Canadian Lynx trappings 1821-1934                        |
|  70 | mdeaths (UKLungDeaths) | Monthly Deaths from Lung Diseases in the UK                     |
|  71 | morley                 | Michelson Speed of Light Data                                   |
|  72 | mtcars                 | Motor Trend Car Road Tests                                      |
|  73 | nhtemp                 | Average Yearly Temperatures in New Haven                        |
|  74 | nottem                 | Average Monthly Temperatures at Nottingham, 1920-1939           |
|  75 | npk                    | Classical N, P, K Factorial Experiment                          |
|  76 | occupationalStatus     | Occupational Status of Fathers and their Sons                   |
|  77 | precip                 | Annual Precipitation in US Cities                               |
|  78 | presidents             | Quarterly Approval Ratings of US Presidents                     |
|  79 | pressure               | Vapor Pressure of Mercury as a Function of Temperature          |
|  80 | quakes                 | Locations of Earthquakes off Fiji                               |
|  81 | randu                  | Random Numbers from Congruential Generator RANDU                |
|  82 | rivers                 | Lengths of Major North American Rivers                          |
|  83 | rock                   | Measurements on Petroleum Rock Samples                          |
|  84 | sleep                  | Student's Sleep Data                                            |
|  85 | stack.loss (stackloss) | Brownlee's Stack Loss Plant Data                                |
|  86 | stack.x (stackloss)    | Brownlee's Stack Loss Plant Data                                |
|  87 | stackloss              | Brownlee's Stack Loss Plant Data                                |
|  88 | state.abb (state)      | US State Facts and Figures                                      |
|  89 | state.area (state)     | US State Facts and Figures                                      |
|  90 | state.center (state)   | US State Facts and Figures                                      |
|  91 | state.division (state) | US State Facts and Figures                                      |
|  92 | state.name (state)     | US State Facts and Figures                                      |
|  93 | state.region (state)   | US State Facts and Figures                                      |
|  94 | state.x77 (state)      | US State Facts and Figures                                      |
|  95 | sunspot.month          | Present                                                         |
|  96 | sunspot.year           | Yearly Sunspot Data, 1700-1988                                  |
|  97 | sunspots               | Monthly Sunspot Numbers, 1749-1983                              |
|  98 | swiss                  | Swiss Fertility and Socioeconomic Indicators (1888) Data        |
|  99 | treering               | Yearly Treering Data, -6000-1979                                |
| 100 | trees                  | Diameter, Height and Volume for Black Cherry Trees              |
| 101 | uspop                  | Populations Recorded by the US Census                           |
| 102 | volcano                | Topographic Information on Auckland's Maunga Whau Volcano       |
| 103 | warpbreaks             | The Number of Breaks in Yarn during Weaving                     |
| 104 | women                  | Average Heights and Weights for American Women                  |

*** iris

- =data.frame=
- Sepal = がく片 (花の付け根部分)
- Petal = 花弁
- 変数
  - Sepal.Length
  - Sepal.Width
  - Petal.Length
  - Petal.Width
  - Species (3 factors: setosa, versicolor, virginica (アヤメ属の 3 種))

#+begin_src R :results output code :exports both
data(iris)
str(iris)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	150 obs. of  5 variables:
 $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...
 $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...
 $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...
 $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...
 $ Species     : Factor w/ 3 levels "setosa","versicolor",..: 1 1 1 1 1 1 1 1 1 1 ...
#+end_src

#+begin_src R :exports both
head(iris)
#+end_src

#+RESULTS:
| Sepal.Length | Sepal.Width | Petal.Length | Petal.Width | Species |
|--------------+-------------+--------------+-------------+---------|
|          5.1 |         3.5 |          1.4 |         0.2 | setosa  |
|          4.9 |           3 |          1.4 |         0.2 | setosa  |
|          4.7 |         3.2 |          1.3 |         0.2 | setosa  |
|          4.6 |         3.1 |          1.5 |         0.2 | setosa  |
|            5 |         3.6 |          1.4 |         0.2 | setosa  |
|          5.4 |         3.9 |          1.7 |         0.4 | setosa  |

*** mtcars

- 32 車種のデータ
- =data.frame=
- A data frame with 32 observations on 11 (numeric) variables.
  - [, 1]  mpg   Miles/(US) gallon                        
  - [, 2]  cyl   Number of cylinders                      
  - [, 3]  disp  Displacement (cu.in.)                    
  - [, 4]  hp    Gross horsepower                         
  - [, 5]  drat  Rear axle ratio                          
  - [, 6]  wt    Weight (1000 lbs)                        
  - [, 7]  qsec  1/4 mile time                            
  - [, 8]  vs    Engine (0 = V-shaped, 1 = straight)      
  - [, 9]  am    Transmission (0 = automatic, 1 = manual) 
  - [,10]  gear  Number of forward gears                  
  - [,11]  carb  Number of carburetors                    

#+begin_src R :results output code :exports both
str(mtcars)
#+end_src

#+RESULTS:
#+begin_src R
'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: num  4 4 1 1 2 1 4 2 2 4 ...
#+end_src

#+begin_src R :rownames yes :exports both
head(mtcars)
#+end_src

#+RESULTS:
|                   |  mpg | cyl | disp |  hp | drat |    wt |  qsec | vs | am | gear | carb |
|-------------------+------+-----+------+-----+------+-------+-------+----+----+------+------|
| Mazda RX4         |   21 |   6 |  160 | 110 |  3.9 |  2.62 | 16.46 |  0 |  1 |    4 |    4 |
| Mazda RX4 Wag     |   21 |   6 |  160 | 110 |  3.9 | 2.875 | 17.02 |  0 |  1 |    4 |    4 |
| Datsun 710        | 22.8 |   4 |  108 |  93 | 3.85 |  2.32 | 18.61 |  1 |  1 |    4 |    1 |
| Hornet 4 Drive    | 21.4 |   6 |  258 | 110 | 3.08 | 3.215 | 19.44 |  1 |  0 |    3 |    1 |
| Hornet Sportabout | 18.7 |   8 |  360 | 175 | 3.15 |  3.44 | 17.02 |  0 |  0 |    3 |    2 |
| Valiant           | 18.1 |   6 |  225 | 105 | 2.76 |  3.46 | 20.22 |  1 |  0 |    3 |    1 |

*** sleep

- 2 種類の睡眠薬を同じ 10 名の患者に投与したときの睡眠時間の長さのデータ
  - extra 列：睡眠時間の長さ
  - group 列：睡眠薬の種類
  - ID 列：患者の ID

#+begin_src R :results output code :exports both
str(sleep)
#+end_src

#+RESULTS:
#+begin_src R
'data.frame':	20 obs. of  3 variables:
 $ extra: num  0.7 -1.6 -0.2 -1.2 -0.1 3.4 3.7 0.8 0 2 ...
 $ group: Factor w/ 2 levels "1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ ID   : Factor w/ 10 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
#+end_src

#+begin_src R :exports both
sleep
#+end_src

#+RESULTS:
| extra | group | ID |
|-------+-------+----|
|   0.7 |     1 |  1 |
|  -1.6 |     1 |  2 |
|  -0.2 |     1 |  3 |
|  -1.2 |     1 |  4 |
|  -0.1 |     1 |  5 |
|   3.4 |     1 |  6 |
|   3.7 |     1 |  7 |
|   0.8 |     1 |  8 |
|     0 |     1 |  9 |
|     2 |     1 | 10 |
|   1.9 |     2 |  1 |
|   0.8 |     2 |  2 |
|   1.1 |     2 |  3 |
|   0.1 |     2 |  4 |
|  -0.1 |     2 |  5 |
|   4.4 |     2 |  6 |
|   5.5 |     2 |  7 |
|   1.6 |     2 |  8 |
|   4.6 |     2 |  9 |
|   3.4 |     2 | 10 |

*** warpbreaks (poisson)

- カウントデータ
- 織機毎の故障の数
#+begin_src R :results output code :exports both
data(warpbreaks)
str(warpbreaks)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	54 obs. of  3 variables:
 $ breaks : num  26 30 54 25 70 52 51 26 67 18 ...
 $ wool   : Factor w/ 2 levels "A","B": 1 1 1 1 1 1 1 1 1 1 ...
 $ tension: Factor w/ 3 levels "L","M","H": 1 1 1 1 1 1 1 1 1 2 ...
#+end_src


#+begin_src R :exports both
sleep
#+end_src

#+RESULTS:
| extra | group | ID |
|-------+-------+----|
|   0.7 |     1 |  1 |
|  -1.6 |     1 |  2 |
|  -0.2 |     1 |  3 |
|  -1.2 |     1 |  4 |
|  -0.1 |     1 |  5 |
|   3.4 |     1 |  6 |
|   3.7 |     1 |  7 |
|   0.8 |     1 |  8 |
|     0 |     1 |  9 |
|     2 |     1 | 10 |
|   1.9 |     2 |  1 |
|   0.8 |     2 |  2 |
|   1.1 |     2 |  3 |
|   0.1 |     2 |  4 |
|  -0.1 |     2 |  5 |
|   4.4 |     2 |  6 |
|   5.5 |     2 |  7 |
|   1.6 |     2 |  8 |
|   4.6 |     2 |  9 |
|   3.4 |     2 | 10 |

** ggplot2 package
*** List

#+begin_src R :rownames yes :exports both
pacman::p_data(ggplot2)
#+end_src

#+RESULTS:
|    | Data           | Description                                                       |
|----+----------------+-------------------------------------------------------------------|
|  1 | diamonds       | Prices of over 50,000 round cut diamonds                          |
|  2 | economics      | US economic time series                                           |
|  3 | economics_long | US economic time series                                           |
|  4 | faithfuld      | 2d density estimate of Old Faithful data                          |
|  5 | luv_colours    | 'colors()' in Luv space                                           |
|  6 | midwest        | Midwest demographics                                              |
|  7 | mpg            | Fuel economy data from 1999 to 2008 for 38 popular models of cars |
|  8 | msleep         | An updated and expanded version of the mammals sleep dataset      |
|  9 | presidential   | Terms of 11 presidents from Eisenhower to Obama                   |
| 10 | seals          | Vector field of seal movements                                    |
| 11 | txhousing      | Housing sales in TX                                               |

*** mpg

- A data frame with 234 rows and 11 variables
  - manufacturer
  - model: model name
  - displ: engine displacement, in litres
  - year:  year of manufacture
  - cyl:   number of cylinders
  - trans: type of transmission
  - drv:   f = front-wheel drive, r = rear wheel drive, 4 = 4wd
  - cty:   city miles per gallon
  - hwy:   highway miles per gallon
  - fl:    fuel type
  - class: "type" of car

#+begin_src R :results output code :exports both
str(mpg)
#+end_src

#+RESULTS:
#+begin_src R
tibble [234 × 11] (S3: tbl_df/tbl/data.frame)
 $ manufacturer: chr [1:234] "audi" "audi" "audi" "audi" ...
 $ model       : chr [1:234] "a4" "a4" "a4" "a4" ...
 $ displ       : num [1:234] 1.8 1.8 2 2 2.8 2.8 3.1 1.8 1.8 2 ...
 $ year        : int [1:234] 1999 1999 2008 2008 1999 1999 2008 1999 1999 2008 ...
 $ cyl         : int [1:234] 4 4 4 4 6 6 6 4 4 4 ...
 $ trans       : chr [1:234] "auto(l5)" "manual(m5)" "manual(m6)" "auto(av)" ...
 $ drv         : chr [1:234] "f" "f" "f" "f" ...
 $ cty         : int [1:234] 18 21 20 21 16 18 18 18 16 20 ...
 $ hwy         : int [1:234] 29 29 31 30 26 26 27 26 25 28 ...
 $ fl          : chr [1:234] "p" "p" "p" "p" ...
 $ class       : chr [1:234] "compact" "compact" "compact" "compact" ...
#+end_src

** dplyr package
*** List

#+begin_src R :rownames yes :exports both
pacman::p_data(dplyr)
#+end_src

#+RESULTS:
|   | Data              | Description               |
|---+-------------------+---------------------------|
| 1 | band_instruments  | Band membership           |
| 2 | band_instruments2 | Band membership           |
| 3 | band_members      | Band membership           |
| 4 | nasa              | NASA spatio-temporal data |
| 5 | starwars          | Starwars characters       |
| 6 | storms            | Storm tracks data         |

** mlbench package
*** List

#+begin_src R :exports both
pacman::p_data(mlbench)
#+end_src

#+RESULTS:
| Data                 | Description                                     |
|----------------------+-------------------------------------------------|
| BostonHousing        | Boston Housing Data                             |
| BostonHousing2       | Boston Housing Data                             |
| BreastCancer         | Wisconsin Breast Cancer Database                |
| DNA                  | Primate splice-junction gene sequences (DNA)    |
| Glass                | Glass Identification Database                   |
| HouseVotes84         | United States Congressional Voting Records 1984 |
| Ionosphere           | Johns Hopkins University Ionosphere database    |
| LetterRecognition    | Letter Image Recognition Data                   |
| Ozone                | Los Angeles ozone pollution data, 1976          |
| PimaIndiansDiabetes  | Pima Indians Diabetes Database                  |
| PimaIndiansDiabetes2 | Pima Indians Diabetes Database                  |
| Satellite            | Landsat Multi-Spectral Scanner Image Data       |
| Servo                | Servo Data                                      |
| Shuttle              | Shuttle Dataset (Statlog version)               |
| Sonar                | Sonar, Mines vs. Rocks                          |
| Soybean              | Soybean Database                                |
| Vehicle              | Vehicle Silhouettes                             |
| Vowel                | Vowel Recognition (Deterding data)              |
| Zoo                  | Zoo Data                                        |

*** BostonHousing (regression)

- =medv= (median value of owner-occupied homes in USD 1000's) が説明変数
#+begin_src R :results output code :exports both
data(BostonHousing)
str(BostonHousing)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	506 obs. of  14 variables:
 $ crim   : num  0.00632 0.02731 0.02729 0.03237 0.06905 ...
 $ zn     : num  18 0 0 0 0 0 12.5 12.5 12.5 12.5 ...
 $ indus  : num  2.31 7.07 7.07 2.18 2.18 2.18 7.87 7.87 7.87 7.87 ...
 $ chas   : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ nox    : num  0.538 0.469 0.469 0.458 0.458 0.458 0.524 0.524 0.524 0.524 ...
 $ rm     : num  6.58 6.42 7.18 7 7.15 ...
 $ age    : num  65.2 78.9 61.1 45.8 54.2 58.7 66.6 96.1 100 85.9 ...
 $ dis    : num  4.09 4.97 4.97 6.06 6.06 ...
 $ rad    : num  1 2 2 3 3 3 5 5 5 5 ...
 $ tax    : num  296 242 242 222 222 222 311 311 311 311 ...
 $ ptratio: num  15.3 17.8 17.8 18.7 18.7 18.7 15.2 15.2 15.2 15.2 ...
 $ b      : num  397 397 393 395 397 ...
 $ lstat  : num  4.98 9.14 4.03 2.94 5.33 ...
 $ medv   : num  24 21.6 34.7 33.4 36.2 28.7 22.9 27.1 16.5 18.9 ...
#+end_src

*** BreastCancer (binary)

- =Class=: benign(良性) or malignant (悪性) が目的変数
#+begin_src R :results output code :exports both
data(BreastCancer)
str(BreastCancer)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	699 obs. of  11 variables:
 $ Id             : chr  "1000025" "1002945" "1015425" "1016277" ...
 $ Cl.thickness   : Ord.factor w/ 10 levels "1"<"2"<"3"<"4"<..: 5 5 3 6 4 8 1 2 2 4 ...
 $ Cell.size      : Ord.factor w/ 10 levels "1"<"2"<"3"<"4"<..: 1 4 1 8 1 10 1 1 1 2 ...
 $ Cell.shape     : Ord.factor w/ 10 levels "1"<"2"<"3"<"4"<..: 1 4 1 8 1 10 1 2 1 1 ...
 $ Marg.adhesion  : Ord.factor w/ 10 levels "1"<"2"<"3"<"4"<..: 1 5 1 1 3 8 1 1 1 1 ...
 $ Epith.c.size   : Ord.factor w/ 10 levels "1"<"2"<"3"<"4"<..: 2 7 2 3 2 7 2 2 2 2 ...
 $ Bare.nuclei    : Factor w/ 10 levels "1","2","3","4",..: 1 10 2 4 1 10 10 1 1 1 ...
 $ Bl.cromatin    : Factor w/ 10 levels "1","2","3","4",..: 3 3 3 3 3 9 3 3 1 2 ...
 $ Normal.nucleoli: Factor w/ 10 levels "1","2","3","4",..: 1 2 1 7 1 7 1 1 1 1 ...
 $ Mitoses        : Factor w/ 9 levels "1","2","3","4",..: 1 1 1 1 1 1 1 1 5 1 ...
 $ Class          : Factor w/ 2 levels "benign","malignant": 1 1 1 1 1 2 1 1 1 1 ...
#+end_src

*** DNA (multiclass)

- =Class=: ei, ie, n が目的変数
- 大量の二値変数
#+begin_src R :results output code :exports both
data(DNA)
str(DNA)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	3186 obs. of  181 variables:
 $ V1   : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 2 1 1 ...
 $ V2   : Factor w/ 2 levels "0","1": 2 1 1 1 2 2 1 1 1 1 ...
 $ V3   : Factor w/ 2 levels "0","1": 1 2 2 1 1 1 2 1 1 1 ...
 $ V4   : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 2 2 2 1 ...
 $ V5   : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V6   : Factor w/ 2 levels "0","1": 1 2 2 1 1 1 1 1 1 2 ...
 $ V7   : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 1 1 1 2 ...
 $ V8   : Factor w/ 2 levels "0","1": 1 1 2 2 2 1 1 1 1 1 ...
 $ V9   : Factor w/ 2 levels "0","1": 1 1 1 1 1 2 2 2 2 1 ...
 $ V10  : Factor w/ 2 levels "0","1": 1 1 1 1 1 2 1 1 1 1 ...
 $ V11  : Factor w/ 2 levels "0","1": 1 1 1 1 2 1 1 1 1 2 ...
 $ V12  : Factor w/ 2 levels "0","1": 2 2 1 1 1 1 2 2 1 1 ...
 $ V13  : Factor w/ 2 levels "0","1": 1 1 1 2 1 1 2 1 2 2 ...
 $ V14  : Factor w/ 2 levels "0","1": 1 1 1 1 2 2 1 2 1 1 ...
 $ V15  : Factor w/ 2 levels "0","1": 2 1 2 1 1 1 1 1 1 1 ...
 $ V16  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 2 1 ...
 $ V17  : Factor w/ 2 levels "0","1": 2 1 1 1 2 1 1 1 1 1 ...
 $ V18  : Factor w/ 2 levels "0","1": 1 1 2 1 1 1 2 1 1 1 ...
 $ V19  : Factor w/ 2 levels "0","1": 1 1 2 1 2 2 1 1 2 1 ...
 $ V20  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 2 2 1 1 ...
 $ V21  : Factor w/ 2 levels "0","1": 1 2 1 2 1 1 1 1 1 2 ...
 $ V22  : Factor w/ 2 levels "0","1": 1 1 1 2 1 2 1 2 2 1 ...
 $ V23  : Factor w/ 2 levels "0","1": 2 2 2 1 2 1 1 1 1 1 ...
 $ V24  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V25  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 2 1 2 1 ...
 $ V26  : Factor w/ 2 levels "0","1": 2 1 2 1 2 1 1 1 1 1 ...
 $ V27  : Factor w/ 2 levels "0","1": 1 1 1 2 1 2 1 2 1 1 ...
 $ V28  : Factor w/ 2 levels "0","1": 2 1 1 2 1 1 1 1 1 1 ...
 $ V29  : Factor w/ 2 levels "0","1": 1 2 1 1 2 2 1 1 2 1 ...
 $ V30  : Factor w/ 2 levels "0","1": 1 1 2 1 1 1 2 2 1 1 ...
 $ V31  : Factor w/ 2 levels "0","1": 1 1 2 2 2 1 2 2 2 1 ...
 $ V32  : Factor w/ 2 levels "0","1": 1 1 1 1 1 2 1 1 1 1 ...
 $ V33  : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 1 1 1 1 ...
 $ V34  : Factor w/ 2 levels "0","1": 2 1 1 2 1 1 1 1 1 1 ...
 $ V35  : Factor w/ 2 levels "0","1": 1 1 2 1 2 1 2 1 2 2 ...
 $ V36  : Factor w/ 2 levels "0","1": 1 1 1 1 1 2 1 2 1 1 ...
 $ V37  : Factor w/ 2 levels "0","1": 1 2 1 1 1 1 2 1 1 1 ...
 $ V38  : Factor w/ 2 levels "0","1": 1 1 2 2 2 2 1 1 2 1 ...
 $ V39  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 2 1 1 ...
 $ V40  : Factor w/ 2 levels "0","1": 2 1 2 1 1 1 2 2 2 2 ...
 $ V41  : Factor w/ 2 levels "0","1": 1 1 1 1 1 2 1 1 1 1 ...
 $ V42  : Factor w/ 2 levels "0","1": 1 2 1 2 1 1 1 1 1 1 ...
 $ V43  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V44  : Factor w/ 2 levels "0","1": 1 1 2 1 1 2 1 1 2 1 ...
 $ V45  : Factor w/ 2 levels "0","1": 2 2 1 1 2 1 2 2 1 1 ...
 $ V46  : Factor w/ 2 levels "0","1": 1 2 2 1 1 1 1 1 1 1 ...
 $ V47  : Factor w/ 2 levels "0","1": 2 1 1 1 1 2 1 1 1 1 ...
 $ V48  : Factor w/ 2 levels "0","1": 1 1 1 2 1 1 1 2 1 1 ...
 $ V49  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 2 1 1 1 ...
 $ V50  : Factor w/ 2 levels "0","1": 2 1 1 1 2 1 1 1 1 1 ...
 $ V51  : Factor w/ 2 levels "0","1": 1 1 2 2 1 1 1 2 1 2 ...
 $ V52  : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 1 2 2 1 ...
 $ V53  : Factor w/ 2 levels "0","1": 1 1 2 2 2 1 2 1 1 1 ...
 $ V54  : Factor w/ 2 levels "0","1": 1 2 1 1 1 1 1 1 1 1 ...
 $ V55  : Factor w/ 2 levels "0","1": 1 1 1 2 2 1 1 1 1 1 ...
 $ V56  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 2 2 ...
 $ V57  : Factor w/ 2 levels "0","1": 1 1 2 1 1 2 1 2 1 1 ...
 $ V58  : Factor w/ 2 levels "0","1": 2 2 1 1 1 1 1 2 1 1 ...
 $ V59  : Factor w/ 2 levels "0","1": 1 1 2 1 2 1 1 1 1 1 ...
 $ V60  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 2 1 1 1 ...
 $ V61  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 2 1 ...
 $ V62  : Factor w/ 2 levels "0","1": 1 1 1 1 2 2 1 1 1 1 ...
 $ V63  : Factor w/ 2 levels "0","1": 2 1 2 1 1 1 2 1 1 1 ...
 $ V64  : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 1 1 2 1 ...
 $ V65  : Factor w/ 2 levels "0","1": 1 2 1 1 2 2 1 2 1 1 ...
 $ V66  : Factor w/ 2 levels "0","1": 1 1 1 2 1 1 1 1 1 2 ...
 $ V67  : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 1 2 2 2 ...
 $ V68  : Factor w/ 2 levels "0","1": 1 2 1 1 1 2 2 1 1 1 ...
 $ V69  : Factor w/ 2 levels "0","1": 1 1 2 1 2 1 1 1 1 1 ...
 $ V70  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 2 1 2 ...
 $ V71  : Factor w/ 2 levels "0","1": 1 2 2 1 2 1 1 1 1 1 ...
 $ V72  : Factor w/ 2 levels "0","1": 2 1 1 2 1 1 1 1 1 1 ...
 $ V73  : Factor w/ 2 levels "0","1": 2 1 2 1 1 1 1 1 2 1 ...
 $ V74  : Factor w/ 2 levels "0","1": 1 2 1 2 2 1 2 2 1 2 ...
 $ V75  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V76  : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 2 2 1 1 ...
 $ V77  : Factor w/ 2 levels "0","1": 1 1 1 1 2 2 1 1 1 2 ...
 $ V78  : Factor w/ 2 levels "0","1": 1 1 2 2 1 1 1 1 2 1 ...
 $ V79  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 2 ...
 $ V80  : Factor w/ 2 levels "0","1": 2 2 1 2 1 1 1 1 2 1 ...
 $ V81  : Factor w/ 2 levels "0","1": 1 1 1 1 2 1 2 1 1 1 ...
 $ V82  : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 1 1 ...
 $ V83  : Factor w/ 2 levels "0","1": 2 1 1 1 2 2 2 2 1 1 ...
 $ V84  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V85  : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 1 1 ...
 $ V86  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V87  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 2 1 ...
 $ V88  : Factor w/ 2 levels "0","1": 2 2 1 1 1 1 1 2 2 2 ...
 $ V89  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V90  : Factor w/ 2 levels "0","1": 1 1 2 2 2 2 2 1 1 1 ...
 $ V91  : Factor w/ 2 levels "0","1": 2 1 1 1 2 2 1 1 1 1 ...
 $ V92  : Factor w/ 2 levels "0","1": 1 2 1 1 1 1 1 2 1 2 ...
 $ V93  : Factor w/ 2 levels "0","1": 1 1 1 2 1 1 2 1 1 1 ...
 $ V94  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V95  : Factor w/ 2 levels "0","1": 2 2 2 1 1 1 1 2 1 1 ...
 $ V96  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ V97  : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 1 1 1 1 ...
 $ V98  : Factor w/ 2 levels "0","1": 1 1 1 1 2 1 1 1 1 1 ...
 $ V99  : Factor w/ 2 levels "0","1": 1 1 2 2 1 1 2 1 1 2 ...
  [list output truncated]
#+end_src

*** Glass (multiclass)

- =Type=: 1-6 が目的変数
- ガラスのタイプと化学的な性質
#+begin_src R :results output code :exports both
data(Glass)
str(Glass)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	214 obs. of  10 variables:
 $ RI  : num  1.52 1.52 1.52 1.52 1.52 ...
 $ Na  : num  13.6 13.9 13.5 13.2 13.3 ...
 $ Mg  : num  4.49 3.6 3.55 3.69 3.62 3.61 3.6 3.61 3.58 3.6 ...
 $ Al  : num  1.1 1.36 1.54 1.29 1.24 1.62 1.14 1.05 1.37 1.36 ...
 $ Si  : num  71.8 72.7 73 72.6 73.1 ...
 $ K   : num  0.06 0.48 0.39 0.57 0.55 0.64 0.58 0.57 0.56 0.57 ...
 $ Ca  : num  8.75 7.83 7.78 8.22 8.07 8.07 8.17 8.24 8.3 8.4 ...
 $ Ba  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Fe  : num  0 0 0 0 0 0.26 0 0 0 0.11 ...
 $ Type: Factor w/ 6 levels "1","2","3","5",..: 1 1 1 1 1 1 1 1 1 1 ...
#+end_src

*** HouseVotes84 (binary)

- yes/no の二値データ
- 議会 (House) での投票結果
- Class = democrat(民主党) or republican(共和党)
#+begin_src R :results output code :exports both
data(HouseVotes84)
str(HouseVotes84)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	435 obs. of  17 variables:
 $ Class: Factor w/ 2 levels "democrat","republican": 2 2 1 1 1 1 1 2 2 1 ...
 $ V1   : Factor w/ 2 levels "n","y": 1 1 NA 1 2 1 1 1 1 2 ...
 $ V2   : Factor w/ 2 levels "n","y": 2 2 2 2 2 2 2 2 2 2 ...
 $ V3   : Factor w/ 2 levels "n","y": 1 1 2 2 2 2 1 1 1 2 ...
 $ V4   : Factor w/ 2 levels "n","y": 2 2 NA 1 1 1 2 2 2 1 ...
 $ V5   : Factor w/ 2 levels "n","y": 2 2 2 NA 2 2 2 2 2 1 ...
 $ V6   : Factor w/ 2 levels "n","y": 2 2 2 2 2 2 2 2 2 1 ...
 $ V7   : Factor w/ 2 levels "n","y": 1 1 1 1 1 1 1 1 1 2 ...
 $ V8   : Factor w/ 2 levels "n","y": 1 1 1 1 1 1 1 1 1 2 ...
 $ V9   : Factor w/ 2 levels "n","y": 1 1 1 1 1 1 1 1 1 2 ...
 $ V10  : Factor w/ 2 levels "n","y": 2 1 1 1 1 1 1 1 1 1 ...
 $ V11  : Factor w/ 2 levels "n","y": NA 1 2 2 2 1 1 1 1 1 ...
 $ V12  : Factor w/ 2 levels "n","y": 2 2 1 1 NA 1 1 1 2 1 ...
 $ V13  : Factor w/ 2 levels "n","y": 2 2 2 2 2 2 NA 2 2 1 ...
 $ V14  : Factor w/ 2 levels "n","y": 2 2 2 1 2 2 2 2 2 1 ...
 $ V15  : Factor w/ 2 levels "n","y": 1 1 1 1 2 2 2 NA 1 NA ...
 $ V16  : Factor w/ 2 levels "n","y": 2 NA 1 2 2 2 2 2 2 NA ...
#+end_src

*** Ionosphere (binary)

- Ionosphere = 電離層
- Class = bad or good
#+begin_src R :results output code :exports both
data(Ionosphere)
str(Ionosphere)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	351 obs. of  35 variables:
 $ V1   : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 1 2 2 ...
 $ V2   : Factor w/ 1 level "0": 1 1 1 1 1 1 1 1 1 1 ...
 $ V3   : num  0.995 1 1 1 1 ...
 $ V4   : num  -0.0589 -0.1883 -0.0336 -0.4516 -0.024 ...
 $ V5   : num  0.852 0.93 1 1 0.941 ...
 $ V6   : num  0.02306 -0.36156 0.00485 1 0.06531 ...
 $ V7   : num  0.834 -0.109 1 0.712 0.921 ...
 $ V8   : num  -0.377 -0.936 -0.121 -1 -0.233 ...
 $ V9   : num  1 1 0.89 0 0.772 ...
 $ V10  : num  0.0376 -0.0455 0.012 0 -0.164 ...
 $ V11  : num  0.852 0.509 0.731 0 0.528 ...
 $ V12  : num  -0.1776 -0.6774 0.0535 0 -0.2028 ...
 $ V13  : num  0.598 0.344 0.854 0 0.564 ...
 $ V14  : num  -0.44945 -0.69707 0.00827 0 -0.00712 ...
 $ V15  : num  0.605 -0.517 0.546 -1 0.344 ...
 $ V16  : num  -0.38223 -0.97515 0.00299 0.14516 -0.27457 ...
 $ V17  : num  0.844 0.055 0.838 0.541 0.529 ...
 $ V18  : num  -0.385 -0.622 -0.136 -0.393 -0.218 ...
 $ V19  : num  0.582 0.331 0.755 -1 0.451 ...
 $ V20  : num  -0.3219 -1 -0.0854 -0.5447 -0.1781 ...
 $ V21  : num  0.5697 -0.1315 0.7089 -0.6997 0.0598 ...
 $ V22  : num  -0.297 -0.453 -0.275 1 -0.356 ...
 $ V23  : num  0.3695 -0.1806 0.4339 0 0.0231 ...
 $ V24  : num  -0.474 -0.357 -0.121 0 -0.529 ...
 $ V25  : num  0.5681 -0.2033 0.5753 1 0.0329 ...
 $ V26  : num  -0.512 -0.266 -0.402 0.907 -0.652 ...
 $ V27  : num  0.411 -0.205 0.59 0.516 0.133 ...
 $ V28  : num  -0.462 -0.184 -0.221 1 -0.532 ...
 $ V29  : num  0.2127 -0.1904 0.431 1 0.0243 ...
 $ V30  : num  -0.341 -0.116 -0.174 -0.201 -0.622 ...
 $ V31  : num  0.4227 -0.1663 0.6044 0.2568 -0.0571 ...
 $ V32  : num  -0.5449 -0.0629 -0.2418 1 -0.5957 ...
 $ V33  : num  0.1864 -0.1374 0.5605 -0.3238 -0.0461 ...
 $ V34  : num  -0.453 -0.0245 -0.3824 1 -0.657 ...
 $ Class: Factor w/ 2 levels "bad","good": 2 1 2 1 2 1 2 1 2 1 ...
#+end_src

*** LetterRecognition (multiclass)

- 文字認識
- lettr A-Z
#+begin_src R :results output code :exports both
data(LetterRecognition)
str(LetterRecognition)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	20000 obs. of  17 variables:
 $ lettr: Factor w/ 26 levels "A","B","C","D",..: 20 9 4 14 7 19 2 1 10 13 ...
 $ x.box: num  2 5 4 7 2 4 4 1 2 11 ...
 $ y.box: num  8 12 11 11 1 11 2 1 2 15 ...
 $ width: num  3 3 6 6 3 5 5 3 4 13 ...
 $ high : num  5 7 8 6 1 8 4 2 4 9 ...
 $ onpix: num  1 2 6 3 1 3 4 1 2 7 ...
 $ x.bar: num  8 10 10 5 8 8 8 8 10 13 ...
 $ y.bar: num  13 5 6 9 6 8 7 2 6 2 ...
 $ x2bar: num  0 5 2 4 6 6 6 2 2 6 ...
 $ y2bar: num  6 4 6 6 6 9 6 2 6 2 ...
 $ xybar: num  6 13 10 4 6 5 7 8 12 12 ...
 $ x2ybr: num  10 3 3 4 5 6 6 2 4 1 ...
 $ xy2br: num  8 9 7 10 9 6 6 8 8 9 ...
 $ x.ege: num  0 2 3 6 1 0 2 1 1 8 ...
 $ xegvy: num  8 8 7 10 7 8 8 6 6 1 ...
 $ y.ege: num  0 4 3 2 5 9 7 2 1 1 ...
 $ yegvx: num  8 10 9 8 10 7 10 7 7 8 ...
#+end_src

*** Ozone

- Los Angeles Ozone Pollution Data, 1976
#+begin_src R :results output code :exports both
data(Ozone)
str(Ozone)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	366 obs. of  13 variables:
 $ V1 : Factor w/ 12 levels "1","2","3","4",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ V2 : Factor w/ 31 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ V3 : Factor w/ 7 levels "1","2","3","4",..: 4 5 6 7 1 2 3 4 5 6 ...
 $ V4 : num  3 3 3 5 5 6 4 4 6 7 ...
 $ V5 : num  5480 5660 5710 5700 5760 5720 5790 5790 5700 5700 ...
 $ V6 : num  8 6 4 3 3 4 6 3 3 3 ...
 $ V7 : num  20 NA 28 37 51 69 19 25 73 59 ...
 $ V8 : num  NA 38 40 45 54 35 45 55 41 44 ...
 $ V9 : num  NA NA NA NA 45.3 ...
 $ V10: num  5000 NA 2693 590 1450 ...
 $ V11: num  -15 -14 -25 -24 25 15 -33 -28 23 -2 ...
 $ V12: num  30.6 NA 47.7 55 57 ...
 $ V13: num  200 300 250 100 60 60 100 250 120 120 ...
#+end_src

*** PimaIndiansDiabetes (binary)

- diabetes = 糖尿病 の neg, pos
#+begin_src R :results output code :exports both
data(PimaIndiansDiabetes)
str(PimaIndiansDiabetes)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	768 obs. of  9 variables:
 $ pregnant: num  6 1 8 1 0 5 3 10 2 8 ...
 $ glucose : num  148 85 183 89 137 116 78 115 197 125 ...
 $ pressure: num  72 66 64 66 40 74 50 0 70 96 ...
 $ triceps : num  35 29 0 23 35 0 32 0 45 0 ...
 $ insulin : num  0 0 0 94 168 0 88 0 543 0 ...
 $ mass    : num  33.6 26.6 23.3 28.1 43.1 25.6 31 35.3 30.5 0 ...
 $ pedigree: num  0.627 0.351 0.672 0.167 2.288 ...
 $ age     : num  50 31 32 21 33 30 26 29 53 54 ...
 $ diabetes: Factor w/ 2 levels "neg","pos": 2 1 2 1 2 1 2 1 2 2 ...
#+end_src

*** Satellite (multiclass)

- Landsat Multi-Spectral Scanner Image Data
#+begin_src R :results output code :exports both
data(Satellite)
str(Satellite)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	6435 obs. of  37 variables:
 $ x.1    : num  92 84 84 80 84 80 76 76 76 76 ...
 $ x.2    : num  115 102 102 102 94 94 102 102 89 94 ...
 $ x.3    : num  120 106 102 102 102 98 106 106 98 98 ...
 $ x.4    : num  94 79 83 79 79 76 83 87 76 76 ...
 $ x.5    : num  84 84 80 84 80 80 76 80 76 76 ...
 $ x.6    : num  102 102 102 94 94 102 102 98 94 98 ...
 $ x.7    : num  106 102 102 102 98 102 106 106 98 102 ...
 $ x.8    : num  79 83 79 79 76 79 87 79 76 72 ...
 $ x.9    : num  84 80 84 80 80 76 80 76 76 76 ...
 $ x.10   : num  102 102 94 94 102 102 98 94 98 94 ...
 $ x.11   : num  102 102 102 98 102 102 106 102 102 90 ...
 $ x.12   : num  83 79 79 76 79 79 79 76 72 76 ...
 $ x.13   : num  101 92 84 84 84 76 80 80 80 76 ...
 $ x.14   : num  126 112 103 99 99 99 107 112 95 91 ...
 $ x.15   : num  133 118 104 104 104 104 118 118 104 104 ...
 $ x.16   : num  103 85 81 78 81 81 88 88 74 74 ...
 $ x.17   : num  92 84 84 84 76 76 80 80 76 76 ...
 $ x.18   : num  112 103 99 99 99 99 112 107 91 95 ...
 $ x.19   : num  118 104 104 104 104 108 118 113 104 100 ...
 $ x.20   : num  85 81 78 81 81 85 88 85 74 78 ...
 $ x.21   : num  84 84 84 76 76 76 80 80 76 76 ...
 $ x.22   : num  103 99 99 99 99 103 107 95 95 91 ...
 $ x.23   : num  104 104 104 104 108 118 113 100 100 100 ...
 $ x.24   : num  81 78 81 81 85 88 85 78 78 74 ...
 $ x.25   : num  102 88 84 84 84 84 79 79 75 75 ...
 $ x.26   : num  126 121 107 99 99 103 107 103 91 91 ...
 $ x.27   : num  134 128 113 104 104 104 113 104 96 96 ...
 $ x.28   : num  104 100 87 79 79 79 87 83 75 71 ...
 $ x.29   : num  88 84 84 84 84 79 79 79 75 79 ...
 $ x.30   : num  121 107 99 99 103 107 103 103 91 87 ...
 $ x.31   : num  128 113 104 104 104 109 104 104 96 93 ...
 $ x.32   : num  100 87 79 79 79 87 83 79 71 71 ...
 $ x.33   : num  84 84 84 84 79 79 79 79 79 79 ...
 $ x.34   : num  107 99 99 103 107 107 103 95 87 87 ...
 $ x.35   : num  113 104 104 104 109 109 104 100 93 93 ...
 $ x.36   : num  87 79 79 79 87 87 79 79 71 67 ...
 $ classes: Factor w/ 6 levels "red soil","cotton crop",..: 3 3 3 3 3 3 3 3 4 4 ...
#+end_src

*** Servo (regression)

- Servo 自動制御
#+begin_src R :results output code :exports both
data(Servo)
str(Servo)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	167 obs. of  5 variables:
 $ Motor: Factor w/ 5 levels "A","B","C","D",..: 5 2 4 2 4 5 3 1 3 4 ...
 $ Screw: Factor w/ 5 levels "A","B","C","D",..: 5 4 4 1 2 3 1 1 1 1 ...
 $ Pgain: Factor w/ 4 levels "3","4","5","6": 3 4 2 1 4 2 1 1 4 2 ...
 $ Vgain: Factor w/ 5 levels "1","2","3","4",..: 4 5 3 2 5 3 2 2 5 1 ...
 $ Class: num  4 11 6 48 6 20 46 49 19 27 ...
#+end_src

*** Shuttle (multiclass)

#+begin_src R :results output code :exports both
data(Shuttle)
str(Shuttle)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	58000 obs. of  10 variables:
 $ V1   : num  50 55 53 37 37 85 56 55 53 37 ...
 $ V2   : num  21 0 0 0 0 0 0 -1 8 0 ...
 $ V3   : num  77 92 82 76 79 88 81 95 77 101 ...
 $ V4   : num  0 0 0 0 0 -4 0 -3 0 -7 ...
 $ V5   : num  28 0 52 28 34 6 -4 54 28 28 ...
 $ V6   : num  0 26 -5 18 -26 1 11 -4 0 0 ...
 $ V7   : num  27 36 29 40 43 3 25 40 23 64 ...
 $ V8   : num  48 92 30 48 46 83 86 41 48 73 ...
 $ V9   : num  22 56 2 8 2 80 62 2 24 8 ...
 $ Class: Factor w/ 7 levels "Rad.Flow","Fpv.Close",..: 2 4 1 1 1 5 4 1 4 1 ...
#+end_src

*** Sonar (binary)

#+begin_src R :results output code :exports both
data(Sonar)
str(Sonar)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	208 obs. of  61 variables:
 $ V1   : num  0.02 0.0453 0.0262 0.01 0.0762 0.0286 0.0317 0.0519 0.0223 0.0164 ...
 $ V2   : num  0.0371 0.0523 0.0582 0.0171 0.0666 0.0453 0.0956 0.0548 0.0375 0.0173 ...
 $ V3   : num  0.0428 0.0843 0.1099 0.0623 0.0481 ...
 $ V4   : num  0.0207 0.0689 0.1083 0.0205 0.0394 ...
 $ V5   : num  0.0954 0.1183 0.0974 0.0205 0.059 ...
 $ V6   : num  0.0986 0.2583 0.228 0.0368 0.0649 ...
 $ V7   : num  0.154 0.216 0.243 0.11 0.121 ...
 $ V8   : num  0.16 0.348 0.377 0.128 0.247 ...
 $ V9   : num  0.3109 0.3337 0.5598 0.0598 0.3564 ...
 $ V10  : num  0.211 0.287 0.619 0.126 0.446 ...
 $ V11  : num  0.1609 0.4918 0.6333 0.0881 0.4152 ...
 $ V12  : num  0.158 0.655 0.706 0.199 0.395 ...
 $ V13  : num  0.2238 0.6919 0.5544 0.0184 0.4256 ...
 $ V14  : num  0.0645 0.7797 0.532 0.2261 0.4135 ...
 $ V15  : num  0.066 0.746 0.648 0.173 0.453 ...
 $ V16  : num  0.227 0.944 0.693 0.213 0.533 ...
 $ V17  : num  0.31 1 0.6759 0.0693 0.7306 ...
 $ V18  : num  0.3 0.887 0.755 0.228 0.619 ...
 $ V19  : num  0.508 0.802 0.893 0.406 0.203 ...
 $ V20  : num  0.48 0.782 0.862 0.397 0.464 ...
 $ V21  : num  0.578 0.521 0.797 0.274 0.415 ...
 $ V22  : num  0.507 0.405 0.674 0.369 0.429 ...
 $ V23  : num  0.433 0.396 0.429 0.556 0.573 ...
 $ V24  : num  0.555 0.391 0.365 0.485 0.54 ...
 $ V25  : num  0.671 0.325 0.533 0.314 0.316 ...
 $ V26  : num  0.641 0.32 0.241 0.533 0.229 ...
 $ V27  : num  0.71 0.327 0.507 0.526 0.7 ...
 $ V28  : num  0.808 0.277 0.853 0.252 1 ...
 $ V29  : num  0.679 0.442 0.604 0.209 0.726 ...
 $ V30  : num  0.386 0.203 0.851 0.356 0.472 ...
 $ V31  : num  0.131 0.379 0.851 0.626 0.51 ...
 $ V32  : num  0.26 0.295 0.504 0.734 0.546 ...
 $ V33  : num  0.512 0.198 0.186 0.612 0.288 ...
 $ V34  : num  0.7547 0.2341 0.2709 0.3497 0.0981 ...
 $ V35  : num  0.854 0.131 0.423 0.395 0.195 ...
 $ V36  : num  0.851 0.418 0.304 0.301 0.418 ...
 $ V37  : num  0.669 0.384 0.612 0.541 0.46 ...
 $ V38  : num  0.61 0.106 0.676 0.881 0.322 ...
 $ V39  : num  0.494 0.184 0.537 0.986 0.283 ...
 $ V40  : num  0.274 0.197 0.472 0.917 0.243 ...
 $ V41  : num  0.051 0.167 0.465 0.612 0.198 ...
 $ V42  : num  0.2834 0.0583 0.2587 0.5006 0.2444 ...
 $ V43  : num  0.282 0.14 0.213 0.321 0.185 ...
 $ V44  : num  0.4256 0.1628 0.2222 0.3202 0.0841 ...
 $ V45  : num  0.2641 0.0621 0.2111 0.4295 0.0692 ...
 $ V46  : num  0.1386 0.0203 0.0176 0.3654 0.0528 ...
 $ V47  : num  0.1051 0.053 0.1348 0.2655 0.0357 ...
 $ V48  : num  0.1343 0.0742 0.0744 0.1576 0.0085 ...
 $ V49  : num  0.0383 0.0409 0.013 0.0681 0.023 0.0264 0.0507 0.0285 0.0777 0.0092 ...
 $ V50  : num  0.0324 0.0061 0.0106 0.0294 0.0046 0.0081 0.0159 0.0178 0.0439 0.0198 ...
 $ V51  : num  0.0232 0.0125 0.0033 0.0241 0.0156 0.0104 0.0195 0.0052 0.0061 0.0118 ...
 $ V52  : num  0.0027 0.0084 0.0232 0.0121 0.0031 0.0045 0.0201 0.0081 0.0145 0.009 ...
 $ V53  : num  0.0065 0.0089 0.0166 0.0036 0.0054 0.0014 0.0248 0.012 0.0128 0.0223 ...
 $ V54  : num  0.0159 0.0048 0.0095 0.015 0.0105 0.0038 0.0131 0.0045 0.0145 0.0179 ...
 $ V55  : num  0.0072 0.0094 0.018 0.0085 0.011 0.0013 0.007 0.0121 0.0058 0.0084 ...
 $ V56  : num  0.0167 0.0191 0.0244 0.0073 0.0015 0.0089 0.0138 0.0097 0.0049 0.0068 ...
 $ V57  : num  0.018 0.014 0.0316 0.005 0.0072 0.0057 0.0092 0.0085 0.0065 0.0032 ...
 $ V58  : num  0.0084 0.0049 0.0164 0.0044 0.0048 0.0027 0.0143 0.0047 0.0093 0.0035 ...
 $ V59  : num  0.009 0.0052 0.0095 0.004 0.0107 0.0051 0.0036 0.0048 0.0059 0.0056 ...
 $ V60  : num  0.0032 0.0044 0.0078 0.0117 0.0094 0.0062 0.0103 0.0053 0.0022 0.004 ...
 $ Class: Factor w/ 2 levels "M","R": 2 2 2 2 2 2 2 2 2 2 ...
#+end_src

*** Soybean (multiclass)

- 大豆の品質
#+begin_src R :results output code :exports both
data(Soybean)
str(Soybean)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	683 obs. of  36 variables:
 $ Class          : Factor w/ 19 levels "2-4-d-injury",..: 11 11 11 11 11 11 11 11 11 11 ...
 $ date           : Factor w/ 7 levels "0","1","2","3",..: 7 5 4 4 7 6 6 5 7 5 ...
 $ plant.stand    : Ord.factor w/ 2 levels "0"<"1": 1 1 1 1 1 1 1 1 1 1 ...
 $ precip         : Ord.factor w/ 3 levels "0"<"1"<"2": 3 3 3 3 3 3 3 3 3 3 ...
 $ temp           : Ord.factor w/ 3 levels "0"<"1"<"2": 2 2 2 2 2 2 2 2 2 2 ...
 $ hail           : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 2 1 1 ...
 $ crop.hist      : Factor w/ 4 levels "0","1","2","3": 2 3 2 2 3 4 3 2 4 3 ...
 $ area.dam       : Factor w/ 4 levels "0","1","2","3": 2 1 1 1 1 1 1 1 1 1 ...
 $ sever          : Factor w/ 3 levels "0","1","2": 2 3 3 3 2 2 2 2 2 3 ...
 $ seed.tmt       : Factor w/ 3 levels "0","1","2": 1 2 2 1 1 1 2 1 2 1 ...
 $ germ           : Ord.factor w/ 3 levels "0"<"1"<"2": 1 2 3 2 3 2 1 3 2 3 ...
 $ plant.growth   : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ leaves         : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ leaf.halo      : Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ leaf.marg      : Factor w/ 3 levels "0","1","2": 3 3 3 3 3 3 3 3 3 3 ...
 $ leaf.size      : Ord.factor w/ 3 levels "0"<"1"<"2": 3 3 3 3 3 3 3 3 3 3 ...
 $ leaf.shread    : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ leaf.malf      : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ leaf.mild      : Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ stem           : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ lodging        : Factor w/ 2 levels "0","1": 2 1 1 1 1 1 2 1 1 1 ...
 $ stem.cankers   : Factor w/ 4 levels "0","1","2","3": 4 4 4 4 4 4 4 4 4 4 ...
 $ canker.lesion  : Factor w/ 4 levels "0","1","2","3": 2 2 1 1 2 1 2 2 2 2 ...
 $ fruiting.bodies: Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ ext.decay      : Factor w/ 3 levels "0","1","2": 2 2 2 2 2 2 2 2 2 2 ...
 $ mycelium       : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ int.discolor   : Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ sclerotia      : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ fruit.pods     : Factor w/ 4 levels "0","1","2","3": 1 1 1 1 1 1 1 1 1 1 ...
 $ fruit.spots    : Factor w/ 4 levels "0","1","2","4": 4 4 4 4 4 4 4 4 4 4 ...
 $ seed           : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ mold.growth    : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ seed.discolor  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ seed.size      : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ shriveling     : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ roots          : Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
#+end_src

*** Vehicle (multiclass)

#+begin_src R :results output code :exports both
data(Vehicle)
str(Vehicle)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	846 obs. of  19 variables:
 $ Comp        : num  95 91 104 93 85 107 97 90 86 93 ...
 $ Circ        : num  48 41 50 41 44 57 43 43 34 44 ...
 $ D.Circ      : num  83 84 106 82 70 106 73 66 62 98 ...
 $ Rad.Ra      : num  178 141 209 159 205 172 173 157 140 197 ...
 $ Pr.Axis.Ra  : num  72 57 66 63 103 50 65 65 61 62 ...
 $ Max.L.Ra    : num  10 9 10 9 52 6 6 9 7 11 ...
 $ Scat.Ra     : num  162 149 207 144 149 255 153 137 122 183 ...
 $ Elong       : num  42 45 32 46 45 26 42 48 54 36 ...
 $ Pr.Axis.Rect: num  20 19 23 19 19 28 19 18 17 22 ...
 $ Max.L.Rect  : num  159 143 158 143 144 169 143 146 127 146 ...
 $ Sc.Var.Maxis: num  176 170 223 160 241 280 176 162 141 202 ...
 $ Sc.Var.maxis: num  379 330 635 309 325 957 361 281 223 505 ...
 $ Ra.Gyr      : num  184 158 220 127 188 264 172 164 112 152 ...
 $ Skew.Maxis  : num  70 72 73 63 127 85 66 67 64 64 ...
 $ Skew.maxis  : num  6 9 14 6 9 5 13 3 2 4 ...
 $ Kurt.maxis  : num  16 14 9 10 11 9 1 3 14 14 ...
 $ Kurt.Maxis  : num  187 189 188 199 180 181 200 193 200 195 ...
 $ Holl.Ra     : num  197 199 196 207 183 183 204 202 208 204 ...
 $ Class       : Factor w/ 4 levels "bus","opel","saab",..: 4 4 3 4 1 1 1 4 4 3 ...
#+end_src

*** Vowel (multiclass)

#+begin_src R :results output code :exports both
data(Vowel)
str(Vowel)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	990 obs. of  11 variables:
 $ V1   : Factor w/ 15 levels "0","1","2","3",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ V2   : num  -3.64 -3.33 -2.12 -2.29 -2.6 ...
 $ V3   : num  -0.67 -0.694 -1.576 -1.498 -0.846 ...
 $ V4   : num  1.779 1.365 0.147 1.012 1.062 ...
 $ V5   : num  -0.168 -0.265 -0.707 -1.053 -1.633 ...
 $ V6   : num  1.627 1.933 1.559 1.06 0.764 ...
 $ V7   : num  -0.388 -0.363 -0.579 -0.567 0.394 0.217 0.322 -0.435 -0.512 -0.466 ...
 $ V8   : num  0.529 0.51 0.676 0.235 -0.15 -0.246 0.45 0.992 0.928 0.702 ...
 $ V9   : num  -0.874 -0.621 -0.809 -0.091 0.277 0.238 0.377 0.575 -0.167 0.06 ...
 $ V10  : num  -0.814 -0.488 -0.049 -0.795 -0.396 -0.365 -0.366 -0.301 -0.434 -0.836 ...
 $ Class: Factor w/ 11 levels "hid","hId","hEd",..: 1 2 3 4 5 6 7 8 9 10 ...
#+end_src

*** Zoo (multiclass)

#+begin_src R :results output code :exports both
data(Zoo)
str(Zoo)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	101 obs. of  17 variables:
 $ hair    : logi  TRUE TRUE FALSE TRUE TRUE TRUE ...
 $ feathers: logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
 $ eggs    : logi  FALSE FALSE TRUE FALSE FALSE FALSE ...
 $ milk    : logi  TRUE TRUE FALSE TRUE TRUE TRUE ...
 $ airborne: logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
 $ aquatic : logi  FALSE FALSE TRUE FALSE FALSE FALSE ...
 $ predator: logi  TRUE FALSE TRUE TRUE TRUE FALSE ...
 $ toothed : logi  TRUE TRUE TRUE TRUE TRUE TRUE ...
 $ backbone: logi  TRUE TRUE TRUE TRUE TRUE TRUE ...
 $ breathes: logi  TRUE TRUE FALSE TRUE TRUE TRUE ...
 $ venomous: logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
 $ fins    : logi  FALSE FALSE TRUE FALSE FALSE FALSE ...
 $ legs    : int  4 4 0 4 4 4 4 0 0 4 ...
 $ tail    : logi  FALSE TRUE TRUE FALSE TRUE TRUE ...
 $ domestic: logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
 $ catsize : logi  TRUE TRUE FALSE TRUE TRUE TRUE ...
 $ type    : Factor w/ 7 levels "mammal","bird",..: 1 1 4 1 1 1 1 4 4 1 ...
#+end_src

** modeldata package
*** List

#+begin_src R :exports both
pacman::p_data(modeldata)
#+end_src

#+RESULTS:
| Data                             | Description                                             |
|----------------------------------+---------------------------------------------------------|
| Chicago                          | Chicago ridership data                                  |
| Sacramento                       | Sacramento CA home prices                               |
| Smithsonian                      | Smithsonian museums                                     |
| ad_data                          | Alzheimer's disease data                                |
| attrition                        | Job attrition                                           |
| biomass                          | Biomass data                                            |
| car_prices                       | Kelly Blue Book resale data for 2005 model year GM cars |
| cells                            | Cell body segmentation                                  |
| check_times                      | Execution time data                                     |
| concrete                         | Compressive strength of concrete mixtures               |
| covers                           | Raw cover type data                                     |
| credit_data                      | Credit data                                             |
| drinks                           | Sample time series data                                 |
| hpc_cv                           | Class probability predictions                           |
| hpc_data                         | High-performance computing system data                  |
| lending_club                     | Loan data                                               |
| meats                            | Fat, water and protein content of meat samples          |
| mlc_churn                        | Customer churn data                                     |
| oils                             | Fatty acid composition of commercial oils               |
| okc                              | OkCupid data                                            |
| okc_text                         | OkCupid text data                                       |
| parabolic                        | Parabolic class boundary data                           |
| pathology                        | Liver pathology data                                    |
| pd_speech                        | Parkinson's disease speech classification data set      |
| scat                             | Morphometric data on scat                               |
| solubility_test                  | Solubility predictions from MARS model                  |
| stackoverflow                    | Annual Stack Overflow Developer Survey Data             |
| stations (Chicago)               | Chicago ridership data                                  |
| testing_data (small_fine_foods)  | Fine foods example data                                 |
| training_data (small_fine_foods) | Fine foods example data                                 |
| two_class_dat                    | Two class data                                          |
| two_class_example                | Two class predictions                                   |
| wa_churn                         | Watson churn data                                       |

*** Chicago (regression, time-series)

- ridership = 乗客数 (in thousands)
- 時系列データ
#+begin_src R :results output code :exports both
data(Chicago)
str(Chicago)
#+end_src

#+RESULTS:
#+begin_src R

tibble [5,698 × 50] (S3: tbl_df/tbl/data.frame)
 $ ridership       : num [1:5698] 15.7 15.8 15.9 15.9 15.4 ...
 $ Austin          : num [1:5698] 1.46 1.5 1.52 1.49 1.5 ...
 $ Quincy_Wells    : num [1:5698] 8.37 8.35 8.36 7.85 7.62 ...
 $ Belmont         : num [1:5698] 4.6 4.72 4.68 4.77 4.72 ...
 $ Archer_35th     : num [1:5698] 2.01 2.09 2.11 2.17 2.06 ...
 $ Oak_Park        : num [1:5698] 1.42 1.43 1.49 1.45 1.42 ...
 $ Western         : num [1:5698] 3.32 3.34 3.36 3.36 3.27 ...
 $ Clark_Lake      : num [1:5698] 15.6 15.7 15.6 15.7 15.6 ...
 $ Clinton         : num [1:5698] 2.4 2.4 2.37 2.42 2.42 ...
 $ Merchandise_Mart: num [1:5698] 6.48 6.48 6.41 6.49 5.8 ...
 $ Irving_Park     : num [1:5698] 3.74 3.85 3.86 3.84 3.88 ...
 $ Washington_Wells: num [1:5698] 7.56 7.58 7.62 7.36 7.09 ...
 $ Harlem          : num [1:5698] 2.65 2.76 2.79 2.81 2.73 ...
 $ Monroe          : num [1:5698] 5.67 6.01 5.79 5.96 5.77 ...
 $ Polk            : num [1:5698] 2.48 2.44 2.53 2.45 2.57 ...
 $ Ashland         : num [1:5698] 1.32 1.31 1.32 1.35 1.35 ...
 $ Kedzie          : num [1:5698] 3.01 3.02 2.98 3.01 3.08 ...
 $ Addison         : num [1:5698] 2.5 2.57 2.59 2.53 2.56 ...
 $ Jefferson_Park  : num [1:5698] 6.59 6.75 6.97 7.01 6.92 ...
 $ Montrose        : num [1:5698] 1.84 1.92 1.98 1.98 1.95 ...
 $ California      : num [1:5698] 0.756 0.781 0.812 0.776 0.789 0.37 0.274 0.473 0.844 0.835 ...
 $ temp_min        : num [1:5698] 15.1 25 19 15.1 21 19 15.1 26.6 34 33.1 ...
 $ temp            : num [1:5698] 19.4 30.4 25 22.4 27 ...
 $ temp_max        : num [1:5698] 30 36 28.9 27 32 30 28.9 41 43 36 ...
 $ temp_change     : num [1:5698] 14.9 11 9.9 11.9 11 11 13.8 14.4 9 2.9 ...
 $ dew             : num [1:5698] 13.4 25 18 10.9 21.9 ...
 $ humidity        : num [1:5698] 78 79 81 66.5 84 71 74 93 93 89 ...
 $ pressure        : num [1:5698] 30.4 30.2 30.2 30.4 29.9 ...
 $ pressure_change : num [1:5698] 0.12 0.18 0.23 0.16 0.65 ...
 $ wind            : num [1:5698] 5.2 8.1 10.4 9.8 12.7 12.7 8.1 8.1 9.2 11.5 ...
 $ wind_max        : num [1:5698] 10.4 11.5 19.6 16.1 19.6 17.3 13.8 17.3 23 16.1 ...
 $ gust            : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ gust_max        : num [1:5698] 0 0 0 0 25.3 26.5 0 26.5 31.1 0 ...
 $ percip          : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ percip_max      : num [1:5698] 0 0 0 0 0 0 0 0.07 0.11 0.01 ...
 $ weather_rain    : num [1:5698] 0 0 0 0 0 ...
 $ weather_snow    : num [1:5698] 0 0 0.214 0 0.516 ...
 $ weather_cloud   : num [1:5698] 0.708 1 0.357 0.292 0.452 ...
 $ weather_storm   : num [1:5698] 0 0.2083 0.0714 0.0417 0.4516 ...
 $ Blackhawks_Away : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ Blackhawks_Home : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ Bulls_Away      : num [1:5698] 0 0 1 0 0 0 0 0 1 0 ...
 $ Bulls_Home      : num [1:5698] 0 1 0 0 0 1 0 0 0 0 ...
 $ Bears_Away      : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ Bears_Home      : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ WhiteSox_Away   : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ WhiteSox_Home   : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ Cubs_Away       : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ Cubs_Home       : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ...
 $ date            : Date[1:5698], format: "2001-01-22" "2001-01-23" ...
#+end_src

*** Sacramento (regression)

- price が目的変数
#+begin_src R :results output code :exports both
data(Sacramento)
str(Sacramento)
#+end_src

#+RESULTS:
#+begin_src R

tibble [932 × 9] (S3: tbl_df/tbl/data.frame)
 $ city     : Factor w/ 37 levels "ANTELOPE","AUBURN",..: 34 34 34 34 34 34 34 34 29 31 ...
 $ zip      : Factor w/ 68 levels "z95603","z95608",..: 64 52 44 44 53 65 66 49 24 25 ...
 $ beds     : int [1:932] 2 3 2 2 2 3 3 3 2 3 ...
 $ baths    : num [1:932] 1 1 1 1 1 1 2 1 2 2 ...
 $ sqft     : int [1:932] 836 1167 796 852 797 1122 1104 1177 941 1146 ...
 $ type     : Factor w/ 3 levels "Condo","Multi_Family",..: 3 3 3 3 3 1 3 3 1 3 ...
 $ price    : int [1:932] 59222 68212 68880 69307 81900 89921 90895 91002 94905 98937 ...
 $ latitude : num [1:932] 38.6 38.5 38.6 38.6 38.5 ...
 $ longitude: num [1:932] -121 -121 -121 -121 -121 ...
#+end_src

*** Smithsonian (geo data)

- 緯度・経度データ
#+begin_src R :results output code :exports both
data(Smithsonian)
str(Smithsonian)
#+end_src

#+RESULTS:
#+begin_src R

tibble [20 × 3] (S3: tbl_df/tbl/data.frame)
 $ name     : chr [1:20] "Anacostia Community Museum" "Arthur M. Sackler Gallery" "Arts and Industries Building" "Cooper Hewitt, Smithsonian Design Museum" ...
 $ latitude : num [1:20] 38.9 38.9 38.9 40.8 38.9 ...
 $ longitude: num [1:20] -77 -77 -77 -74 -77 ...
#+end_src

*** ad_data

- 患者のデータ
#+begin_src R :results output code :exports both
data(ad_data)
str(ad_data)
#+end_src

#+RESULTS:
#+begin_src R

tibble [333 × 131] (S3: tbl_df/tbl/data.frame)
 $ ACE_CD143_Angiotensin_Converti  : num [1:333] 2 1.56 1.52 1.68 2.4 ...
 $ ACTH_Adrenocorticotropic_Hormon : num [1:333] -1.386 -1.386 -1.715 -1.609 -0.968 ...
 $ AXL                             : num [1:333] 1.098 0.683 -0.145 0.683 0.191 ...
 $ Adiponectin                     : num [1:333] -5.36 -5.02 -5.81 -5.12 -4.78 ...
 $ Alpha_1_Antichymotrypsin        : num [1:333] 1.74 1.46 1.19 1.28 2.13 ...
 $ Alpha_1_Antitrypsin             : num [1:333] -12.6 -11.9 -13.6 -15.5 -11.1 ...
 $ Alpha_1_Microglobulin           : num [1:333] -2.58 -3.24 -2.88 -3.17 -2.34 ...
 $ Alpha_2_Macroglobulin           : num [1:333] -72.7 -154.6 -136.5 -98.4 -144.9 ...
 $ Angiopoietin_2_ANG_2            : num [1:333] 1.065 0.742 0.833 0.916 0.956 ...
 $ Angiotensinogen                 : num [1:333] 2.51 2.46 1.98 2.38 2.86 ...
 $ Apolipoprotein_A_IV             : num [1:333] -1.43 -1.66 -1.66 -2.12 -1.17 ...
 $ Apolipoprotein_A1               : num [1:333] -7.4 -7.05 -7.68 -8.05 -6.73 ...
 $ Apolipoprotein_A2               : num [1:333] -0.2614 -0.8675 -0.6539 -1.2379 0.0953 ...
 $ Apolipoprotein_B                : num [1:333] -4.62 -6.75 -3.98 -6.52 -3.38 ...
 $ Apolipoprotein_CI               : num [1:333] -1.273 -1.273 -1.715 -1.966 -0.755 ...
 $ Apolipoprotein_CIII             : num [1:333] -2.31 -2.34 -2.75 -3 -1.51 ...
 $ Apolipoprotein_D                : num [1:333] 2.08 1.34 1.34 1.44 1.63 ...
 $ Apolipoprotein_E                : num [1:333] 3.75 3.1 2.75 2.37 3.07 ...
 $ Apolipoprotein_H                : num [1:333] -0.157 -0.575 -0.345 -0.532 0.663 ...
 $ B_Lymphocyte_Chemoattractant_BL : num [1:333] 2.3 1.67 1.67 1.98 2.3 ...
 $ BMP_6                           : num [1:333] -2.2 -1.73 -2.06 -1.98 -1.24 ...
 $ Beta_2_Microglobulin            : num [1:333] 0.693 0.47 0.336 0.642 0.336 ...
 $ Betacellulin                    : int [1:333] 34 53 49 52 67 51 41 42 58 59 ...
 $ C_Reactive_Protein              : num [1:333] -4.07 -6.65 -8.05 -6.21 -4.34 ...
 $ CD40                            : num [1:333] -0.796 -1.273 -1.242 -1.124 -0.924 ...
 $ CD5L                            : num [1:333] 0.0953 -0.6733 0.0953 -0.3285 0.3633 ...
 $ Calbindin                       : num [1:333] 33.2 25.3 22.2 23.5 21.8 ...
 $ Calcitonin                      : num [1:333] 1.386 3.611 2.116 -0.151 1.308 ...
 $ CgA                             : num [1:333] 398 466 348 334 443 ...
 $ Clusterin_Apo_J                 : num [1:333] 3.56 3.04 2.77 2.83 3.04 ...
 $ Complement_3                    : num [1:333] -10.4 -16.1 -16.1 -13.2 -12.8 ...
 $ Complement_Factor_H             : num [1:333] 3.57 3.6 4.47 3.1 7.25 ...
 $ Connective_Tissue_Growth_Factor : num [1:333] 0.531 0.588 0.642 0.531 0.916 ...
 $ Cortisol                        : num [1:333] 10 12 10 14 11 13 4.9 13 12 17 ...
 $ Creatine_Kinase_MB              : num [1:333] -1.71 -1.75 -1.38 -1.65 -1.63 ...
 $ Cystatin_C                      : num [1:333] 9.04 9.07 8.95 9.58 8.98 ...
 $ EGF_R                           : num [1:333] -0.135 -0.37 -0.733 -0.422 -0.621 ...
 $ EN_RAGE                         : num [1:333] -3.69 -3.82 -4.76 -2.94 -2.36 ...
 $ ENA_78                          : num [1:333] -1.35 -1.36 -1.39 -1.37 -1.34 ...
 $ Eotaxin_3                       : int [1:333] 53 62 62 44 64 57 64 64 64 70 ...
 $ FAS                             : num [1:333] -0.0834 -0.5276 -0.6349 -0.478 -0.1278 ...
 $ FSH_Follicle_Stimulation_Hormon : num [1:333] -0.652 -1.627 -1.563 -0.59 -0.976 ...
 $ Fas_Ligand                      : num [1:333] 3.1 2.98 1.36 2.54 4.04 ...
 $ Fatty_Acid_Binding_Protein      : num [1:333] 2.521 2.248 0.906 0.624 2.635 ...
 $ Ferritin                        : num [1:333] 3.33 3.93 3.18 3.14 2.69 ...
 $ Fetuin_A                        : num [1:333] 1.281 1.194 1.411 0.742 2.152 ...
 $ Fibrinogen                      : num [1:333] -7.04 -8.05 -7.2 -7.8 -6.98 ...
 $ GRO_alpha                       : num [1:333] 1.38 1.37 1.41 1.37 1.4 ...
 $ Gamma_Interferon_induced_Monokin: num [1:333] 2.95 2.72 2.76 2.89 2.85 ...
 $ Glutathione_S_Transferase_alpha : num [1:333] 1.064 0.867 0.889 0.708 1.236 ...
 $ HB_EGF                          : num [1:333] 6.56 8.75 7.75 5.95 7.25 ...
 $ HCC_4                           : num [1:333] -3.04 -4.07 -3.65 -3.82 -3.15 ...
 $ Hepatocyte_Growth_Factor_HGF    : num [1:333] 0.5878 0.5306 0.0953 0.4055 0.5306 ...
 $ I_309                           : num [1:333] 3.43 3.14 2.4 3.37 3.76 ...
 $ ICAM_1                          : num [1:333] -0.1908 -0.462 -0.462 -0.8573 0.0972 ...
 $ IGF_BP_2                        : num [1:333] 5.61 5.35 5.18 5.42 5.42 ...
 $ IL_11                           : num [1:333] 5.12 4.94 4.67 6.22 7.07 ...
 $ IL_13                           : num [1:333] 1.28 1.27 1.27 1.31 1.31 ...
 $ IL_16                           : num [1:333] 4.19 2.88 2.62 2.44 4.74 ...
 $ IL_17E                          : num [1:333] 5.73 6.71 4.15 4.7 4.2 ...
 $ IL_1alpha                       : num [1:333] -6.57 -8.05 -8.18 -7.6 -6.94 ...
 $ IL_3                            : num [1:333] -3.24 -3.91 -4.65 -4.27 -3 ...
 $ IL_4                            : num [1:333] 2.48 2.4 1.82 1.48 2.71 ...
 $ IL_5                            : num [1:333] 1.099 0.693 -0.248 0.788 1.163 ...
 $ IL_6                            : num [1:333] 0.2694 0.0962 0.1857 -0.3712 -0.072 ...
 $ IL_6_Receptor                   : num [1:333] 0.6428 0.4312 0.0967 0.5752 0.0967 ...
 $ IL_7                            : num [1:333] 4.81 3.71 1.01 2.34 4.29 ...
 $ IL_8                            : num [1:333] 1.71 1.68 1.69 1.72 1.76 ...
 $ IP_10_Inducible_Protein_10      : num [1:333] 6.24 5.69 5.05 5.6 6.37 ...
 $ IgA                             : num [1:333] -6.81 -6.38 -6.32 -7.62 -4.65 ...
 $ Insulin                         : num [1:333] -0.626 -0.943 -1.447 -1.485 -0.3 ...
 $ Kidney_Injury_Molecule_1_KIM_1  : num [1:333] -1.2 -1.2 -1.19 -1.23 -1.16 ...
 $ LOX_1                           : num [1:333] 1.7 1.53 1.16 1.22 1.36 ...
 $ Leptin                          : num [1:333] -1.529 -1.466 -1.662 -1.269 -0.915 ...
 $ Lipoprotein_a                   : num [1:333] -4.27 -4.93 -5.84 -4.99 -2.94 ...
 $ MCP_1                           : num [1:333] 6.74 6.85 6.77 6.78 6.72 ...
 $ MCP_2                           : num [1:333] 1.981 1.809 0.401 1.981 2.221 ...
 $ MIF                             : num [1:333] -1.24 -1.9 -2.3 -1.66 -1.9 ...
 $ MIP_1alpha                      : num [1:333] 4.97 3.69 4.05 4.93 6.45 ...
 $ MIP_1beta                       : num [1:333] 3.26 3.14 2.4 3.22 3.53 ...
 $ MMP_2                           : num [1:333] 4.48 3.78 2.87 2.97 3.69 ...
 $ MMP_3                           : num [1:333] -2.21 -2.47 -2.3 -1.77 -1.56 ...
 $ MMP10                           : num [1:333] -3.27 -3.65 -2.73 -4.07 -2.62 ...
 $ MMP7                            : num [1:333] -3.774 -5.968 -4.03 -6.856 -0.222 ...
 $ Myoglobin                       : num [1:333] -1.897 -0.755 -1.386 -1.139 -1.772 ...
 $ NT_proBNP                       : num [1:333] 4.55 4.22 4.25 4.11 4.47 ...
 $ NrCAM                           : num [1:333] 5 5.21 4.74 4.97 5.2 ...
 $ Osteopontin                     : num [1:333] 5.36 6 5.02 5.77 5.69 ...
 $ PAI_1                           : num [1:333] 1.0035 -0.0306 0.4384 0 0.2523 ...
 $ PAPP_A                          : num [1:333] -2.9 -2.81 -2.94 -2.79 -2.94 ...
 $ PLGF                            : num [1:333] 4.44 4.03 4.51 3.43 4.8 ...
 $ PYY                             : num [1:333] 3.22 3.14 2.89 2.83 3.66 ...
 $ Pancreatic_polypeptide          : num [1:333] 0.579 0.336 -0.892 -0.821 0.262 ...
 $ Prolactin                       : num [1:333] 0 -0.5108 -0.1393 -0.0408 0.1823 ...
 $ Prostatic_Acid_Phosphatase      : num [1:333] -1.62 -1.74 -1.64 -1.74 -1.7 ...
 $ Protein_S                       : num [1:333] -1.78 -2.46 -2.26 -2.7 -1.66 ...
 $ Pulmonary_and_Activation_Regulat: num [1:333] -0.844 -2.303 -1.661 -1.109 -0.562 ...
 $ RANTES                          : num [1:333] -6.21 -6.94 -6.65 -5.99 -6.32 ...
 $ Resistin                        : num [1:333] -16.5 -16 -16.5 -13.5 -11.1 ...
  [list output truncated]
#+end_src

*** attrition (binary)

- job attrition = 従業員の離職
  - attrition = 自主的な退職
  - turnover = 自主的な退職 + 会社都合の退職

#+begin_src R :results output code :exports both
data(attrition)
str(attrition)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	1470 obs. of  31 variables:
 $ Age                     : int  41 49 37 33 27 32 59 30 38 36 ...
 $ Attrition               : Factor w/ 2 levels "No","Yes": 2 1 2 1 1 1 1 1 1 1 ...
 $ BusinessTravel          : Factor w/ 3 levels "Non-Travel","Travel_Frequently",..: 3 2 3 2 3 2 3 3 2 3 ...
 $ DailyRate               : int  1102 279 1373 1392 591 1005 1324 1358 216 1299 ...
 $ Department              : Factor w/ 3 levels "Human_Resources",..: 3 2 2 2 2 2 2 2 2 2 ...
 $ DistanceFromHome        : int  1 8 2 3 2 2 3 24 23 27 ...
 $ Education               : Ord.factor w/ 5 levels "Below_College"<..: 2 1 2 4 1 2 3 1 3 3 ...
 $ EducationField          : Factor w/ 6 levels "Human_Resources",..: 2 2 5 2 4 2 4 2 2 4 ...
 $ EnvironmentSatisfaction : Ord.factor w/ 4 levels "Low"<"Medium"<..: 2 3 4 4 1 4 3 4 4 3 ...
 $ Gender                  : Factor w/ 2 levels "Female","Male": 1 2 2 1 2 2 1 2 2 2 ...
 $ HourlyRate              : int  94 61 92 56 40 79 81 67 44 94 ...
 $ JobInvolvement          : Ord.factor w/ 4 levels "Low"<"Medium"<..: 3 2 2 3 3 3 4 3 2 3 ...
 $ JobLevel                : int  2 2 1 1 1 1 1 1 3 2 ...
 $ JobRole                 : Factor w/ 9 levels "Healthcare_Representative",..: 8 7 3 7 3 3 3 3 5 1 ...
 $ JobSatisfaction         : Ord.factor w/ 4 levels "Low"<"Medium"<..: 4 2 3 3 2 4 1 3 3 3 ...
 $ MaritalStatus           : Factor w/ 3 levels "Divorced","Married",..: 3 2 3 2 2 3 2 1 3 2 ...
 $ MonthlyIncome           : int  5993 5130 2090 2909 3468 3068 2670 2693 9526 5237 ...
 $ MonthlyRate             : int  19479 24907 2396 23159 16632 11864 9964 13335 8787 16577 ...
 $ NumCompaniesWorked      : int  8 1 6 1 9 0 4 1 0 6 ...
 $ OverTime                : Factor w/ 2 levels "No","Yes": 2 1 2 2 1 1 2 1 1 1 ...
 $ PercentSalaryHike       : int  11 23 15 11 12 13 20 22 21 13 ...
 $ PerformanceRating       : Ord.factor w/ 4 levels "Low"<"Good"<"Excellent"<..: 3 4 3 3 3 3 4 4 4 3 ...
 $ RelationshipSatisfaction: Ord.factor w/ 4 levels "Low"<"Medium"<..: 1 4 2 3 4 3 1 2 2 2 ...
 $ StockOptionLevel        : int  0 1 0 0 1 0 3 1 0 2 ...
 $ TotalWorkingYears       : int  8 10 7 8 6 8 12 1 10 17 ...
 $ TrainingTimesLastYear   : int  0 3 3 3 3 2 3 2 2 3 ...
 $ WorkLifeBalance         : Ord.factor w/ 4 levels "Bad"<"Good"<"Better"<..: 1 3 3 3 3 2 2 3 3 2 ...
 $ YearsAtCompany          : int  6 10 0 8 2 7 1 1 9 7 ...
 $ YearsInCurrentRole      : int  4 7 0 7 2 7 0 0 7 7 ...
 $ YearsSinceLastPromotion : int  0 1 0 3 2 3 0 0 1 7 ...
 $ YearsWithCurrManager    : int  5 7 0 0 2 6 0 0 8 7 ...
#+end_src

*** biomass (regression)

- バイオマス = 生物由来の燃料の量
- HHV = higher heating value
#+begin_src R :results output code :exports both
data(biomass)
str(biomass)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	536 obs. of  8 variables:
 $ sample  : chr  "Akhrot Shell" "Alabama Oak Wood Waste" "Alder" "Alfalfa" ...
 $ dataset : chr  "Training" "Training" "Training" "Training" ...
 $ carbon  : num  49.8 49.5 47.8 45.1 46.8 ...
 $ hydrogen: num  5.64 5.7 5.8 4.97 5.4 5.75 5.99 5.7 5.5 5.9 ...
 $ oxygen  : num  42.9 41.3 46.2 35.6 40.7 ...
 $ nitrogen: num  0.41 0.2 0.11 3.3 1 2.04 2.68 1.7 0.8 1.2 ...
 $ sulfur  : num  0 0 0.02 0.16 0.02 0.1 0.2 0.2 0 0.1 ...
 $ HHV     : num  20 19.2 18.3 18.2 18.4 ...
#+end_src

*** car_prices (regression)

#+begin_src R :results output code :exports both
data(car_prices)
str(car_prices)
#+end_src

#+RESULTS:
#+begin_src R

tibble [804 × 18] (S3: tbl_df/tbl/data.frame)
 $ Price      : num [1:804] 22661 21725 29143 30732 33359 ...
 $ Mileage    : int [1:804] 20105 13457 31655 22479 17590 23635 17381 27558 25049 17319 ...
 $ Cylinder   : int [1:804] 6 6 4 4 4 4 4 4 4 4 ...
 $ Doors      : int [1:804] 4 2 2 2 2 2 2 2 2 4 ...
 $ Cruise     : int [1:804] 1 1 1 1 1 1 1 1 1 1 ...
 $ Sound      : int [1:804] 0 1 1 0 1 0 1 0 0 0 ...
 $ Leather    : int [1:804] 0 0 1 0 1 0 1 1 0 1 ...
 $ Buick      : int [1:804] 1 0 0 0 0 0 0 0 0 0 ...
 $ Cadillac   : int [1:804] 0 0 0 0 0 0 0 0 0 0 ...
 $ Chevy      : int [1:804] 0 1 0 0 0 0 0 0 0 0 ...
 $ Pontiac    : int [1:804] 0 0 0 0 0 0 0 0 0 0 ...
 $ Saab       : int [1:804] 0 0 1 1 1 1 1 1 1 1 ...
 $ Saturn     : int [1:804] 0 0 0 0 0 0 0 0 0 0 ...
 $ convertible: int [1:804] 0 0 1 1 1 1 1 1 1 0 ...
 $ coupe      : int [1:804] 0 1 0 0 0 0 0 0 0 0 ...
 $ hatchback  : int [1:804] 0 0 0 0 0 0 0 0 0 0 ...
 $ sedan      : int [1:804] 1 0 0 0 0 0 0 0 0 1 ...
 $ wagon      : int [1:804] 0 0 0 0 0 0 0 0 0 0 ...
#+end_src

*** cells (binary)

#+begin_src R :results output code :exports both
data(cells)
str(cells)
#+end_src

#+RESULTS:
#+begin_src R

tibble [2,019 × 58] (S3: tbl_df/tbl/data.frame)
 $ case                        : Factor w/ 2 levels "Test","Train": 1 2 2 2 1 1 1 1 1 1 ...
 $ class                       : Factor w/ 2 levels "PS","WS": 1 1 2 1 1 2 2 1 2 2 ...
 $ angle_ch_1                  : num [1:2019] 143.25 133.75 106.65 69.15 2.89 ...
 $ area_ch_1                   : int [1:2019] 185 819 431 298 285 172 177 251 495 384 ...
 $ avg_inten_ch_1              : num [1:2019] 15.7 31.9 28 19.5 24.3 ...
 $ avg_inten_ch_2              : num [1:2019] 4.95 206.88 116.32 102.29 112.42 ...
 $ avg_inten_ch_3              : num [1:2019] 9.55 69.92 63.94 28.22 20.47 ...
 $ avg_inten_ch_4              : num [1:2019] 2.21 164.15 106.7 31.03 40.58 ...
 $ convex_hull_area_ratio_ch_1 : num [1:2019] 1.12 1.26 1.05 1.2 1.11 ...
 $ convex_hull_perim_ratio_ch_1: num [1:2019] 0.92 0.797 0.935 0.866 0.957 ...
 $ diff_inten_density_ch_1     : num [1:2019] 29.5 31.9 32.5 26.7 31.6 ...
 $ diff_inten_density_ch_3     : num [1:2019] 13.8 43.1 36 22.9 21.7 ...
 $ diff_inten_density_ch_4     : num [1:2019] 6.83 79.31 51.36 26.39 25.03 ...
 $ entropy_inten_ch_1          : num [1:2019] 4.97 6.09 5.88 5.42 5.66 ...
 $ entropy_inten_ch_3          : num [1:2019] 4.37 6.64 6.68 5.44 5.29 ...
 $ entropy_inten_ch_4          : num [1:2019] 2.72 7.88 7.14 5.78 5.24 ...
 $ eq_circ_diam_ch_1           : num [1:2019] 15.4 32.3 23.4 19.5 19.1 ...
 $ eq_ellipse_lwr_ch_1         : num [1:2019] 3.06 1.56 1.38 3.39 2.74 ...
 $ eq_ellipse_oblate_vol_ch_1  : num [1:2019] 337 2233 802 725 608 ...
 $ eq_ellipse_prolate_vol_ch_1 : num [1:2019] 110 1433 583 214 222 ...
 $ eq_sphere_area_ch_1         : num [1:2019] 742 3279 1727 1195 1140 ...
 $ eq_sphere_vol_ch_1          : num [1:2019] 1901 17654 6751 3884 3621 ...
 $ fiber_align_2_ch_3          : num [1:2019] 1 1.49 1.3 1.22 1.49 ...
 $ fiber_align_2_ch_4          : num [1:2019] 1 1.35 1.52 1.73 1.38 ...
 $ fiber_length_ch_1           : num [1:2019] 27 64.3 21.1 43.1 34.7 ...
 $ fiber_width_ch_1            : num [1:2019] 7.41 13.17 21.14 7.4 8.48 ...
 $ inten_cooc_asm_ch_3         : num [1:2019] 0.01118 0.02805 0.00686 0.03096 0.02277 ...
 $ inten_cooc_asm_ch_4         : num [1:2019] 0.05045 0.01259 0.00614 0.01103 0.07969 ...
 $ inten_cooc_contrast_ch_3    : num [1:2019] 40.75 8.23 14.45 7.3 15.85 ...
 $ inten_cooc_contrast_ch_4    : num [1:2019] 13.9 6.98 16.7 13.39 3.54 ...
 $ inten_cooc_entropy_ch_3     : num [1:2019] 7.2 6.82 7.58 6.31 6.78 ...
 $ inten_cooc_entropy_ch_4     : num [1:2019] 5.25 7.1 7.67 7.2 5.5 ...
 $ inten_cooc_max_ch_3         : num [1:2019] 0.0774 0.1532 0.0284 0.1628 0.1274 ...
 $ inten_cooc_max_ch_4         : num [1:2019] 0.172 0.0739 0.0232 0.0775 0.2785 ...
 $ kurt_inten_ch_1             : num [1:2019] -0.6567 -0.2488 -0.2935 0.6259 0.0421 ...
 $ kurt_inten_ch_3             : num [1:2019] -0.608 -0.331 1.051 0.128 0.952 ...
 $ kurt_inten_ch_4             : num [1:2019] 0.726 -0.265 0.151 -0.347 -0.195 ...
 $ length_ch_1                 : num [1:2019] 26.2 47.2 28.1 37.9 36 ...
 $ neighbor_avg_dist_ch_1      : num [1:2019] 370 174 158 206 205 ...
 $ neighbor_min_dist_ch_1      : num [1:2019] 99.1 30.1 34.9 33.1 27 ...
 $ neighbor_var_dist_ch_1      : num [1:2019] 128 81.4 90.4 116.9 111 ...
 $ perim_ch_1                  : num [1:2019] 68.8 154.9 84.6 101.1 86.5 ...
 $ shape_bfr_ch_1              : num [1:2019] 0.665 0.54 0.724 0.589 0.6 ...
 $ shape_lwr_ch_1              : num [1:2019] 2.46 1.47 1.33 2.83 2.73 ...
 $ shape_p_2_a_ch_1            : num [1:2019] 1.88 2.26 1.27 2.55 2.02 ...
 $ skew_inten_ch_1             : num [1:2019] 0.455 0.399 0.472 0.882 0.517 ...
 $ skew_inten_ch_3             : num [1:2019] 0.46 0.62 0.971 1 1.177 ...
 $ skew_inten_ch_4             : num [1:2019] 1.233 0.527 0.325 0.604 0.926 ...
 $ spot_fiber_count_ch_3       : int [1:2019] 1 4 2 4 1 1 0 2 1 1 ...
 $ spot_fiber_count_ch_4       : num [1:2019] 5 12 7 8 8 5 5 8 12 8 ...
 $ total_inten_ch_1            : int [1:2019] 2781 24964 11552 5545 6603 53779 43950 4401 7593 6512 ...
 $ total_inten_ch_2            : num [1:2019] 701 160998 47511 28870 30306 ...
 $ total_inten_ch_3            : int [1:2019] 1690 54675 26344 8042 5569 21234 20929 4136 6488 7503 ...
 $ total_inten_ch_4            : int [1:2019] 392 128368 43959 8843 11037 57231 46187 373 24325 23162 ...
 $ var_inten_ch_1              : num [1:2019] 12.5 18.8 17.3 13.8 15.4 ...
 $ var_inten_ch_3              : num [1:2019] 7.61 56.72 37.67 30.01 20.5 ...
 $ var_inten_ch_4              : num [1:2019] 2.71 118.39 49.47 24.75 45.45 ...
 $ width_ch_1                  : num [1:2019] 10.6 32.2 21.2 13.4 13.2 ...
#+end_src

*** check_times (regression)

- CRAN パッケージの R CMD check にかかる時間を計測 =check_time=
- status = 0(fail), 1(sucess)
#+begin_src R :results output code :exports both
data(check_times)
str(check_times)
#+end_src

#+RESULTS:
#+begin_src R

tibble [13,626 × 25] (S3: tbl_df/tbl/data.frame)
 $ package       : chr [1:13626] "A3" "abbyyR" "abc" "abc.data" ...
 $ authors       : int [1:13626] 1 1 1 1 5 3 2 1 4 6 ...
 $ imports       : num [1:13626] 0 6 0 0 3 1 0 4 0 7 ...
 $ suggests      : num [1:13626] 2 4 0 0 2 0 2 2 0 0 ...
 $ depends       : num [1:13626] 3 1 6 1 1 1 5 0 1 1 ...
 $ Roxygen       : num [1:13626] 0 1 0 0 1 0 0 1 0 0 ...
 $ gh            : num [1:13626] 0 1 0 0 0 0 0 1 0 0 ...
 $ rforge        : num [1:13626] 0 0 0 0 0 0 0 0 0 0 ...
 $ descr         : int [1:13626] 217 313 269 63 223 1031 135 344 204 335 ...
 $ r_count       : int [1:13626] 2 20 8 0 10 10 16 3 6 14 ...
 $ r_size        : num [1:13626] 0.0291 0.0463 0.0784 0 0.0191 ...
 $ ns_import     : num [1:13626] 3 15 6 0 4 5 0 4 2 10 ...
 $ ns_export     : num [1:13626] 0 19 0 0 10 0 0 2 0 9 ...
 $ s3_methods    : num [1:13626] 3 0 11 0 0 0 0 2 0 23 ...
 $ s4_methods    : num [1:13626] 0 0 0 0 0 0 0 0 0 0 ...
 $ doc_count     : int [1:13626] 0 3 1 0 1 0 0 0 0 0 ...
 $ doc_size      : num [1:13626] 0 0.01976 0.03828 0 0.00787 ...
 $ src_count     : int [1:13626] 0 0 0 0 0 0 0 2 0 5 ...
 $ src_size      : num [1:13626] 0 0 0 0 0 ...
 $ data_count    : int [1:13626] 2 0 0 3 3 1 10 0 4 2 ...
 $ data_size     : num [1:13626] 0.0253 0 0 4.8859 4.5955 ...
 $ testthat_count: int [1:13626] 0 8 0 0 0 0 0 1 0 0 ...
 $ testthat_size : num [1:13626] 0 0.0025 0 0 0 ...
 $ check_time    : num [1:13626] 49 101 292 21 103 46 78 91 47 196 ...
 $ status        : num [1:13626] 1 1 1 1 1 1 1 1 1 1 ...
#+end_src

*** concrete (regression)

- コンクリートの強度 compressive_strength
#+begin_src R :results output code :exports both
data(concrete)
str(concrete)
#+end_src

#+RESULTS:
#+begin_src R

tibble [1,030 × 9] (S3: tbl_df/tbl/data.frame)
 $ cement              : num [1:1030] 540 540 332 332 199 ...
 $ blast_furnace_slag  : num [1:1030] 0 0 142 142 132 ...
 $ fly_ash             : num [1:1030] 0 0 0 0 0 0 0 0 0 0 ...
 $ water               : num [1:1030] 162 162 228 228 192 228 228 228 228 228 ...
 $ superplasticizer    : num [1:1030] 2.5 2.5 0 0 0 0 0 0 0 0 ...
 $ coarse_aggregate    : num [1:1030] 1040 1055 932 932 978 ...
 $ fine_aggregate      : num [1:1030] 676 676 594 594 826 ...
 $ age                 : int [1:1030] 28 28 270 365 360 90 365 28 28 28 ...
 $ compressive_strength: num [1:1030] 80 61.9 40.3 41 44.3 ...
#+end_src

*** covers

#+begin_src R :results output code :exports both
data(covers)
str(covers)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	40 obs. of  1 variable:
 $ description: chr  "1,cathedral family,rock outcrop complex,extremely stony" "2,vanet,ratake families complex,very stony" "3,haploborolis,rock outcrop complex,rubbly" "4,ratake family,rock outcrop complex,rubbly" ...
#+end_src

*** credit_data (binary)

- Status = bad, good
#+begin_src R :results output code :exports both
data(credit_data)
str(credit_data)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	4454 obs. of  14 variables:
 $ Status   : Factor w/ 2 levels "bad","good": 2 2 1 2 2 2 2 2 2 1 ...
 $ Seniority: int  9 17 10 0 0 1 29 9 0 0 ...
 $ Home     : Factor w/ 6 levels "ignore","other",..: 6 6 3 6 6 3 3 4 3 4 ...
 $ Time     : int  60 60 36 60 36 60 60 12 60 48 ...
 $ Age      : int  30 58 46 24 26 36 44 27 32 41 ...
 $ Marital  : Factor w/ 5 levels "divorced","married",..: 2 5 2 4 4 2 2 4 2 2 ...
 $ Records  : Factor w/ 2 levels "no","yes": 1 1 2 1 1 1 1 1 1 1 ...
 $ Job      : Factor w/ 4 levels "fixed","freelance",..: 2 1 2 1 1 1 1 1 2 4 ...
 $ Expenses : int  73 48 90 63 46 75 75 35 90 90 ...
 $ Income   : int  129 131 200 182 107 214 125 80 107 80 ...
 $ Assets   : int  0 0 3000 2500 0 3500 10000 0 15000 0 ...
 $ Debt     : int  0 0 0 0 0 0 0 0 0 0 ...
 $ Amount   : int  800 1000 2000 900 310 650 1600 200 1200 1200 ...
 $ Price    : int  846 1658 2985 1325 910 1645 1800 1093 1957 1468 ...
#+end_src

*** drinks (time-series)

- アルコールの販売量
#+begin_src R :results output code :exports both
data(drinks)
str(drinks)
#+end_src

#+RESULTS:
#+begin_src R

tibble [309 × 2] (S3: tbl_df/tbl/data.frame)
 $ date          : Date[1:309], format: "1992-01-01" "1992-02-01" ...
 $ S4248SM144NCEN: num [1:309] 3459 3458 4002 4564 4221 ...
#+end_src

*** hpc_cv (multiclass)

#+begin_src R :results output code :exports both
data(hpc_cv)
str(hpc_cv)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	3467 obs. of  7 variables:
 $ obs     : Factor w/ 4 levels "VF","F","M","L": 1 1 1 1 1 1 1 1 1 1 ...
 $ pred    : Factor w/ 4 levels "VF","F","M","L": 1 1 1 1 1 1 1 1 1 1 ...
 $ VF      : num  0.914 0.938 0.947 0.929 0.942 ...
 $ F       : num  0.0779 0.0571 0.0495 0.0653 0.0543 ...
 $ M       : num  0.00848 0.00482 0.00316 0.00579 0.00381 ...
 $ L       : num  1.99e-05 1.01e-05 5.00e-06 1.56e-05 7.29e-06 ...
 $ Resample: chr  "Fold01" "Fold01" "Fold01" "Fold01" ...
#+end_src

*** hpc_data (multiclass)

#+begin_src R :results output code :exports both
data(hpc_data)
str(hpc_data)
#+end_src

#+RESULTS:
#+begin_src R

tibble [4,331 × 8] (S3: tbl_df/tbl/data.frame)
 $ protocol    : Factor w/ 14 levels "A","C","D","E",..: 4 4 4 4 4 4 4 4 4 4 ...
 $ compounds   : num [1:4331] 997 97 101 93 100 100 105 98 101 95 ...
 $ input_fields: num [1:4331] 137 103 75 76 82 82 88 95 91 92 ...
 $ iterations  : num [1:4331] 20 20 10 20 20 20 20 20 20 20 ...
 $ num_pending : num [1:4331] 0 0 0 0 0 0 0 0 0 0 ...
 $ hour        : num [1:4331] 14 13.8 13.8 10.1 10.4 ...
 $ day         : Factor w/ 7 levels "Mon","Tue","Wed",..: 2 2 4 5 5 3 5 5 5 3 ...
 $ class       : Factor w/ 4 levels "VF","F","M","L": 2 1 1 1 1 1 1 1 1 1 ...
#+end_src

*** lending_club (binary)

#+begin_src R :results output code :exports both
data(lending_club)
str(lending_club)
#+end_src

#+RESULTS:
#+begin_src R

tibble [9,857 × 23] (S3: tbl_df/tbl/data.frame)
 $ funded_amnt               : int [1:9857] 16100 32000 10000 16800 3500 10000 11000 15000 6000 20000 ...
 $ term                      : Factor w/ 2 levels "term_36","term_60": 1 2 1 2 1 1 1 1 1 2 ...
 $ int_rate                  : num [1:9857] 13.99 11.99 16.29 13.67 7.39 ...
 $ sub_grade                 : Factor w/ 35 levels "A1","A2","A3",..: 14 11 16 13 4 10 1 7 8 12 ...
 $ addr_state                : Factor w/ 50 levels "AK","AL","AR",..: 7 23 35 33 5 43 17 24 34 11 ...
 $ verification_status       : Factor w/ 3 levels "Not_Verified",..: 1 3 2 3 2 2 1 1 2 1 ...
 $ annual_inc                : num [1:9857] 35000 72000 72000 101000 50100 32000 65000 188000 89000 48000 ...
 $ emp_length                : Factor w/ 12 levels "emp_lt_1","emp_1",..: 7 3 3 1 12 1 6 8 3 3 ...
 $ delinq_2yrs               : int [1:9857] 0 0 0 0 0 0 0 2 0 1 ...
 $ inq_last_6mths            : int [1:9857] 0 0 2 0 0 0 0 0 2 0 ...
 $ revol_util                : num [1:9857] 67.4 82.2 74.2 64 78.3 68.1 54.8 33.3 72.3 36 ...
 $ acc_now_delinq            : int [1:9857] 0 0 0 0 0 0 0 0 0 0 ...
 $ open_il_6m                : int [1:9857] 1 5 3 6 0 1 2 8 1 0 ...
 $ open_il_12m               : int [1:9857] 0 1 2 1 0 0 0 2 0 0 ...
 $ open_il_24m               : int [1:9857] 0 3 3 2 0 0 0 5 0 0 ...
 $ total_bal_il              : int [1:9857] 1099 49187 33378 55445 0 7574 20998 170814 19616 0 ...
 $ all_util                  : int [1:9857] 48 77 79 64 78 66 54 80 75 36 ...
 $ inq_fi                    : int [1:9857] 0 0 1 1 0 0 0 0 2 1 ...
 $ inq_last_12m              : int [1:9857] 3 0 4 4 0 0 0 4 6 1 ...
 $ delinq_amnt               : int [1:9857] 0 0 0 0 0 0 0 0 0 0 ...
 $ num_il_tl                 : int [1:9857] 3 9 9 10 3 9 7 21 7 1 ...
 $ total_il_high_credit_limit: int [1:9857] 13193 65945 39387 60188 0 12131 39486 177477 26129 0 ...
 $ Class                     : Factor w/ 2 levels "bad","good": 2 2 2 2 2 2 2 2 2 2 ...
#+end_src

*** meats (regression)

- water, fat, protein が目的変数になり得る
#+begin_src R :results output code :exports both
data(meats)
str(meats)
#+end_src

#+RESULTS:
#+begin_src R

tibble [215 × 103] (S3: tbl_df/tbl/data.frame)
 $ x_001  : num [1:215] 2.62 2.83 2.58 2.82 2.79 ...
 $ x_002  : num [1:215] 2.62 2.84 2.58 2.82 2.79 ...
 $ x_003  : num [1:215] 2.62 2.84 2.59 2.83 2.79 ...
 $ x_004  : num [1:215] 2.62 2.85 2.59 2.83 2.79 ...
 $ x_005  : num [1:215] 2.62 2.85 2.59 2.83 2.8 ...
 $ x_006  : num [1:215] 2.62 2.86 2.59 2.83 2.8 ...
 $ x_007  : num [1:215] 2.62 2.86 2.59 2.83 2.8 ...
 $ x_008  : num [1:215] 2.62 2.87 2.6 2.84 2.8 ...
 $ x_009  : num [1:215] 2.63 2.87 2.6 2.84 2.81 ...
 $ x_010  : num [1:215] 2.63 2.88 2.6 2.84 2.81 ...
 $ x_011  : num [1:215] 2.63 2.88 2.6 2.84 2.81 ...
 $ x_012  : num [1:215] 2.63 2.89 2.61 2.85 2.82 ...
 $ x_013  : num [1:215] 2.64 2.9 2.61 2.85 2.82 ...
 $ x_014  : num [1:215] 2.64 2.9 2.61 2.85 2.83 ...
 $ x_015  : num [1:215] 2.64 2.91 2.62 2.86 2.83 ...
 $ x_016  : num [1:215] 2.65 2.92 2.62 2.86 2.84 ...
 $ x_017  : num [1:215] 2.65 2.93 2.62 2.86 2.85 ...
 $ x_018  : num [1:215] 2.66 2.94 2.63 2.87 2.85 ...
 $ x_019  : num [1:215] 2.67 2.95 2.63 2.87 2.86 ...
 $ x_020  : num [1:215] 2.67 2.96 2.64 2.88 2.87 ...
 $ x_021  : num [1:215] 2.68 2.97 2.64 2.88 2.88 ...
 $ x_022  : num [1:215] 2.69 2.98 2.65 2.89 2.89 ...
 $ x_023  : num [1:215] 2.69 3 2.65 2.89 2.9 ...
 $ x_024  : num [1:215] 2.7 3.01 2.66 2.9 2.91 ...
 $ x_025  : num [1:215] 2.71 3.02 2.66 2.9 2.92 ...
 $ x_026  : num [1:215] 2.71 3.03 2.67 2.91 2.93 ...
 $ x_027  : num [1:215] 2.72 3.04 2.67 2.92 2.94 ...
 $ x_028  : num [1:215] 2.73 3.05 2.68 2.92 2.95 ...
 $ x_029  : num [1:215] 2.73 3.07 2.68 2.93 2.96 ...
 $ x_030  : num [1:215] 2.74 3.08 2.69 2.93 2.97 ...
 $ x_031  : num [1:215] 2.75 3.1 2.69 2.94 2.99 ...
 $ x_032  : num [1:215] 2.77 3.12 2.7 2.94 3 ...
 $ x_033  : num [1:215] 2.78 3.14 2.71 2.95 3.02 ...
 $ x_034  : num [1:215] 2.79 3.16 2.71 2.95 3.03 ...
 $ x_035  : num [1:215] 2.8 3.18 2.72 2.96 3.05 ...
 $ x_036  : num [1:215] 2.81 3.2 2.72 2.96 3.06 ...
 $ x_037  : num [1:215] 2.83 3.22 2.73 2.97 3.08 ...
 $ x_038  : num [1:215] 2.84 3.24 2.74 2.98 3.1 ...
 $ x_039  : num [1:215] 2.86 3.26 2.75 2.99 3.12 ...
 $ x_040  : num [1:215] 2.88 3.28 2.77 3 3.14 ...
 $ x_041  : num [1:215] 2.89 3.29 2.78 3.02 3.17 ...
 $ x_042  : num [1:215] 2.91 3.3 2.79 3.03 3.18 ...
 $ x_043  : num [1:215] 2.92 3.31 2.81 3.05 3.2 ...
 $ x_044  : num [1:215] 2.93 3.3 2.82 3.06 3.21 ...
 $ x_045  : num [1:215] 2.94 3.3 2.84 3.08 3.23 ...
 $ x_046  : num [1:215] 2.95 3.29 2.85 3.1 3.24 ...
 $ x_047  : num [1:215] 2.96 3.28 2.87 3.12 3.25 ...
 $ x_048  : num [1:215] 2.98 3.29 2.89 3.14 3.26 ...
 $ x_049  : num [1:215] 3 3.29 2.91 3.16 3.28 ...
 $ x_050  : num [1:215] 3.04 3.31 2.94 3.19 3.31 ...
 $ x_051  : num [1:215] 3.07 3.33 2.97 3.22 3.35 ...
 $ x_052  : num [1:215] 3.12 3.36 3.01 3.26 3.39 ...
 $ x_053  : num [1:215] 3.17 3.4 3.05 3.3 3.44 ...
 $ x_054  : num [1:215] 3.22 3.43 3.09 3.35 3.5 ...
 $ x_055  : num [1:215] 3.26 3.46 3.12 3.39 3.55 ...
 $ x_056  : num [1:215] 3.3 3.49 3.15 3.43 3.61 ...
 $ x_057  : num [1:215] 3.33 3.51 3.17 3.46 3.65 ...
 $ x_058  : num [1:215] 3.35 3.53 3.18 3.48 3.68 ...
 $ x_059  : num [1:215] 3.36 3.54 3.19 3.5 3.7 ...
 $ x_060  : num [1:215] 3.37 3.55 3.19 3.51 3.72 ...
 $ x_061  : num [1:215] 3.38 3.55 3.19 3.51 3.73 ...
 $ x_062  : num [1:215] 3.39 3.56 3.19 3.51 3.74 ...
 $ x_063  : num [1:215] 3.39 3.56 3.18 3.51 3.74 ...
 $ x_064  : num [1:215] 3.39 3.56 3.18 3.51 3.74 ...
 $ x_065  : num [1:215] 3.39 3.56 3.17 3.51 3.74 ...
 $ x_066  : num [1:215] 3.39 3.56 3.17 3.5 3.74 ...
 $ x_067  : num [1:215] 3.39 3.56 3.16 3.49 3.74 ...
 $ x_068  : num [1:215] 3.39 3.55 3.15 3.48 3.73 ...
 $ x_069  : num [1:215] 3.38 3.55 3.13 3.47 3.73 ...
 $ x_070  : num [1:215] 3.37 3.54 3.12 3.46 3.72 ...
 $ x_071  : num [1:215] 3.36 3.53 3.1 3.45 3.71 ...
 $ x_072  : num [1:215] 3.35 3.52 3.09 3.43 3.69 ...
 $ x_073  : num [1:215] 3.34 3.52 3.07 3.41 3.68 ...
 $ x_074  : num [1:215] 3.32 3.51 3.05 3.39 3.66 ...
 $ x_075  : num [1:215] 3.31 3.5 3.03 3.38 3.65 ...
 $ x_076  : num [1:215] 3.29 3.49 3.02 3.35 3.63 ...
 $ x_077  : num [1:215] 3.28 3.48 3 3.33 3.61 ...
 $ x_078  : num [1:215] 3.26 3.47 2.98 3.31 3.59 ...
 $ x_079  : num [1:215] 3.25 3.46 2.96 3.29 3.58 ...
 $ x_080  : num [1:215] 3.23 3.44 2.94 3.27 3.56 ...
 $ x_081  : num [1:215] 3.21 3.43 2.92 3.24 3.54 ...
 $ x_082  : num [1:215] 3.19 3.42 2.9 3.22 3.52 ...
 $ x_083  : num [1:215] 3.17 3.41 2.88 3.2 3.5 ...
 $ x_084  : num [1:215] 3.16 3.4 2.86 3.17 3.48 ...
 $ x_085  : num [1:215] 3.13 3.39 2.83 3.15 3.46 ...
 $ x_086  : num [1:215] 3.11 3.38 2.81 3.12 3.44 ...
 $ x_087  : num [1:215] 3.09 3.36 2.79 3.1 3.41 ...
 $ x_088  : num [1:215] 3.07 3.35 2.77 3.07 3.39 ...
 $ x_089  : num [1:215] 3.05 3.33 2.75 3.05 3.37 ...
 $ x_090  : num [1:215] 3.02 3.32 2.73 3.02 3.34 ...
 $ x_091  : num [1:215] 3 3.3 2.71 3 3.32 ...
 $ x_092  : num [1:215] 2.98 3.29 2.69 2.97 3.3 ...
 $ x_093  : num [1:215] 2.96 3.28 2.67 2.95 3.28 ...
 $ x_094  : num [1:215] 2.94 3.27 2.65 2.93 3.26 ...
 $ x_095  : num [1:215] 2.92 3.25 2.63 2.9 3.24 ...
 $ x_096  : num [1:215] 2.9 3.24 2.61 2.88 3.22 ...
 $ x_097  : num [1:215] 2.88 3.23 2.6 2.86 3.2 ...
 $ x_098  : num [1:215] 2.86 3.21 2.58 2.84 3.18 ...
 $ x_099  : num [1:215] 2.84 3.2 2.56 2.82 3.16 ...
  [list output truncated]
#+end_src

*** mlc_churn (binary)

- churn = 解約 (yes, no)
#+begin_src R :results output code :exports both
data(mlc_churn)
str(mlc_churn)
#+end_src

#+RESULTS:
#+begin_src R

tibble [5,000 × 20] (S3: tbl_df/tbl/data.frame)
 $ state                        : Factor w/ 51 levels "AK","AL","AR",..: 17 36 32 36 37 2 20 25 19 50 ...
 $ account_length               : int [1:5000] 128 107 137 84 75 118 121 147 117 141 ...
 $ area_code                    : Factor w/ 3 levels "area_code_408",..: 2 2 2 1 2 3 3 2 1 2 ...
 $ international_plan           : Factor w/ 2 levels "no","yes": 1 1 1 2 2 2 1 2 1 2 ...
 $ voice_mail_plan              : Factor w/ 2 levels "no","yes": 2 2 1 1 1 1 2 1 1 2 ...
 $ number_vmail_messages        : int [1:5000] 25 26 0 0 0 0 24 0 0 37 ...
 $ total_day_minutes            : num [1:5000] 265 162 243 299 167 ...
 $ total_day_calls              : int [1:5000] 110 123 114 71 113 98 88 79 97 84 ...
 $ total_day_charge             : num [1:5000] 45.1 27.5 41.4 50.9 28.3 ...
 $ total_eve_minutes            : num [1:5000] 197.4 195.5 121.2 61.9 148.3 ...
 $ total_eve_calls              : int [1:5000] 99 103 110 88 122 101 108 94 80 111 ...
 $ total_eve_charge             : num [1:5000] 16.78 16.62 10.3 5.26 12.61 ...
 $ total_night_minutes          : num [1:5000] 245 254 163 197 187 ...
 $ total_night_calls            : int [1:5000] 91 103 104 89 121 118 118 96 90 97 ...
 $ total_night_charge           : num [1:5000] 11.01 11.45 7.32 8.86 8.41 ...
 $ total_intl_minutes           : num [1:5000] 10 13.7 12.2 6.6 10.1 6.3 7.5 7.1 8.7 11.2 ...
 $ total_intl_calls             : int [1:5000] 3 3 5 7 3 6 7 6 4 5 ...
 $ total_intl_charge            : num [1:5000] 2.7 3.7 3.29 1.78 2.73 1.7 2.03 1.92 2.35 3.02 ...
 $ number_customer_service_calls: int [1:5000] 1 1 0 2 3 0 3 0 1 0 ...
 $ churn                        : Factor w/ 2 levels "yes","no": 2 2 2 2 2 2 2 2 2 2 ...
#+end_src

*** oils (multiclass)

#+begin_src R :results output code :exports both
data(oils)
str(oils)
#+end_src

#+RESULTS:
#+begin_src R

tibble [96 × 8] (S3: tbl_df/tbl/data.frame)
 $ palmitic  : num [1:96] 9.7 11.1 11.5 10 12.2 9.8 10.5 10.5 11.5 10 ...
 $ stearic   : num [1:96] 5.2 5 5.2 4.8 5 4.2 5 5 5.2 4.8 ...
 $ oleic     : num [1:96] 31 32.9 35 30.4 31.1 43 31.8 31.8 35 30.4 ...
 $ linoleic  : num [1:96] 52.7 49.8 47.2 53.5 50.5 39.2 51.3 51.3 47.2 53.5 ...
 $ linolenic : num [1:96] 0.4 0.3 0.2 0.3 0.3 2.4 0.4 0.4 0.2 0.3 ...
 $ eicosanoic: num [1:96] 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 ...
 $ eicosenoic: num [1:96] 0.1 0.1 0.1 0.1 0.1 0.5 0.1 0.1 0.1 0.1 ...
 $ class     : Factor w/ 7 levels "corn","olive",..: 4 4 4 4 4 4 4 4 4 4 ...
#+end_src

*** okc (binary)

#+begin_src R :results output code :exports both
data(okc)
str(okc)
#+end_src

#+RESULTS:
#+begin_src R

tibble [59,855 × 6] (S3: tbl_df/tbl/data.frame)
 $ age     : int [1:59855] 22 35 38 23 29 29 32 31 24 37 ...
 $ diet    : chr [1:59855] "strictly anything" "mostly other" "anything" "vegetarian" ...
 $ height  : int [1:59855] 75 70 68 71 66 67 65 65 67 65 ...
 $ location: chr [1:59855] "south san francisco" "oakland" "san francisco" "berkeley" ...
 $ date    : Date[1:59855], format: "2012-06-28" "2012-06-29" ...
 $ Class   : Factor w/ 2 levels "stem","other": 2 2 2 2 2 1 2 2 2 2 ...
#+end_src

*** okc_test (natural language)

#+begin_src R :results output code :exports both
data(okc_text)
str(okc_text)
#+end_src

#+RESULTS:
#+begin_src R

tibble [750 × 10] (S3: tbl_df/tbl/data.frame)
 $ essay0: chr [1:750] "\"twice upon a time there was a boy who died twice and lived happily\never after but that's another chapter liv"| __truncated__ "i'm chill and steady.<br />\ni'm a teacher &amp; musician.<br />\ni like playing outside, dislike school nights"| __truncated__ "ok, i really don't know what (if anything) i'm looking for. impress\nme. i am a singer, songwriter, poet, amate"| __truncated__ "i am a dreamer who is constantly trying to come to terms with\nreality. i have lived in quite a few places in m"| __truncated__ ...
 $ essay1: chr [1:750] "i just graduated from college and have entered the \"what the fuck\nnow?!\" stage of my life.<br />\n<br />\ni'"| __truncated__ "eating, sleeping, and pooping." "raising my son, sometimes doing music, switching careers, having\nfun!" "i just moved back to san francisco from hong kong. i'm working on\nimmersing myself in the city. i am enjoying "| __truncated__ ...
 $ essay2: chr [1:750] "writing. being a friend. drawing. sarcasm. remembering lyrics.\ndancing. sleeping." "picking up/imitating people's mannerisms/voice.<br />\nbeing rational and respectful.<br />\ncooking." "procrastinating. crap..i shouldn't say that, should i? i'll change\nit later. ha ha! i'm good at writing music "| __truncated__ "i've been told i'm good at listening, writing, analyzing dilemmas,\nstory-telling, and photography." ...
 $ essay3: chr [1:750] "that i am playing really loud music or that i have a tad bit more\nass than the average man" "i look like i'm 15, or, \"so, what are you?\"" "my smile, my eyes, my dimples, my little hands. and of course, my\noverall awesomeness!" "my fashion accessories and my desire to have a good time." ...
 $ essay4: chr [1:750] "music:<br />\nerykah badu. . .nina simone. . .camp lo. . .nirvana. . .the coup. .\n.nas. . .biggie. . .lil kim."| __truncated__ "non-fiction.<br />\nchick flicks and trippy shit.<br />\nsurvivor.<br />\ni try hard to understand what's good "| __truncated__ "sushi, indie and horror films, stephen king, neosoul, hip hop,\nr&amp;b, blues, some jazz, some reggae, some classical." "novels by dostoevsky, films: the good, the bad, the ugly, lawrence\nof arabia, pan's labyrinth, in the mood for"| __truncated__ ...
 $ essay5: chr [1:750] "friends. . .books. . .paper to write on. . .pencils. . .music. .\n.poetry" "deserted island:<br />\n<br />\na big knife.<br />\na big pot.<br />\na big drum." "my cell phone<br />\nmy tv (don't watch it, just like hearing the voices. lol.)<br />\nmy son<br />\nmy lap top"| __truncated__ "family, friends, pets, money, the internet, food... oh, it's\nsupposed to be \"things\" only? i guess i didn't "| __truncated__ ...
 $ essay6: chr [1:750] "romance. . .ending capitalism and the state. . .blowing trees. .\n.sex. . . writing. . . painting. . .sex. . .e"| __truncated__ "everything. the way things are going. the intricacies of things and\nthe relative meaningless of everything.<br"| __truncated__ "moving the hell out of oakland!<br />\ngetting that first full time paycheck once i am working in my\nfield.<br"| __truncated__ "how to make my life a paradise on earth" ...
 $ essay7: chr [1:750] "usually a house party in the east bay.<br />\nreading leftist literature lit.<br />\nmaking art.<br />\ntalking"| __truncated__ "making music with others or making love to myself." "at home hanging with my son til his bed time. then maybe a little\ntv or internet til around one am." "having dinner in a savory restaurant and keeping in touch with\nfriends" ...
 $ essay8: chr [1:750] "i have a thing for hammers and sickles. (brownie points if you can\nfigure that out)<br />\n<br />\nand. . . i "| __truncated__ "this website has not done me any good." "on many occasions, i have done that cute thing people do in the\nmovies where you practice talking to someone in the mirror." "is that i don't admit private things in public" ...
 $ essay9: chr [1:750] "you're interested. wanna chill. wanna smoke. wanna talk politics\nand pop culture. . .wanna bash glee<br />\n<b"| __truncated__ "you're a daydreamer... and/or a nightowl.<br />\n<br />\nbut who am i to tell you what you should do? you know "| __truncated__ "you think i sound really cool and you feel like we share alot of\nthe same qualities." "you'd like to know me better and hope we will click." ...
#+end_src

*** parabolic (binary)

#+begin_src R :results output code :exports both
data(parabolic)
str(parabolic)
#+end_src

#+RESULTS:
#+begin_src R

tibble [500 × 3] (S3: tbl_df/tbl/data.frame)
 $ X1   : num [1:500] 3.29 1.47 1.66 1.6 2.17 ...
 $ X2   : num [1:500] 1.661 0.414 0.791 0.276 3.166 ...
 $ class: Factor w/ 2 levels "Class1","Class2": 1 2 2 2 1 1 2 1 2 1 ...
#+end_src

*** pathology (binary)

#+begin_src R :results output code :exports both
data(pathology)
str(pathology)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	344 obs. of  2 variables:
 $ pathology: Factor w/ 2 levels "abnorm","norm": 1 1 1 1 1 1 1 1 1 1 ...
 $ scan     : Factor w/ 2 levels "abnorm","norm": 1 1 1 1 1 1 1 1 1 1 ...
#+end_src

*** pd_speech

#+begin_src R :results output code :exports both
data(pd_speech)
str(pd_speech)
#+end_src

#+RESULTS:
#+begin_src R

tibble [252 × 752] (S3: tbl_df/tbl/data.frame)
 $ gender                        : num [1:252] 1 0 1 0 0 1 1 1 1 1 ...
 $ PPE                           : num [1:252] 0.823 0.416 0.802 0.829 0.831 ...
 $ DFA                           : num [1:252] 0.696 0.794 0.62 0.626 0.779 ...
 $ RPDE                          : num [1:252] 0.567 0.592 0.521 0.537 0.727 ...
 $ meanPeriodPulses              : num [1:252] 0.00822 0.00888 0.00604 0.00391 0.00562 ...
 $ stdDevPeriodPulses            : num [1:252] 7.34e-05 1.85e-03 1.04e-04 4.21e-05 2.02e-03 ...
 $ locPctJitter                  : num [1:252] 0.001963 0.00579 0.002217 0.000757 0.003593 ...
 $ locAbsJitter                  : num [1:252] 1.61e-05 4.96e-05 1.34e-05 2.97e-06 2.10e-05 ...
 $ rapJitter                     : num [1:252] 5.87e-04 1.82e-03 3.23e-04 8.67e-05 1.10e-03 ...
 $ ppq5Jitter                    : num [1:252] 0.001173 0.00269 0.000833 0.00024 0.002057 ...
 $ ddpJitter                     : num [1:252] 0.00176 0.005473 0.000973 0.00026 0.00329 ...
 $ locShimmer                    : num [1:252] 0.071 0.0627 0.041 0.0495 0.1592 ...
 $ locDbShimmer                  : num [1:252] 0.639 0.567 0.354 0.457 1.454 ...
 $ apq3Shimmer                   : num [1:252] 0.0348 0.0304 0.0196 0.0257 0.0773 ...
 $ apq5Shimmer                   : num [1:252] 0.0456 0.0365 0.0261 0.0275 0.1084 ...
 $ apq11Shimmer                  : num [1:252] 0.0626 0.054 0.0414 0.0443 0.1654 ...
 $ ddaShimmer                    : num [1:252] 0.1043 0.0911 0.0588 0.0772 0.232 ...
 $ meanAutoCorrHarmonicity       : num [1:252] 0.977 0.95 0.988 0.992 0.896 ...
 $ meanNoiseToHarmHarmonicity    : num [1:252] 0.02684 0.06874 0.01202 0.00851 0.12841 ...
 $ meanHarmToNoiseHarmonicity    : num [1:252] 19.4 18 20.4 23.5 10.8 ...
 $ minIntensity                  : num [1:252] 66.7 75.7 75.1 70.9 57.4 ...
 $ maxIntensity                  : num [1:252] 73.6 80.9 78.4 78.9 65.4 ...
 $ meanIntensity                 : num [1:252] 70.7 79 77 75.6 62.4 ...
 $ f1                            : num [1:252] 551 833 683 712 504 ...
 $ f2                            : num [1:252] 1027 1203 1153 1273 1221 ...
 $ f3                            : num [1:252] 2396 3178 2979 2057 2071 ...
 $ f4                            : num [1:252] 3611 4000 3868 3203 3235 ...
 $ b1                            : num [1:252] 107 293 123 106 652 ...
 $ b2                            : num [1:252] 74.8 208.3 85.5 79.3 683.6 ...
 $ b3                            : num [1:252] 218 323 169 2519 715 ...
 $ b4                            : num [1:252] 233 525 516 325 561 ...
 $ GQ_prc5_95                    : num [1:252] 0.803 0.898 1 1 0.914 ...
 $ GQ_std_cycle_open             : num [1:252] 17.49 115.31 9.05 9.81 87.72 ...
 $ GQ_std_cycle_closed           : num [1:252] 2.81 18.22 0 0 10.76 ...
 $ GNE_mean                      : num [1:252] 1.015 0.841 0.834 1.631 0.841 ...
 $ GNE_std                       : num [1:252] 0.2142 0.1876 0.0799 0.3902 0.1455 ...
 $ GNE_SNR_TKEO                  : num [1:252] 0.1091 0.1477 0.1553 0.0672 0.1702 ...
 $ GNE_SNR_SEO                   : num [1:252] 1257257 1851946 1438735 1440965 1532406 ...
 $ GNE_NSR_TKEO                  : num [1:252] 1.59 1.67 1.65 1.47 1.69 ...
 $ GNE_NSR_SEO                   : num [1:252] 3.04 3.03 3.02 3.08 3.06 ...
 $ VFER_mean                     : num [1:252] 0.000479 0.000253 0.001704 0.003726 0.001358 ...
 $ VFER_std                      : num [1:252] 0.000274 0.000218 0.000507 0.001731 0.003217 ...
 $ VFER_entropy                  : num [1:252] 0.839 0.61 3.451 10.038 3.071 ...
 $ VFER_SNR_TKEO                 : num [1:252] 230.4 60.3 51.1 99.4 101.7 ...
 $ VFER_SNR_SEO                  : num [1:252] 407.4 141.9 392 397.5 98.5 ...
 $ VFER_NSR_TKEO                 : num [1:252] 1.28 1.23 1.23 1.32 1.25 ...
 $ VFER_NSR_SEO                  : num [1:252] 1.32 1.29 1.35 1.37 1.21 ...
 $ IMF_SNR_SEO                   : num [1:252] 45.251 82.136 13.799 0.417 39.002 ...
 $ IMF_SNR_TKEO                  : num [1:252] 7.9692 5.1628 1.5484 0.0901 1.3481 ...
 $ IMF_SNR_entropy               : num [1:252] 28.959 31.376 6.983 0.853 12.213 ...
 $ IMF_NSR_SEO                   : num [1:252] 0.256 0.272 0.125 0.137 0.211 ...
 $ IMF_NSR_TKEO                  : num [1:252] 5.63 5.58 10.92 35.8 8.75 ...
 $ IMF_NSR_entropy               : num [1:252] 0.192 0.198 0.135 0.137 0.182 ...
 $ mean_Log_energy               : num [1:252] 9.28 9.93 9.89 9.67 9.37 ...
 $ mean_MFCC_0th_coef            : num [1:252] 11.7 14.1 16.6 12.3 14.7 ...
 $ mean_MFCC_1st_coef            : num [1:252] 8.21 6.64 6.09 6.74 4.43 ...
 $ mean_MFCC_2nd_coef            : num [1:252] 2.869 2.909 -0.432 0.498 3.326 ...
 $ mean_MFCC_3rd_coef            : num [1:252] -0.309 0.836 1.041 -2.216 -1.87 ...
 $ mean_MFCC_4th_coef            : num [1:252] 0.435 -1.689 -1.882 -1.762 -1.952 ...
 $ mean_MFCC_5th_coef            : num [1:252] -1.57 -0.969 -2.724 -1.215 0.392 ...
 $ mean_MFCC_6th_coef            : num [1:252] -1.56 -0.6 -1.14 -2.25 -1.29 ...
 $ mean_MFCC_7th_coef            : num [1:252] 0.4265 0.8811 0.8524 0.3172 -0.0881 ...
 $ mean_MFCC_8th_coef            : num [1:252] 0.6196 1.5336 0.0925 1.323 0.6159 ...
 $ mean_MFCC_9th_coef            : num [1:252] 0.1647 -0.0641 0.9851 -1.2218 -1.1646 ...
 $ mean_MFCC_10th_coef           : num [1:252] 0.63 -1.047 -0.613 -0.937 -0.687 ...
 $ mean_MFCC_11th_coef           : num [1:252] 0.113 -0.872 -1.08 -0.478 -1.556 ...
 $ mean_MFCC_12th_coef           : num [1:252] -0.5713 0.0172 0.4279 -0.0895 -0.7913 ...
 $ mean_delta_log_energy         : num [1:252] -5.91e-04 1.53e-03 8.03e-05 -3.50e-03 -6.45e-03 ...
 $ mean_0th_delta                : num [1:252] -0.003648 -0.006824 0.000593 -0.010634 -0.00694 ...
 $ mean_1st_delta                : num [1:252] -0.00115 -0.00172 -0.00221 0.00256 -0.00728 ...
 $ mean_2nd_delta                : num [1:252] 0.00338 0.00645 0.00438 0.00388 0.00233 ...
 $ mean_3rd_delta                : num [1:252] -2.89e-04 5.94e-04 1.10e-04 -2.17e-06 1.25e-03 ...
 $ mean_4th_delta                : num [1:252] -0.0005 -0.001445 -0.000689 0.001075 -0.003117 ...
 $ mean_5th_delta                : num [1:252] -0.000543 0.001018 -0.001211 -0.000138 0.00282 ...
 $ mean_6th_delta                : num [1:252] 6.86e-04 1.95e-03 6.32e-04 -1.31e-03 9.87e-06 ...
 $ mean_7th_delta                : num [1:252] 0.000618 -0.002802 -0.000874 0.000407 -0.000266 ...
 $ mean_8th_delta                : num [1:252] 0.000673 -0.002118 0.000747 -0.000263 0.002366 ...
 $ mean_9th_delta                : num [1:252] -0.000494 0.002002 0.00111 0.00213 -0.000315 ...
 $ mean_10th_delta               : num [1:252] -0.000101 -0.001611 -0.000585 0.002704 0.001459 ...
 $ mean_11th_delta               : num [1:252] 0.00132 -0.001233 0.000134 -0.000799 0.00243 ...
 $ mean_12th_delta               : num [1:252] 0.000282 -0.001075 0.00133 -0.00005 -0.001658 ...
 $ mean_delta_delta_log_energy   : num [1:252] 2.19e-04 -8.21e-05 -5.44e-06 1.66e-04 -1.43e-04 ...
 $ mean_delta_delta_0th          : num [1:252] -2.61e-04 -2.09e-04 -1.64e-05 -1.29e-04 -3.83e-04 ...
 $ mean_1st_delta_delta          : num [1:252] 4.07e-04 -2.73e-04 1.75e-04 -1.55e-04 -3.27e-05 ...
 $ mean_2nd_delta_delta          : num [1:252] 0.00047 0.000106 -0.000545 -0.000154 0.000322 ...
 $ mean_3rd_delta_delta          : num [1:252] -4.51e-04 1.29e-04 4.82e-05 9.82e-05 2.42e-04 ...
 $ mean_4th_delta_delta          : num [1:252] -2.43e-04 1.65e-04 1.93e-04 -2.55e-04 6.73e-05 ...
 $ mean_5th_delta_delta          : num [1:252] 7.08e-05 -5.77e-05 -1.57e-04 -8.74e-05 1.97e-04 ...
 $ mean_6th_delta_delta          : num [1:252] -4.08e-04 -1.01e-04 -2.64e-04 -3.72e-05 2.54e-04 ...
 $ mean_7th_delta_delta          : num [1:252] -2.83e-04 1.58e-04 2.79e-04 7.31e-05 1.95e-05 ...
 $ mean_8th_delta_delta          : num [1:252] 1.07e-04 9.06e-05 -1.48e-04 9.80e-05 2.36e-04 ...
 $ mean_9th_delta_delta          : num [1:252] 1.88e-04 1.59e-04 5.00e-05 2.45e-05 2.24e-04 ...
 $ mean_10th_delta_delta         : num [1:252] -4.26e-05 2.73e-04 -1.03e-04 -2.02e-04 3.81e-04 ...
 $ mean_11th_delta_delta         : num [1:252] 1.49e-04 6.84e-05 -8.47e-05 -2.46e-04 4.69e-05 ...
 $ mean_12th_delta_delta         : num [1:252] -1.27e-04 -8.65e-05 2.30e-05 -2.36e-04 -5.54e-05 ...
 $ std_Log_energy                : num [1:252] 0.366 0.243 0.156 0.407 0.432 ...
 $ std_MFCC_0th_coef             : num [1:252] 0.956 1.018 0.618 1.137 0.698 ...
 $ std_MFCC_1st_coef             : num [1:252] 0.575 0.584 0.403 0.485 0.48 ...
 $ std_MFCC_2nd_coef             : num [1:252] 0.723 0.558 0.389 0.463 0.476 ...
  [list output truncated]
#+end_src

*** scat

#+begin_src R :results output code :exports both
data(scat)
str(scat)
#+end_src

#+RESULTS:
#+begin_src R

tibble [110 × 19] (S3: tbl_df/tbl/data.frame)
 $ Species  : Factor w/ 3 levels "bobcat","coyote",..: 2 2 1 2 2 2 1 1 1 1 ...
 $ Month    : Factor w/ 9 levels "April","August",..: 4 4 4 4 4 4 4 4 4 4 ...
 $ Year     : int [1:110] 2012 2012 2012 2012 2012 2012 2012 2012 2012 2012 ...
 $ Site     : Factor w/ 2 levels "ANNU","YOLA": 2 2 2 2 2 2 1 1 1 1 ...
 $ Location : Factor w/ 3 levels "edge","middle",..: 1 1 2 2 1 1 3 3 3 2 ...
 $ Age      : int [1:110] 5 3 3 5 5 5 1 3 5 5 ...
 $ Number   : int [1:110] 2 2 2 2 4 3 5 7 2 1 ...
 $ Length   : num [1:110] 9.5 14 9 8.5 8 9 6 5.5 11 20.5 ...
 $ Diameter : num [1:110] 25.7 25.4 18.8 18.1 20.7 21.2 15.7 21.9 17.5 18 ...
 $ Taper    : num [1:110] 41.9 37.1 16.5 24.7 20.1 28.5 8.2 19.3 29.1 21.4 ...
 $ TI       : num [1:110] 1.63 1.46 0.88 1.36 0.97 1.34 0.52 0.88 1.66 1.19 ...
 $ Mass     : num [1:110] 15.9 17.6 8.4 7.4 25.4 ...
 $ d13C     : num [1:110] -26.9 -29.6 -28.7 -20.1 -23.2 ...
 $ d15N     : num [1:110] 6.94 9.87 8.52 5.79 7.01 8.28 4.2 3.89 7.34 6.06 ...
 $ CN       : num [1:110] 8.5 11.3 8.1 11.5 10.6 9 5.4 5.6 5.8 7.7 ...
 $ ropey    : int [1:110] 0 0 1 1 0 1 1 0 0 1 ...
 $ segmented: int [1:110] 0 0 1 0 1 0 1 1 1 1 ...
 $ flat     : int [1:110] 0 0 0 0 0 0 0 0 0 0 ...
 $ scrape   : int [1:110] 0 0 1 0 0 0 1 0 0 0 ...
#+end_src

*** solubility_test (regression)

#+begin_src R :results output code :exports both
data(solubility_test)
str(solubility_test)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	316 obs. of  2 variables:
 $ solubility: num  0.93 0.85 0.81 0.74 0.61 0.58 0.57 0.56 0.52 0.45 ...
 $ prediction: num  0.368 -0.15 -0.505 0.54 -0.479 ...
#+end_src

*** stackoverflow

- Annual Stack Overflow Developer Survey Data
#+begin_src R :results output code :exports both
data(stackoverflow)
str(stackoverflow)
#+end_src

#+RESULTS:
#+begin_src R

tibble [5,594 × 21] (S3: tbl_df/tbl/data.frame)
 $ Country                             : Factor w/ 5 levels "Canada","Germany",..: 4 5 5 2 3 5 5 2 5 2 ...
 $ Salary                              : num [1:5594] 100000 130000 175000 64516 6636 ...
 $ YearsCodedJob                       : int [1:5594] 20 20 16 4 1 1 13 4 7 17 ...
 $ OpenSource                          : num [1:5594] 0 1 0 0 0 0 0 1 1 1 ...
 $ Hobby                               : num [1:5594] 1 1 1 0 1 1 1 0 1 1 ...
 $ CompanySizeNumber                   : num [1:5594] 5000 1000 10000 1000 5000 20 20 5000 20 20 ...
 $ Remote                              : Factor w/ 2 levels "Remote","Not remote": 1 1 2 2 2 2 2 2 2 2 ...
 $ CareerSatisfaction                  : int [1:5594] 8 9 7 9 5 8 7 7 8 9 ...
 $ Data_scientist                      : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ...
 $ Database_administrator              : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ...
 $ Desktop_applications_developer      : num [1:5594] 0 0 0 0 0 0 0 0 1 1 ...
 $ Developer_with_stats_math_background: num [1:5594] 0 0 0 0 0 0 0 0 0 1 ...
 $ DevOps                              : num [1:5594] 0 1 0 0 0 0 0 0 0 0 ...
 $ Embedded_developer                  : num [1:5594] 1 1 0 0 0 0 0 0 0 0 ...
 $ Graphic_designer                    : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ...
 $ Graphics_programming                : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ...
 $ Machine_learning_specialist         : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ...
 $ Mobile_developer                    : num [1:5594] 0 0 0 0 0 0 0 0 1 0 ...
 $ Quality_assurance_engineer          : num [1:5594] 0 1 0 0 0 0 0 0 0 0 ...
 $ Systems_administrator               : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ...
 $ Web_developer                       : num [1:5594] 0 1 1 1 1 1 1 1 0 0 ...
#+end_src

*** two_class_dat (binary)

#+begin_src R :results output code :exports both
data(two_class_dat)
str(two_class_dat)
#+end_src

#+RESULTS:
#+begin_src R

tibble [791 × 3] (S3: tbl_df/tbl/data.frame)
 $ A    : num [1:791] 2.07 2.02 1.69 3.43 2.88 ...
 $ B    : num [1:791] 1.63 1.04 1.37 1.98 1.98 ...
 $ Class: Factor w/ 2 levels "Class1","Class2": 1 1 2 2 1 2 2 2 1 2 ...
#+end_src

*** two_class_example (binary)

#+begin_src R :results output code :exports both
data(two_class_example)
str(two_class_example)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	500 obs. of  4 variables:
 $ truth    : Factor w/ 2 levels "Class1","Class2": 2 1 2 1 2 1 1 1 2 2 ...
 $ Class1   : num  0.00359 0.67862 0.11089 0.73516 0.01624 ...
 $ Class2   : num  0.996 0.321 0.889 0.265 0.984 ...
 $ predicted: Factor w/ 2 levels "Class1","Class2": 2 1 2 1 2 1 1 1 2 2 ...
#+end_src

*** wa_churn (binary)

#+begin_src R :results output code :exports both
data(wa_churn)
str(wa_churn)
#+end_src

#+RESULTS:
#+begin_src R

tibble [7,043 × 20] (S3: tbl_df/tbl/data.frame)
 $ churn            : Factor w/ 2 levels "Yes","No": 2 2 1 2 1 1 2 2 1 2 ...
 $ female           : num [1:7043] 1 0 0 0 1 1 0 1 1 0 ...
 $ senior_citizen   : int [1:7043] 0 0 0 0 0 0 0 0 0 0 ...
 $ partner          : num [1:7043] 1 0 0 0 0 0 0 0 1 0 ...
 $ dependents       : num [1:7043] 0 0 0 0 0 0 1 0 0 1 ...
 $ tenure           : int [1:7043] 1 34 2 45 2 8 22 10 28 62 ...
 $ phone_service    : num [1:7043] 0 1 1 0 1 1 1 0 1 1 ...
 $ multiple_lines   : Factor w/ 3 levels "No","No phone service",..: 2 1 1 2 1 3 3 2 3 1 ...
 $ internet_service : Factor w/ 3 levels "DSL","Fiber optic",..: 1 1 1 1 2 2 2 1 2 1 ...
 $ online_security  : Factor w/ 3 levels "No","No internet service",..: 1 3 3 3 1 1 1 3 1 3 ...
 $ online_backup    : Factor w/ 3 levels "No","No internet service",..: 3 1 3 1 1 1 3 1 1 3 ...
 $ device_protection: Factor w/ 3 levels "No","No internet service",..: 1 3 1 3 1 3 1 1 3 1 ...
 $ tech_support     : Factor w/ 3 levels "No","No internet service",..: 1 1 1 3 1 1 1 1 3 1 ...
 $ streaming_tv     : Factor w/ 3 levels "No","No internet service",..: 1 1 1 1 1 3 3 1 3 1 ...
 $ streaming_movies : Factor w/ 3 levels "No","No internet service",..: 1 1 1 1 1 3 1 1 3 1 ...
 $ contract         : Factor w/ 3 levels "Month-to-month",..: 1 2 1 2 1 1 1 1 1 2 ...
 $ paperless_billing: num [1:7043] 1 0 1 0 1 1 1 0 1 0 ...
 $ payment_method   : Factor w/ 4 levels "Bank transfer (automatic)",..: 3 4 4 1 3 3 2 4 3 1 ...
 $ monthly_charges  : num [1:7043] 29.9 57 53.9 42.3 70.7 ...
 $ total_charges    : num [1:7043] 29.9 1889.5 108.2 1840.8 151.7 ...
#+end_src

** nycflights13 package
*** List

- 2013 年にニューヨークから出航した航空機のリスト
  - EWR: ニューアーク・リバティー国際空港
  - JFK: ジョン・ F ・ケネディ国際空港
  - LGA: ラガーディア空港
- 主に遅延の原因を分析するためのデータ

- 1 つのパッケージにいくつかのデータセットが含まれている
  - =flights=: all flights that departed from NYC in 2013
  - =weather=: hourly meterological data for each airport
  - =planes=: construction information about each plane
  - =airports=: airport names and locations
  - =airlines=: translation between two letter carrier codes and names

#+begin_src R :rownames yes :exports both
pacman::p_data(nycflights13)
#+end_src

#+RESULTS:
|   | Data     | Description         |
|---+----------+---------------------|
| 1 | airlines | Airline names.      |
| 2 | airports | Airport metadata    |
| 3 | flights  | Flights data        |
| 4 | planes   | Plane metadata.     |
| 5 | weather  | Hourly weather data |

*** flights

#+begin_src R :exports both :results code output
str(nycflights13::flights)
#+end_src

#+RESULTS:
#+begin_src R
tibble [336,776 × 19] (S3: tbl_df/tbl/data.frame)
 $ year          : int [1:336776] 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...
 $ month         : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ...
 $ day           : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ...
 $ dep_time      : int [1:336776] 517 533 542 544 554 554 555 557 557 558 ...
 $ sched_dep_time: int [1:336776] 515 529 540 545 600 558 600 600 600 600 ...
 $ dep_delay     : num [1:336776] 2 4 2 -1 -6 -4 -5 -3 -3 -2 ...
 $ arr_time      : int [1:336776] 830 850 923 1004 812 740 913 709 838 753 ...
 $ sched_arr_time: int [1:336776] 819 830 850 1022 837 728 854 723 846 745 ...
 $ arr_delay     : num [1:336776] 11 20 33 -18 -25 12 19 -14 -8 8 ...
 $ carrier       : chr [1:336776] "UA" "UA" "AA" "B6" ...
 $ flight        : int [1:336776] 1545 1714 1141 725 461 1696 507 5708 79 301 ...
 $ tailnum       : chr [1:336776] "N14228" "N24211" "N619AA" "N804JB" ...
 $ origin        : chr [1:336776] "EWR" "LGA" "JFK" "JFK" ...
 $ dest          : chr [1:336776] "IAH" "IAH" "MIA" "BQN" ...
 $ air_time      : num [1:336776] 227 227 160 183 116 150 158 53 140 138 ...
 $ distance      : num [1:336776] 1400 1416 1089 1576 762 ...
 $ hour          : num [1:336776] 5 5 5 5 6 5 6 6 6 6 ...
 $ minute        : num [1:336776] 15 29 40 45 0 58 0 0 0 0 ...
 $ time_hour     : POSIXct[1:336776], format: "2013-01-01 05:00:00" "2013-01-01 05:00:00" ...
#+end_src

*** weather

#+begin_src R :exports both :results code output
str(nycflights13::weather)
#+end_src

#+RESULTS:
#+begin_src R
tibble [26,115 × 15] (S3: tbl_df/tbl/data.frame)
 $ origin    : chr [1:26115] "EWR" "EWR" "EWR" "EWR" ...
 $ year      : int [1:26115] 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...
 $ month     : int [1:26115] 1 1 1 1 1 1 1 1 1 1 ...
 $ day       : int [1:26115] 1 1 1 1 1 1 1 1 1 1 ...
 $ hour      : int [1:26115] 1 2 3 4 5 6 7 8 9 10 ...
 $ temp      : num [1:26115] 39 39 39 39.9 39 ...
 $ dewp      : num [1:26115] 26.1 27 28 28 28 ...
 $ humid     : num [1:26115] 59.4 61.6 64.4 62.2 64.4 ...
 $ wind_dir  : num [1:26115] 270 250 240 250 260 240 240 250 260 260 ...
 $ wind_speed: num [1:26115] 10.36 8.06 11.51 12.66 12.66 ...
 $ wind_gust : num [1:26115] NA NA NA NA NA NA NA NA NA NA ...
 $ precip    : num [1:26115] 0 0 0 0 0 0 0 0 0 0 ...
 $ pressure  : num [1:26115] 1012 1012 1012 1012 1012 ...
 $ visib     : num [1:26115] 10 10 10 10 10 10 10 10 10 10 ...
 $ time_hour : POSIXct[1:26115], format: "2013-01-01 01:00:00" "2013-01-01 02:00:00" ...
#+end_src

*** planes

#+begin_src R :exports both :results code output
str(nycflights13::planes)
#+end_src

#+RESULTS:
#+begin_src R
tibble [3,322 × 9] (S3: tbl_df/tbl/data.frame)
 $ tailnum     : chr [1:3322] "N10156" "N102UW" "N103US" "N104UW" ...
 $ year        : int [1:3322] 2004 1998 1999 1999 2002 1999 1999 1999 1999 1999 ...
 $ type        : chr [1:3322] "Fixed wing multi engine" "Fixed wing multi engine" "Fixed wing multi engine" "Fixed wing multi engine" ...
 $ manufacturer: chr [1:3322] "EMBRAER" "AIRBUS INDUSTRIE" "AIRBUS INDUSTRIE" "AIRBUS INDUSTRIE" ...
 $ model       : chr [1:3322] "EMB-145XR" "A320-214" "A320-214" "A320-214" ...
 $ engines     : int [1:3322] 2 2 2 2 2 2 2 2 2 2 ...
 $ seats       : int [1:3322] 55 182 182 182 55 182 182 182 182 182 ...
 $ speed       : int [1:3322] NA NA NA NA NA NA NA NA NA NA ...
 $ engine      : chr [1:3322] "Turbo-fan" "Turbo-fan" "Turbo-fan" "Turbo-fan" ...
#+end_src

*** airports

#+begin_src R :exports both :results code output
data(airports)
attributes(airports) <- NULL
str(airports)
#+end_src

#+RESULTS:
#+begin_src R
List of 8
 $ : chr [1:1458] "04G" "06A" "06C" "06N" ...
 $ : chr [1:1458] "Lansdowne Airport" "Moton Field Municipal Airport" "Schaumburg Regional" "Randall Airport" ...
 $ : num [1:1458] 41.1 32.5 42 41.4 31.1 ...
 $ : num [1:1458] -80.6 -85.7 -88.1 -74.4 -81.4 ...
 $ : num [1:1458] 1044 264 801 523 11 ...
 $ : num [1:1458] -5 -6 -6 -5 -5 -5 -5 -5 -5 -8 ...
 $ : chr [1:1458] "A" "A" "A" "A" ...
 $ : chr [1:1458] "America/New_York" "America/Chicago" "America/Chicago" "America/New_York" ...
#+end_src

*** airlnes

#+begin_src R :exports both :results code output
str(nycflights13::airlines)
#+end_src

#+RESULTS:
#+begin_src R
tibble [16 × 2] (S3: tbl_df/tbl/data.frame)
 $ carrier: chr [1:16] "9E" "AA" "AS" "B6" ...
 $ name   : chr [1:16] "Endeavor Air Inc." "American Airlines Inc." "Alaska Airlines Inc." "JetBlue Airways" ...
#+end_src

** faraway package
*** List

- Julian Faraway の著書をサポートするパッケージ
#+begin_src R :rownames yes :exports both
pacman::p_data(faraway)
#+end_src

#+RESULTS:
|     | Data         | Description                                                               |
|-----+--------------+---------------------------------------------------------------------------|
|   1 | aatemp       | Annual mean temperatures in Ann Arbor, Michigan                           |
|   2 | abrasion     | Wear on materials according to type, run and position                     |
|   3 | aflatoxin    | aflatoxin dosage and liver cancer in lab animals                          |
|   4 | africa       | miltary coups and politics in sub-Saharan Africa                          |
|   5 | airpass      | Airline passengers                                                        |
|   6 | alfalfa      | Effects of seed inoculum, irrigation and shade on alfalfa yield           |
|   7 | amlxray      | Match pair study for AML and Xray link                                    |
|   8 | anaesthetic  | Time in minutes to eye opening after reversal of anaesthetic.             |
|   9 | babyfood     | Respiratory disease rates of babies fed in different ways                 |
|  10 | beetle       | Beetles exposed to fumigant                                               |
|  11 | bliss        | Insect mortality due to insecticide                                       |
|  12 | breaking     | Breaking strength of materials                                            |
|  13 | broccoli     | Broccoli weight variation                                                 |
|  14 | butterfat    | Butterfat content of milk by breed                                        |
|  15 | cathedral    | Cathedral nave heights and lengths in England                             |
|  16 | cheddar      | Taste of Cheddar cheese                                                   |
|  17 | chicago      | Chicago insurance redlining                                               |
|  18 | chiczip      | Chicago zip codes north-south                                             |
|  19 | chmiss       | Chicago insurance redlining                                               |
|  20 | choccake     | Chocolate cake experiment with split plot design                          |
|  21 | chredlin     | Chicago insurance redlining                                               |
|  22 | clot         | Blood clotting times                                                      |
|  23 | cmob         | Social class mobility from 1971 to 1981 in the UK                         |
|  24 | cns          | Malformations of the central nervous system                               |
|  25 | coagulation  | Blood coagulation times by diet                                           |
|  26 | composite    | Strength of a thermoplastic composite depending on two factors            |
|  27 | cornnit      | Corn yields from nitrogen application                                     |
|  28 | corrosion    | Corrosion loss in Cu-Ni alloys                                            |
|  29 | cpd          | Projected and actual sales of 20 consumer products                        |
|  30 | crawl        | Crawling babies by month                                                  |
|  31 | ctsib        | Effects of surface and vision on balance.                                 |
|  32 | death        | Death penalty in Florida 1977                                             |
|  33 | debt         | psychology of debt                                                        |
|  34 | denim        | Denim wastage by supplier                                                 |
|  35 | diabetes     | Diabetes and obesity, cardiovascular risk factors                         |
|  36 | dicentric    | Radiation dose effects on chromosomal abnormality                         |
|  37 | divusa       | Divorce in the USA 1920-1996                                              |
|  38 | drugpsy      | Choice of drug treatment for psychiatry patients                          |
|  39 | dvisits      | Doctor visits in Australia                                                |
|  40 | eco          | Ecological regression example                                             |
|  41 | eggprod      | Treatment and block effects on egg production                             |
|  42 | eggs         | Nested data on lab testing of eggs                                        |
|  43 | epilepsy     | Epileptic seizures in clinical trial of drug                              |
|  44 | esdcomp      | Complaints about emergency room doctors                                   |
|  45 | exa          | Simulated non-parametric regression data                                  |
|  46 | exb          | Simulated non-parametric regression data                                  |
|  47 | eyegrade     | grading of eye pairs for distance vision                                  |
|  48 | fat          | Percentage of Body Fat and Body Measurements                              |
|  49 | femsmoke     | Mortality due to smoking according age group in women                     |
|  50 | fortune      | Billionaires' wealth and age                                              |
|  51 | fpe          | 1981 French Presidential Election                                         |
|  52 | fruitfly     | Longevity of fruiflies depending on sexual activity and thorax length     |
|  53 | gala         | Species diversity on the Galapagos Islands                                |
|  54 | gammaray     | Xray decay from a gamma ray burst                                         |
|  55 | gavote       | Undercounted votes in Georgia in 2000 presidential election               |
|  56 | globwarm     | Northern Hemisphere temperatures and climate proxies in the last millenia |
|  57 | haireye      | Hair and eye color                                                        |
|  58 | happy        | love, work and happiness                                                  |
|  59 | hemoglobin   | Treatment of insulin dependent diabetic children                          |
|  60 | hips         | Ankylosing Spondylitis                                                    |
|  61 | hormone      | Hormone concentrations in gay and straight men                            |
|  62 | hprice       | Housing prices in US cities 86-94                                         |
|  63 | hsb          | Career choice of high school students                                     |
|  64 | infmort      | Infant mortality according to income and region                           |
|  65 | insulgas     | Effects of insulation on gas consumption                                  |
|  66 | irrigation   | Irrigation methods in an agricultural field trial                         |
|  67 | jsp          | Junior School Project                                                     |
|  68 | kanga        | Kangaroo skull measurements                                               |
|  69 | lawn         | Cut-off times of lawnmowers                                               |
|  70 | leafblotch   | Leaf blotch on barley                                                     |
|  71 | leafburn     | Data on the burning time of samples of tobacco leaves                     |
|  72 | mammalsleep  | Sleep in Mammals: Ecological and Constitutional Correlates                |
|  73 | manilius     | Mayer's 1750 data on the Manilius crater on the moon                      |
|  74 | meatspec     | Meat spectrometry to determine fat content                                |
|  75 | melanoma     | Melanoma by type and location                                             |
|  76 | motorins     | Third party motor insurance claims in Sweden in 1977                      |
|  77 | neighbor     | Questionnaire study of neighborly help                                    |
|  78 | nels88       | National Education Longitudinal Study of 1988                             |
|  79 | nepali       | Nepali child heath study                                                  |
|  80 | nes96        | US 1996 national election study                                           |
|  81 | newhamp      | New Hampshire Democratic Party Primary 2008                               |
|  82 | oatvar       | Yields of oat varieties planted in blocks                                 |
|  83 | odor         | Odor of chemical by production settings                                   |
|  84 | ohio         | Ohio Children Wheeze Status                                               |
|  85 | orings       | Spache Shuttle Challenger O-rings                                         |
|  86 | ozone        | Ozone in LA in 1976                                                       |
|  87 | parstum      | Marijuana and parent alcohol and drug use                                 |
|  88 | peanut       | Carbon dioxide effects on peanut oil extraction                           |
|  89 | penicillin   | Penicillin yield by block and treatment                                   |
|  90 | phbirths     | Birth weights in Philadelphia                                             |
|  91 | pima         | Diabetes survey on Pima Indians                                           |
|  92 | pipeline     | NIST data on ultrasonic measurements of defects in the Alaska pipeline    |
|  93 | pneumo       | Pneumonoconiosis in coal miners                                           |
|  94 | potuse       | Marijuana usage by youth                                                  |
|  95 | prostate     | Prostate cancer surgery                                                   |
|  96 | psid         | Panel Study of Income Dynamics subset                                     |
|  97 | pulp         | Brightness of paper pulp depending on shift operator                      |
|  98 | punting      | Leg strength and punting                                                  |
|  99 | pvc          | Production of PVC by operator and resin railcar                           |
| 100 | pyrimidines  | Activity in pyrimidines                                                   |
| 101 | rabbit       | Rabbit weight gain by diet and litter                                     |
| 102 | ratdrink     | Rat growth weights affected by additives                                  |
| 103 | rats         | Effect of toxic agents on rats                                            |
| 104 | resceram     | Shape and plate effects on current noise in resistors                     |
| 105 | salmonella   | Salmonella reverse mutagenicity assay                                     |
| 106 | sat          | School expenditure and test scores from USA in 1994-95                    |
| 107 | savings      | Savings rates in 50 countries                                             |
| 108 | seatpos      | Car seat position depending driver size                                   |
| 109 | seeds        | Germination of seeds depending on moisture and covering                   |
| 110 | semicond     | Semiconductor split-plot experiment                                       |
| 111 | sexab        | Post traumatic stress disorder in abused adult females                    |
| 112 | sexfun       | Marital sex ratings                                                       |
| 113 | snail        | Snail production                                                          |
| 114 | solder       | Solder skips in printing circuit boards                                   |
| 115 | sono         | Sonoluminescence                                                          |
| 116 | soybean      | Germination failures for soybean seeds                                    |
| 117 | spector      | Teaching methods in Economics                                             |
| 118 | speedo       | Speedometer cable shrinkage                                               |
| 119 | star         | Star temperatures and light intensites                                    |
| 120 | stat500      | Marks in a statistics class                                               |
| 121 | stepping     | Stepping and effect on heart rate                                         |
| 122 | strongx      | Strong interaction experiment data                                        |
| 123 | suicide      | Suicide method data from the UK                                           |
| 124 | teengamb     | Study of teenage gambling in Britain                                      |
| 125 | toenail      | Toenail infection treatment study                                         |
| 126 | troutegg     | Survival of trout eggs depending on time and location                     |
| 127 | truck        | Truck leaf spring experiment                                              |
| 128 | turtle       | Incubation temperature and the sex of turtles                             |
| 129 | tvdoctor     | Life, TVs and Doctors                                                     |
| 130 | twins        | Twin IQs from Burt                                                        |
| 131 | uncviet      | UNC student opinions about the Vietnam War                                |
| 132 | uswages      | Weekly wages of US male workers in 1988                                   |
| 133 | vision       | Acuity of vision in response to light flash                               |
| 134 | wafer        | resitivity of wafer in semiconductor experiment                           |
| 135 | wavesolder   | Defects in a wave soldering process                                       |
| 136 | wbca         | Wisconsin breast cancer database                                          |
| 137 | wcgs         | Western Collaborative Group Study                                         |
| 138 | weldstrength | welding strength DOE                                                      |
| 139 | wheat        | Insect damage to wheat by variety                                         |
| 140 | worldcup     | Data on players from the 2010 World Cup                                   |

*** gala

- ガラパゴス諸島の 30 の島ごとに見つかった植物種の数と島の特徴量
- [[https://stats.biopapyrus.jp/glm/poisson-regression.html][ポアソン回帰@biostatistics]]
#+begin_src R :results output code :exports both
data(gala)
str(gala)
#+end_src

#+RESULTS:
#+begin_src R

'data.frame':	30 obs. of  7 variables:
 $ Species  : num  58 31 3 25 2 18 24 10 8 2 ...
 $ Endemics : num  23 21 3 9 1 11 0 7 4 2 ...
 $ Area     : num  25.09 1.24 0.21 0.1 0.05 ...
 $ Elevation: num  346 109 114 46 77 119 93 168 71 112 ...
 $ Nearest  : num  0.6 0.6 2.8 1.9 1.9 8 6 34.1 0.4 2.6 ...
 $ Scruz    : num  0.6 26.3 58.7 47.4 1.9 ...
 $ Adjacent : num  1.84 572.33 0.78 0.18 903.82 ...
#+end_src

* Simulation Data
** Binary Task

#+begin_src R :exports both
data_binary <- function(n = 1000, p = 5, seed = 1983) {
  set.seed(seed)
  x <- matrix(rnorm(n*p), n*p/p)
  coef <- rnorm(p)
  z <- x %*% coef
  prob <- 1 / (1 + exp(-z)) # inv-logit
  y <- rbinom(n, 1, prob) # prob can be vector
  mat <- cbind(y, x)
  colnames(mat) <- c("y", paste0("x", 1:p))
  tibble::as_tibble(mat) %>% dplyr::mutate(y = as.factor(y))
}

data_binary() %>% head() %>% mutate_if(is.numeric, round, digits=3)
#+end_src

#+RESULTS:
| y |     x1 |     x2 |     x3 |     x4 |     x5 |
|---+--------+--------+--------+--------+--------|
| 1 | -0.017 |  0.469 | -0.636 |  0.655 |  0.151 |
| 0 | -0.784 | -1.127 | -1.665 | -0.374 |  0.296 |
| 1 |  1.327 |  1.098 |  1.663 |   1.23 | -0.674 |
| 1 | -0.232 |  1.319 |  0.143 |  0.323 | -1.195 |
| 0 | -1.664 |  1.926 |  2.102 | -0.265 |  1.014 |
| 1 |  1.997 | -0.537 |  2.509 | -0.017 |  0.119 |

** Multiclass Task

#+begin_src R :exports both
data_multiclass <- function(n = 1000, p = 5, seed = 1983) {
  set.seed(seed)
  x <- matrix(rnorm(n*p), n*p/p)
  coef1 <- rnorm(p)
  coef2 <- rnorm(p)
  coef3 <- rnorm(p)

  probs <- cbind(exp(x %*% coef1), exp(x %*% coef2), exp(x %*% coef3))
  choices <- t(apply(probs, 1, rmultinom, n = 1, size = 1))
  y <- apply(choices, 1, function(x) which(x==1))
  mat <- cbind(y, x)
  colnames(mat) <- c("y", paste0("x", 1:p))
  tibble::as_tibble(mat) %>% dplyr::mutate(y = as.factor(y))
}

data_multiclass() %>% head() %>% mutate_if(is.numeric, round, digits=3)
#+end_src

#+RESULTS:
| y |     x1 |     x2 |     x3 |     x4 |     x5 |
|---+--------+--------+--------+--------+--------|
| 1 | -0.017 |  0.469 | -0.636 |  0.655 |  0.151 |
| 2 | -0.784 | -1.127 | -1.665 | -0.374 |  0.296 |
| 1 |  1.327 |  1.098 |  1.663 |   1.23 | -0.674 |
| 1 | -0.232 |  1.319 |  0.143 |  0.323 | -1.195 |
| 3 | -1.664 |  1.926 |  2.102 | -0.265 |  1.014 |
| 2 |  1.997 | -0.537 |  2.509 | -0.017 |  0.119 |

** Regression Task

#+begin_src R :exports both
data_regression <- function(n = 1000, p = 5, seed = 1983) {
  set.seed(seed)
  x <- matrix(rnorm(n*p), n*p/p)
  coef <- rnorm(p)
  y <- x %*% coef
  mat <- cbind(y, x)
  colnames(mat) <- c("y", paste0("x", 1:p))
  tibble::as_tibble(mat)
}

data_regression() %>% head() %>% mutate_if(is.numeric, round, digits=3)
#+end_src

#+RESULTS:
|      y |     x1 |     x2 |     x3 |     x4 |     x5 |
|--------+--------+--------+--------+--------+--------|
|  1.577 | -0.017 |  0.469 | -0.636 |  0.655 |  0.151 |
| -3.385 | -0.784 | -1.127 | -1.665 | -0.374 |  0.296 |
|  6.603 |  1.327 |  1.098 |  1.663 |   1.23 | -0.674 |
|  4.245 | -0.232 |  1.319 |  0.143 |  0.323 | -1.195 |
| -3.186 | -1.664 |  1.926 |  2.102 | -0.265 |  1.014 |
|  1.453 |  1.997 | -0.537 |  2.509 | -0.017 |  0.119 |

** Poisson Regression Task

#+begin_src R
data_poisson <- function(n = 1000, p = 5, seed = 1983) {
  set.seed(seed)
  x <- matrix(rnorm(n*p), n*p/p)
  coef <- rnorm(p)
  print(coef)
  lambda <- exp(x %*% coef)
  y <- rpois(n, lambda) # prob can be vector
  mat <- cbind(y, x)
  colnames(mat) <- c("y", paste0("x", 1:p))
  tibble::as_tibble(mat) %>% dplyr::mutate(y = as.integer(y))
}

data_poisson() %>% head() %>% mutate_if(is.numeric, round, digits=3)
#+end_src

#+RESULTS:
|   y |     x1 |     x2 |     x3 |     x4 |     x5 |
|-----+--------+--------+--------+--------+--------|
|   5 | -0.017 |  0.469 | -0.636 |  0.655 |  0.151 |
|   0 | -0.784 | -1.127 | -1.665 | -0.374 |  0.296 |
| 690 |  1.327 |  1.098 |  1.663 |   1.23 | -0.674 |
|  58 | -0.232 |  1.319 |  0.143 |  0.323 | -1.195 |
|   0 | -1.664 |  1.926 |  2.102 | -0.265 |  1.014 |
|   5 |  1.997 | -0.537 |  2.509 | -0.017 |  0.119 |

* Summary by Task
** Binary Task

- Titanic, DALEX::titanic
- Sonar (208 x 61)
- HouseVotes84 (435 x 17)
- Ionosphere (351 x 35)
- attrition (1470 x 31)
- credit_data (4454 x 14)
- lending_clug (9857 x 23)
- mlc_churn (5000 x 20)
- parabolic (500 x 3)
- pathology (344 x 2)

** Multiclass Task

- iris (150 x 5)
- DNA (3186 x 181)
- Glass (214 x 10)
- LetterRecognition (20000 x 17)
- Satellite (6435 x 37)
- Shuttle (58000 x 10)
- Soybean (683 x 36)
- Vehicle (846 x 19)
- Vowel (990 x 11)
- Zoo (101 x 17)
- hpc_cv (3467 x 7)
- oils (96 x 8)

** Multiclass Task (Image)

- MNIST (70,000 x (28x28))
- Fashin MNIST (70,000 x (28x28))
- CIFAR-10/100 (60,000 x (32x32))

** Regression Task

- BostonHousing (506 x 14)
- Servo (167 x 5)
- Chicago (5698 x 50)
- Sacramento (932 x 9)
- car_prices (804 x 18)
- check_times (13626 x 25)
- concrete (1030 x 9)
- meats (215 x 103)

** Poisson Regression Task

- gala (30 x 7)
- warpbreaks (54 x 3)

** Time-Series Task

- Chicago (5698 x 50)
- drinks (309 x 2)

** Natural Language Task

- okc_text (750 x 10)
- imdb (internet movie database)
* Kaggle

- Regression
  - House Prices
  - FIFA 19

- Binary
  - Titanic
  - NCAA
  - Bank Marketing

- Multi-class
  - FIFA 19

- Poisson

- Survival

- Time-series
  - Predict Future Sales
  - Two-Sigma Financial Modeling

* Links

- [[file:../../../finance/r_dataset_finance/r_dataset_finance.org][R Finance Dataset]]
