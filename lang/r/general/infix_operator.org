#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results output code :colnames yes :session *R:infix*

* Table of Contents :quote:toc:
#+BEGIN_QUOTE
- [[#library][Library]]
- [[#by-package][By Package]]
  - [[#base-package][base package]]
  - [[#magrittr-package][magrittr package]]
  - [[#rlang-package][rlang package]]
  - [[#lubridate-package][lubridate package]]
  - [[#pryr-package][pryr package]]
  - [[#zeallot-package][zeallot package]]
- [[#liks][Liks]]
#+END_QUOTE

* Library

#+begin_src R :results silent
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(zeallot)
#+end_src

* By Package
** base package
*** List (Pre-defined)

- =:=, =::=, =:::=, =$=, =@=, =^=, =*=, =/=, =+=, =-=, =>=, =>==, =<=, =<==, ==, =!==, =!=, =&=, =&&=, =|=, =||=, =~=, =<-=, =<<-=
- =%%=, =%*%=, =%/%=, =%in%=, =%o%=, =%x%=

*** =<-= 束縛

- ?Reserved ワード以外は利用可能
#+begin_src R :exports both
`a + b` <- 3
`:)` <- "smile"
`    ` <- "spaces"
ls()
#+end_src

#+RESULTS:
#+begin_src R

[1] "    "     ":)"       "a + b"    "settings"
#+end_src
\\

*** =<-= と =<<-= の違い

- =<<-=
  - 親環境をさかのぼって変更する
  - 通常は利用しない方が良いが、Closure と組み合わせて使うと便利
#+begin_src R :exports both
x <- 10
f <- function(x) {
  x <- 20 # グローバル変数は書き換えない
  x
}
f(x)
x

f <- function(x) {
  x <<- 20 # グローバル変数を書き換える
  x
}
f(x)
x
#+end_src

#+RESULTS:
#+begin_src R

[1] 20

[1] 10

[1] 20

[1] 20
#+end_src
\\

*** =::=, =:::= の違い

- pkg::obj # Exported obj
- pkg:::obj # Internal obj
  - Internal のオブジェクトにアクセスするのは、非推奨

*** =%%= 剰余

#+begin_src R :exports both
10 %% 3
#+end_src

#+RESULTS:
#+begin_src R
[1] 1
#+end_src

*** =%/%= 整数の割り算

#+begin_src R :exports both
10 %/% 3
10 / 3
#+end_src

#+RESULTS:
#+begin_src R
[1] 3

[1] 3.333333
#+end_src
\\

*** =%in%= Matching operator

#+begin_src R :exports both
"hoge" %in% c("fuga", "hoge", "xxxx")
#+end_src

#+RESULTS:
#+begin_src R
[1] TRUE
#+end_src
\\

** magrittr package
*** List

#+begin_src R :exports both
pacman::p_funs(magrittr)
#+end_src

#+RESULTS:
#+begin_src R
 [1] "%$%"                    "%<>%"                   "%>%"
 [4] "%T>%"                   "add"                    "and"
 [7] "debug_fseq"             "debug_pipe"             "divide_by"
[10] "divide_by_int"          "equals"                 "extract"
[13] "extract2"               "freduce"                "functions"
[16] "inset"                  "inset2"                 "is_greater_than"
[19] "is_in"                  "is_less_than"           "is_weakly_greater_than"
[22] "is_weakly_less_than"    "mod"                    "multiply_by"
[25] "multiply_by_matrix"     "n'est pas"              "not"
[28] "or"                     "raise_to_power"         "set_colnames"
[31] "set_names"              "set_rownames"           "subtract"
[34] "undebug_fseq"           "use_series"
#+end_src

*** LHS =%>%= RHS Pipe
*** LHS =%<>%= RHS 代入演算子

#+begin_src R :exports both
iris$Sepal.Length %<>% sqrt
iris$Sepal.Length
#+end_src

#+RESULTS:
#+begin_src R

  [1] 2.258318 2.213594 2.167948 2.144761 2.236068 2.323790 2.144761 2.236068
  [9] 2.097618 2.213594 2.323790 2.190890 2.190890 2.073644 2.408319 2.387467
 [17] 2.323790 2.258318 2.387467 2.258318 2.323790 2.258318 2.144761 2.258318
 [25] 2.190890 2.236068 2.236068 2.280351 2.280351 2.167948 2.190890 2.323790
 [33] 2.280351 2.345208 2.213594 2.236068 2.345208 2.213594 2.097618 2.258318
 [41] 2.236068 2.121320 2.097618 2.236068 2.258318 2.190890 2.258318 2.144761
 [49] 2.302173 2.236068 2.645751 2.529822 2.626785 2.345208 2.549510 2.387467
 [57] 2.509980 2.213594 2.569047 2.280351 2.236068 2.428992 2.449490 2.469818
 [65] 2.366432 2.588436 2.366432 2.408319 2.489980 2.366432 2.428992 2.469818
 [73] 2.509980 2.469818 2.529822 2.569047 2.607681 2.588436 2.449490 2.387467
 [81] 2.345208 2.345208 2.408319 2.449490 2.323790 2.449490 2.588436 2.509980
 [89] 2.366432 2.345208 2.345208 2.469818 2.408319 2.236068 2.366432 2.387467
 [97] 2.387467 2.489980 2.258318 2.387467 2.509980 2.408319 2.664583 2.509980
[105] 2.549510 2.756810 2.213594 2.701851 2.588436 2.683282 2.549510 2.529822
[113] 2.607681 2.387467 2.408319 2.529822 2.549510 2.774887 2.774887 2.449490
[121] 2.626785 2.366432 2.774887 2.509980 2.588436 2.683282 2.489980 2.469818
[129] 2.529822 2.683282 2.720294 2.810694 2.529822 2.509980 2.469818 2.774887
[137] 2.509980 2.529822 2.449490 2.626785 2.588436 2.626785 2.408319 2.607681
[145] 2.588436 2.588436 2.509980 2.549510 2.489980 2.428992
#+end_src

*** LHS =%T>%= RHS "tee" 演算子

- RHS の結果を返すのではなく、LHS の結果をスルーして返す
#+begin_src R :exports both
rnorm(200) %>%
  matrix(ncol = 2) %T>%
  plot() %>% # plot は通常返り値が無い
  colSums()
#+end_src

#+RESULTS:
#+begin_src R

[1]  -6.192552 -17.628147
#+end_src
\\

*** LHS =%$%= RHS "exposition" 演算子

- LHS のオブジェクトの名前を RHS で参照できる
- data 引数を持たない関数に名前を渡すのに便利
#+begin_src R :exports both
iris %>%
  subset(Sepal.Length > mean(Sepal.Length)) %$%
  cor(Sepal.Length, Sepal.Width)
#+end_src

#+RESULTS:
#+begin_src R

[1] 0.3365679
#+end_src
\\

#+begin_src R :results output graphics file :file (my/get-babel-file) :exports both
data.frame(z = rnorm(100)) %$%
  ts.plot(z) # ts.plot() は data.frame をそのまま引数にとることができない
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-UrcZkn.png]]
\\

** rlang package
*** List

#+begin_src R :exports both
pacman::p_funs(rlang)
#+end_src

#+RESULTS:
#+begin_src R
  [1] "!!"                      "!!!"
  [3] "%@%"                     "%@%<-"
  [5] "%|%"                     "%||%"
  [7] ".data"                   ".env"
  [9] ":="                      "UQ"
 [11] "UQS"                     "abort"
 [13] "are_na"                  "arg_match"
 [15] "as_box"                  "as_box_if"
 [17] "as_bytes"                "as_character"
 [19] "as_closure"              "as_complex"
 [21] "as_data_mask"            "as_data_pronoun"
 [23] "as_double"               "as_env"
 [25] "as_environment"          "as_function"
 [27] "as_integer"              "as_label"
 [29] "as_list"                 "as_logical"
 [31] "as_name"                 "as_overscope"
 [33] "as_pairlist"             "as_quosure"
 [35] "as_quosures"             "as_string"
 [37] "as_utf8_character"       "base_env"
 [39] "bytes"                   "bytes_along"
 [41] "bytes_len"               "call2"
 [43] "call_args"               "call_args_names"
 [45] "call_depth"              "call_fn"
 [47] "call_frame"              "call_inspect"
 [49] "call_modify"             "call_name"
 [51] "call_ns"                 "call_stack"
 [53] "call_standardise"        "caller_env"
 [55] "caller_fn"               "caller_frame"
 [57] "calling"                 "catch_cnd"
 [59] "child_env"               "chr"
 [61] "chr_along"               "chr_len"
 [63] "chr_unserialise_unicode" "cnd"
 [65] "cnd_body"                "cnd_entrace"
 [67] "cnd_footer"              "cnd_header"
 [69] "cnd_message"             "cnd_muffle"
 [71] "cnd_signal"              "cnd_type"
 [73] "coerce_class"            "coerce_type"
 [75] "cpl"                     "cpl_along"
 [77] "cpl_len"                 "ctxt_depth"
 [79] "ctxt_frame"              "ctxt_stack"
 [81] "current_env"             "current_fn"
 [83] "current_frame"           "dbl"
 [85] "dbl_along"               "dbl_len"
 [87] "done"                    "dots_definitions"
 [89] "dots_list"               "dots_n"
 [91] "dots_splice"             "dots_values"
 [93] "duplicate"               "empty_env"
 [95] "enexpr"                  "enexprs"
 [97] "enquo"                   "enquos"
 [99] "ensym"                   "ensyms"
[101] "entrace"                 "env"
[103] "env_bind"                "env_bind_active"
[105] "env_bind_exprs"          "env_bind_fns"
[107] "env_bind_lazy"           "env_binding_are_active"
[109] "env_binding_are_lazy"    "env_binding_are_locked"
[111] "env_binding_lock"        "env_binding_unlock"
[113] "env_bury"                "env_clone"
[115] "env_depth"               "env_get"
[117] "env_get_list"            "env_has"
[119] "env_inherits"            "env_is_locked"
[121] "env_label"               "env_length"
[123] "env_lock"                "env_name"
[125] "env_names"               "env_parent"
[127] "env_parents"             "env_poke"
[129] "env_poke_parent"         "env_print"
[131] "env_tail"                "env_unbind"
[133] "env_unlock"              "error_cnd"
[135] "eval_bare"               "eval_tidy"
[137] "exec"                    "exiting"
[139] "expr"                    "expr_deparse"
[141] "expr_interp"             "expr_label"
[143] "expr_name"               "expr_print"
[145] "expr_text"               "exprs"
[147] "exprs_auto_name"         "f_env"
[149] "f_env<-"                 "f_label"
[151] "f_lhs"                   "f_lhs<-"
[153] "f_name"                  "f_rhs"
[155] "f_rhs<-"                 "f_text"
[157] "flatten"                 "flatten_chr"
[159] "flatten_cpl"             "flatten_dbl"
[161] "flatten_if"              "flatten_int"
[163] "flatten_lgl"             "flatten_raw"
[165] "fn_body"                 "fn_body<-"
[167] "fn_env"                  "fn_env<-"
[169] "fn_fmls"                 "fn_fmls<-"
[171] "fn_fmls_names"           "fn_fmls_names<-"
[173] "fn_fmls_syms"            "format_error_bullets"
[175] "frame_position"          "friendly_type"
[177] "get_env"                 "get_expr"
[179] "global_env"              "global_frame"
[181] "has_length"              "has_name"
[183] "have_name"               "inform"
[185] "inherits_all"            "inherits_any"
[187] "inherits_only"           "int"
[189] "int_along"               "int_len"
[191] "interrupt"               "invoke"
[193] "is_atomic"               "is_attached"
[195] "is_bare_atomic"          "is_bare_bytes"
[197] "is_bare_character"       "is_bare_double"
[199] "is_bare_env"             "is_bare_environment"
[201] "is_bare_formula"         "is_bare_integer"
[203] "is_bare_integerish"      "is_bare_list"
[205] "is_bare_logical"         "is_bare_numeric"
[207] "is_bare_raw"             "is_bare_string"
[209] "is_bare_vector"          "is_binary_lang"
[211] "is_bool"                 "is_box"
[213] "is_bytes"                "is_call"
[215] "is_call_stack"           "is_callable"
[217] "is_character"            "is_chr_na"
[219] "is_closure"              "is_condition"
[221] "is_copyable"             "is_cpl_na"
[223] "is_dbl_na"               "is_definition"
[225] "is_dictionaryish"        "is_done_box"
[227] "is_double"               "is_empty"
[229] "is_env"                  "is_environment"
[231] "is_eval_stack"           "is_expr"
[233] "is_expression"           "is_false"
[235] "is_formula"              "is_formulaish"
[237] "is_frame"                "is_function"
[239] "is_installed"            "is_int_na"
[241] "is_integer"              "is_integerish"
[243] "is_interactive"          "is_lambda"
[245] "is_lang"                 "is_lgl_na"
[247] "is_list"                 "is_logical"
[249] "is_missing"              "is_na"
[251] "is_named"                "is_namespace"
[253] "is_node"                 "is_node_list"
[255] "is_null"                 "is_pairlist"
[257] "is_primitive"            "is_primitive_eager"
[259] "is_primitive_lazy"       "is_quosure"
[261] "is_quosures"             "is_raw"
[263] "is_reference"            "is_scalar_atomic"
[265] "is_scalar_bytes"         "is_scalar_character"
[267] "is_scalar_double"        "is_scalar_integer"
[269] "is_scalar_integerish"    "is_scalar_list"
[271] "is_scalar_logical"       "is_scalar_raw"
[273] "is_scalar_vector"        "is_scoped"
[275] "is_spliced"              "is_spliced_bare"
[277] "is_stack"                "is_string"
[279] "is_symbol"               "is_symbolic"
[281] "is_syntactic_literal"    "is_true"
[283] "is_unary_lang"           "is_vector"
[285] "is_weakref"              "is_zap"
[287] "lang"                    "lang_args"
[289] "lang_args_names"         "lang_fn"
[291] "lang_head"               "lang_modify"
[293] "lang_name"               "lang_standardise"
[295] "lang_tail"               "last_error"
[297] "last_trace"              "lgl"
[299] "lgl_along"               "lgl_len"
[301] "list2"                   "list_along"
[303] "list_len"                "ll"
[305] "local_bindings"          "local_interactive"
[307] "local_options"           "locally"
[309] "maybe_missing"           "message_cnd"
[311] "missing_arg"             "modify"
[313] "mut_attrs"               "mut_node_caar"
[315] "mut_node_cadr"           "mut_node_car"
[317] "mut_node_cdar"           "mut_node_cddr"
[319] "mut_node_cdr"            "mut_node_tag"
[321] "na_chr"                  "na_cpl"
[323] "na_dbl"                  "na_int"
[325] "na_lgl"                  "names2"
[327] "new_box"                 "new_call"
[329] "new_character"           "new_character_along"
[331] "new_complex"             "new_complex_along"
[333] "new_data_mask"           "new_definition"
[335] "new_double"              "new_double_along"
[337] "new_environment"         "new_formula"
[339] "new_function"            "new_integer"
[341] "new_integer_along"       "new_language"
[343] "new_list"                "new_list_along"
[345] "new_logical"             "new_logical_along"
[347] "new_node"                "new_overscope"
[349] "new_quosure"             "new_quosures"
[351] "new_raw"                 "new_raw_along"
[353] "new_weakref"             "node"
[355] "node_caar"               "node_cadr"
[357] "node_car"                "node_cdar"
[359] "node_cddr"               "node_cdr"
[361] "node_poke_caar"          "node_poke_cadr"
[363] "node_poke_car"           "node_poke_cdar"
[365] "node_poke_cddr"          "node_poke_cdr"
[367] "node_poke_tag"           "node_tag"
[369] "ns_env"                  "ns_env_name"
[371] "ns_imports_env"          "overscope_clean"
[373] "overscope_eval_next"     "pairlist2"
[375] "parse_expr"              "parse_exprs"
[377] "parse_quo"               "parse_quos"
[379] "parse_quosure"           "parse_quosures"
[381] "peek_option"             "peek_options"
[383] "pkg_env"                 "pkg_env_name"
[385] "prepend"                 "prim_name"
[387] "push_options"            "qq_show"
[389] "quo"                     "quo_expr"
[391] "quo_get_env"             "quo_get_expr"
[393] "quo_is_call"             "quo_is_lang"
[395] "quo_is_missing"          "quo_is_null"
[397] "quo_is_symbol"           "quo_is_symbolic"
[399] "quo_label"               "quo_name"
[401] "quo_set_env"             "quo_set_expr"
[403] "quo_squash"              "quo_text"
[405] "quos"                    "quos_auto_name"
[407] "raw_along"               "raw_len"
[409] "rep_along"               "rep_named"
[411] "restarting"              "return_from"
[413] "return_to"               "rst_abort"
[415] "rst_exists"              "rst_jump"
[417] "rst_list"                "rst_maybe_jump"
[419] "scoped_bindings"         "scoped_env"
[421] "scoped_envs"             "scoped_interactive"
[423] "scoped_names"            "scoped_options"
[425] "search_env"              "search_envs"
[427] "seq2"                    "seq2_along"
[429] "set_attrs"               "set_env"
[431] "set_expr"                "set_names"
[433] "signal"                  "splice"
[435] "squash"                  "squash_chr"
[437] "squash_cpl"              "squash_dbl"
[439] "squash_if"               "squash_int"
[441] "squash_lgl"              "squash_raw"
[443] "stack_trim"              "string"
[445] "switch_class"            "switch_type"
[447] "sym"                     "syms"
[449] "trace_back"              "trace_length"
[451] "type_of"                 "unbox"
[453] "vec_poke_n"              "vec_poke_range"
[455] "warn"                    "warning_cnd"
[457] "with_abort"              "with_bindings"
[459] "with_env"                "with_handlers"
[461] "with_interactive"        "with_options"
[463] "with_restarts"           "wref_key"
[465] "wref_value"              "zap"
#+end_src

*** =%@%= Etract attributes

#+begin_src R :exports both
factor(1:3) %@% "levels"
mtcars %@% class
#+end_src

#+RESULTS:
#+begin_src R
[1] "1" "2" "3"

[1] "data.frame"
#+end_src
\\

*** =%||%= Default value for NULL

#+begin_src R :exports both
1 %||% 2
NULL %||% 2
#+end_src

#+RESULTS:
#+begin_src R
[1] 1

[1] 2
#+end_src
\\

*** =%|%= Default value for NA (Vectorized)

#+begin_src R :exports both
c("a", "b", NA, "c") %|% "default"
#+end_src

#+RESULTS:
#+begin_src R
[1] "a"       "b"       "default" "c"
#+end_src
\\

** lubridate package
*** =%--%= (時間の引き算 => interval class)

#+begin_src R :exports both
arrive <- ymd_hms("2011-06-04 12:00:00", tz = "Asia/Tokyo")
leave <- ymd_hms("2011-08-20 14:00:00", tz = "Asia/Tokyo")
arrive %--% leave
#+end_src

#+RESULTS:
#+begin_src R

[1] 2011-06-04 12:00:00 JST--2011-08-20 14:00:00 JST
#+end_src
\\

*** =%m-%=, =%m+%= (月を安全に加算・減算する。月末日やうるう年を考慮)

#+begin_src R :exports both
jan <- ymd_hms("2010-01-31 03:04:05")
jan + months(1:3) # Feb-31, April-31 は NAになってしまう

jan %m+% months(1:3) # No rollover
#+end_src

#+RESULTS:
#+begin_src R

[1] NA                        "2010-03-31 03:04:05 UTC"
[3] NA

[1] "2010-02-28 03:04:05 UTC" "2010-03-31 03:04:05 UTC"
[3] "2010-04-30 03:04:05 UTC"
#+end_src
\\

#+begin_src R :exports both
leap <- ymd("2012-02-29")
leap %m+% years(1)
leap %m+% years(-1)
leap %m-% years(1)
#+end_src

#+RESULTS:
#+begin_src R

[1] "2013-02-28"

[1] "2011-02-28"

[1] "2011-02-28"
#+end_src
\\

*** =%within%= (interval/date_time %within% interval/list of intervals)

- 日付が interval に含まれているかどうか
#+begin_src R :exports both
int <- interval(ymd("2001-01-01"), ymd("2002-01-01"))
int2 <- interval(ymd("2001-06-01"), ymd("2002-01-01"))

ymd("2001-05-03") %within% int
int2 %within% int
ymd("1999-01-01") %within% int
#+end_src

#+RESULTS:
#+begin_src R

[1] TRUE

[1] TRUE

[1] FALSE
#+end_src
\\

#+begin_src R :exports both
ttime <- ymd_hms("2019-03-31 12:31:12")
rth <- interval(make_datetime(year(ttime), month(ttime), day(ttime), 9, 30, 0),
                make_datetime(year(ttime), month(ttime), day(ttime), 16, 0, 0))
ttime %within% rth
#+end_src

#+RESULTS:
#+begin_src R

[1] TRUE
#+end_src
\\

** pryr package

- =pryr::`%<d-%`= (=base::delayedAssign()=)
  - Delayed binding -> =promise= (遅延評価) を作成する
#+begin_src R :exports both
library(pryr)
system.time(b %<d-% {
  Sys.sleep(1)
  1
})
system.time(b) # ここを実行した時点で、%<d-% のブロックが実行される
#+end_src

#+RESULTS:
#+begin_src R

   user  system elapsed
      0       0       0

   user  system elapsed
  0.000   0.000   1.002
#+end_src
\\

- =pryr::`%<a-%`= (=base::makeActiveBinding()=)
  - Active binding => アクセスされる毎に再計算される
#+begin_src R :exports both
x %<a-% runif(1)
x
x
#+end_src

#+RESULTS:
#+begin_src R

[1] 0.286763

[1] 0.002307995
#+end_src
\\

** zeallot package

- Python ぽい値の割当
#+begin_src R :exports both
c(x, y) %<-% c(0, 1)
x
y
#+end_src

#+RESULTS:
#+begin_src R

[1] 0.412926

[1] 1
#+end_src
\\
* Liks

- [[file:../stats/math.org][math 行列計算関連 =%*%=, =%x%=, =%o%=, =*= ]]
