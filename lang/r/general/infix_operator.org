#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results output code :colnames yes :session *R:infix*

* Table of Contents :quote:toc:
#+BEGIN_QUOTE
- [[#library][Library]]
- [[#by-package][By Package]]
  - [[#base-package][base package]]
  - [[#magrittr-package][magrittr package]]
  - [[#rlang-package][rlang package]]
  - [[#lubridate-package][lubridate package]]
  - [[#pryr-package][pryr package]]
  - [[#zeallot-package][zeallot package]]
- [[#links][Links]]
#+END_QUOTE

* Library

#+begin_src R :results silent
library(tidyverse)
library(magrittr)
library(rlang)
library(lubridate)
library(zeallot)
#+end_src

* By Package
** base package
*** List

- =:=, =::=, =:::=, =$=, =@=, =^=, =*=, =/=, =+=, =-=, =>=, =>==, =<=, =<==, ===, =!==, =!=, =&=, =&&=, =|=, =||=, =~=, =<-=, =<<-=
- =%%=, =%*%=, =%/%=, =%in%=, =%o%=, =%x%=

*** =<-= 束縛

- ?Reserved ワード以外は利用可能
#+begin_src R :exports both
`a + b` <- 3
`:)` <- "smile"
`    ` <- "spaces"
ls()
#+end_src

#+RESULTS:
#+begin_src R
[1] "    "     ":)"       "a + b"    "settings"
#+end_src
\\

*** =<-= と =<<-= の違い

- =<<-=
  - 親環境をさかのぼって変更する
  - 通常は利用しない方が良いが、Closure と組み合わせて使うと便利
#+begin_src R :exports both
x <- 10
f <- function(x) {
  x <- 20 # グローバル変数は書き換えない
  x
}
f(x)
x

f <- function(x) {
  x <<- 20 # グローバル変数を書き換える
  x
}
f(x)
x
#+end_src

#+RESULTS:
#+begin_src R

[1] 20

[1] 10

[1] 20

[1] 20
#+end_src
\\

*** =::=, =:::= の違い

- pkg::obj # Exported obj
- pkg:::obj # Internal obj
  - Internal のオブジェクトにアクセスするのは、非推奨
\\

*** =%%= 剰余

#+begin_src R :exports both
10 %% 3
#+end_src

#+RESULTS:
#+begin_src R
[1] 1
#+end_src
\\

*** =%/%= 整数の割り算

#+begin_src R :exports both
10 %/% 3
10 / 3
#+end_src

#+RESULTS:
#+begin_src R
[1] 3

[1] 3.333333
#+end_src
\\

*** =%in%= Matching operator

#+begin_src R :exports both
"hoge" %in% c("fuga", "hoge", "xxxx")
#+end_src

#+RESULTS:
#+begin_src R
[1] TRUE
#+end_src
\\

** magrittr package
*** List

#+begin_src R :exports both
pacman::p_funs(magrittr)
#+end_src

#+RESULTS:
#+begin_src R
 [1] "%$%"                    "%<>%"                   "%>%"
 [4] "%T>%"                   "add"                    "and"
 [7] "debug_fseq"             "debug_pipe"             "divide_by"
[10] "divide_by_int"          "equals"                 "extract"
[13] "extract2"               "freduce"                "functions"
[16] "inset"                  "inset2"                 "is_greater_than"
[19] "is_in"                  "is_less_than"           "is_weakly_greater_than"
[22] "is_weakly_less_than"    "mod"                    "multiply_by"
[25] "multiply_by_matrix"     "n'est pas"              "not"
[28] "or"                     "raise_to_power"         "set_colnames"
[31] "set_names"              "set_rownames"           "subtract"
[34] "undebug_fseq"           "use_series"
#+end_src
\\

*** LHS =%>%= RHS Pipe
\\
*** LHS =%<>%= RHS 代入演算子

#+begin_src R :exports both
iris$Sepal.Length %<>% sqrt
iris$Sepal.Length
#+end_src

#+RESULTS:
#+begin_src R

  [1] 2.258318 2.213594 2.167948 2.144761 2.236068 2.323790 2.144761 2.236068
  [9] 2.097618 2.213594 2.323790 2.190890 2.190890 2.073644 2.408319 2.387467
 [17] 2.323790 2.258318 2.387467 2.258318 2.323790 2.258318 2.144761 2.258318
 [25] 2.190890 2.236068 2.236068 2.280351 2.280351 2.167948 2.190890 2.323790
 [33] 2.280351 2.345208 2.213594 2.236068 2.345208 2.213594 2.097618 2.258318
 [41] 2.236068 2.121320 2.097618 2.236068 2.258318 2.190890 2.258318 2.144761
 [49] 2.302173 2.236068 2.645751 2.529822 2.626785 2.345208 2.549510 2.387467
 [57] 2.509980 2.213594 2.569047 2.280351 2.236068 2.428992 2.449490 2.469818
 [65] 2.366432 2.588436 2.366432 2.408319 2.489980 2.366432 2.428992 2.469818
 [73] 2.509980 2.469818 2.529822 2.569047 2.607681 2.588436 2.449490 2.387467
 [81] 2.345208 2.345208 2.408319 2.449490 2.323790 2.449490 2.588436 2.509980
 [89] 2.366432 2.345208 2.345208 2.469818 2.408319 2.236068 2.366432 2.387467
 [97] 2.387467 2.489980 2.258318 2.387467 2.509980 2.408319 2.664583 2.509980
[105] 2.549510 2.756810 2.213594 2.701851 2.588436 2.683282 2.549510 2.529822
[113] 2.607681 2.387467 2.408319 2.529822 2.549510 2.774887 2.774887 2.449490
[121] 2.626785 2.366432 2.774887 2.509980 2.588436 2.683282 2.489980 2.469818
[129] 2.529822 2.683282 2.720294 2.810694 2.529822 2.509980 2.469818 2.774887
[137] 2.509980 2.529822 2.449490 2.626785 2.588436 2.626785 2.408319 2.607681
[145] 2.588436 2.588436 2.509980 2.549510 2.489980 2.428992
#+end_src
\\

*** LHS =%T>%= RHS "tee" 演算子

- RHS の結果を返すのではなく、LHS の結果をスルーして返す
#+begin_src R :exports both
rnorm(200) %>%
  matrix(ncol = 2) %T>%
  plot() %>% # plot は通常返り値が無い
  colSums()
#+end_src

#+RESULTS:
#+begin_src R

[1]  -6.192552 -17.628147
#+end_src
\\

*** LHS =%$%= RHS "exposition" 演算子

- LHS のオブジェクトの名前を RHS で参照できる
- data 引数を持たない関数に名前を渡すのに便利
#+begin_src R :exports both
iris %>%
  subset(Sepal.Length > mean(Sepal.Length)) %$%
  cor(Sepal.Length, Sepal.Width)
#+end_src

#+RESULTS:
#+begin_src R

[1] 0.3365679
#+end_src
\\

#+begin_src R :results output graphics file :file (my/get-babel-file) :exports both :cache yes
data.frame(z = rnorm(100)) %$%
  ts.plot(z) # ts.plot() は data.frame をそのまま引数にとることができない
#+end_src

#+RESULTS[2916e893e54d49f2401643fe01c02f08dd7b0a06]:
[[file:/home/shun/Dropbox/memo/img/babel/fig-n28pom.png]]

** rlang package
*** List

#+begin_src R :exports both
pacman::p_funs(rlang) %>% str_subset("^%")
#+end_src

#+RESULTS:
#+begin_src R
[1] "%@%"   "%@%<-" "%|%"   "%||%"
#+end_src

*** =%@%= Etract attributes

#+begin_src R :exports both
factor(1:3) %@% "levels"
mtcars %@% class
#+end_src

#+RESULTS:
#+begin_src R
[1] "1" "2" "3"

[1] "data.frame"
#+end_src
\\

*** =%||%= Default value for NULL

#+begin_src R :exports both
1 %||% 2
NULL %||% 2
#+end_src

#+RESULTS:
#+begin_src R
[1] 1

[1] 2
#+end_src
\\

*** =%|%= Default value for NA (Vectorized)

#+begin_src R :exports both
c("a", "b", NA, "c") %|% "default"
#+end_src

#+RESULTS:
#+begin_src R
[1] "a"       "b"       "default" "c"
#+end_src
\\

** lubridate package
*** =%--%= (時間の引き算 -> interval class)

#+begin_src R :exports both
arrive <- ymd_hms("2011-06-04 12:00:00", tz = "Asia/Tokyo")
leave <- ymd_hms("2011-08-20 14:00:00", tz = "Asia/Tokyo")
arrive %--% leave
#+end_src

#+RESULTS:
#+begin_src R
[1] 2011-06-04 12:00:00 JST--2011-08-20 14:00:00 JST
#+end_src
\\

*** =%m-%=, =%m+%= (月を安全に加算・減算する。月末日やうるう年を考慮)

#+begin_src R :exports both
jan <- ymd_hms("2010-01-31 03:04:05")
jan + months(1:3) # Feb-31, April-31 は NAになってしまう

jan %m+% months(1:3) # No rollover
#+end_src

#+RESULTS:
#+begin_src R
[1] NA                        "2010-03-31 03:04:05 UTC"
[3] NA
[1] "2010-02-28 03:04:05 UTC" "2010-03-31 03:04:05 UTC"
[3] "2010-04-30 03:04:05 UTC"
#+end_src
\\

#+begin_src R :exports both
leap <- ymd("2012-02-29")
leap %m+% years(1)
leap %m+% years(-1)
leap %m-% years(1)
#+end_src

#+RESULTS:
#+begin_src R
[1] "2013-02-28"
[1] "2011-02-28"
[1] "2011-02-28"
#+end_src
\\

*** =%within%= (interval/date_time %within% interval/list of intervals)

- 日付が interval に含まれているかどうか
#+begin_src R :exports both
int <- interval(ymd("2001-01-01"), ymd("2002-01-01"))
int2 <- interval(ymd("2001-06-01"), ymd("2002-01-01"))

ymd("2001-05-03") %within% int
int2 %within% int
ymd("1999-01-01") %within% int
#+end_src

#+RESULTS:
#+begin_src R
[1] TRUE
[1] TRUE
[1] FALSE
#+end_src
\\

#+begin_src R :exports both
ttime <- ymd_hms("2019-03-31 12:31:12")
rth <- interval(make_datetime(year(ttime), month(ttime), day(ttime), 9, 30, 0),
                make_datetime(year(ttime), month(ttime), day(ttime), 16, 0, 0))
ttime %within% rth
#+end_src

#+RESULTS:
#+begin_src R
[1] TRUE
#+end_src
\\

** pryr package

- =pryr::`%<d-%`= (=base::delayedAssign()=)
  - Delayed binding -> =promise= (遅延評価) を作成する
#+begin_src R :exports both
library(pryr)
system.time(b %<d-% {
  Sys.sleep(1)
  1
})
system.time(b) # ここを実行した時点で、%<d-% のブロックが実行される
#+end_src

#+RESULTS:
#+begin_src R

   user  system elapsed
      0       0       0

   user  system elapsed
  0.000   0.000   1.002
#+end_src
\\

- =pryr::`%<a-%`= (=base::makeActiveBinding()=)
  - Active binding => アクセスされる毎に再計算される
#+begin_src R :exports both
x %<a-% runif(1)
x
x
#+end_src

#+RESULTS:
#+begin_src R

[1] 0.286763

[1] 0.002307995
#+end_src
\\

** zeallot package

- Python ぽい値の割当
#+begin_src R :exports both
c(x, y) %<-% c(0, 1)
x
y
#+end_src

#+RESULTS:
#+begin_src R

[1] 0.412926

[1] 1
#+end_src
\\
* Links

- [[file:../stats/math.org][math 行列計算関連 =%*%=, =%x%=, =%o%=, =*= ]]
