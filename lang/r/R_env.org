#+STARTUP: content indent

* Requirements

- Ubuntu, Mac で同じ環境を用意したい

- R 本体のバージョンをプロジェクト毎に切り替えたい
  - バージョン毎に切り替えたいというよりも、過去のプロジェクトに最新バージョンを強要されたくない
  - 新しいプロジェクトは、基本的に最新バージョンを使っていく

- パッケージバージョンを自由に切り替えたい
  - これも上の理由と同じで、既に稼動しているものに最新バージョンを強要されたくない

- パッケージのアップグレードを自動で行いたい
  - インタラクティブな開発作業中に長時間のパッケージ更新があるとうざい

- まっさらな環境にいつも使うパッケージを復元したい

* Workflow

- R 本体
  - anyenv 経由から Renv を利用
  - ソースからビルド

- パッケージ
  - ソースからインストール
  - .Rprofile で .libPaths() を実行
  - renv は一旦保留
    - system の library と renv の Global Cache で二重に管理が発生してしまう
      - =link_package.R= は作成済み
    - =renv::install()= の挙動に不明点があるため、renv cache から system library にリンクを張る計画は現状難しい
      - =install_packages.R= のコマンドを =renv::install()= に変更して稼動できればベスト

- パッケージのリストを保存するスクリプト: =list_installed_packages.R=
  - Platform x version 毎に日次で保存

- パッケージの一括アップグレード: =upgrade_packages.R=
  - ={dtupdate}= を使って github package も一括アップグレード

- パッケージの一括インストール: =restore_packages.R=
  - 環境構築時の利用を想定

* Build R from Source
** Overview

- [[https://support.rstudio.com/hc/en-us/articles/218004217-Building-R-from-source][Building R from source@RStudio]]
- [[https://stats.biopapyrus.jp/r/devel/r-install.html][ソースコードをコンパイルして R をインストール@biostatistics]]

- [[https://cran.ism.ac.jp/][CRAN]] から必要なバージョンのソースをダウンロード
- =./configure --help= で利用可能なオプションを確認

- tex 関連のエラーが出る可能性あり
  - mac の場合は、texinfo の PATH を通す
- cairo の機能が skipped になるケースがある

#+begin_src shell :eval never

# anyenv を利用する場合は、以下のようにインストール先を指定
# --enable-R-shlib は R Studio Server から R shared library にアクセスするために必要
./configure --prefix=/home/shun/.anyenv/envs/Renv/versions/4.0.0 --enable-R-shlib
--with-blas
--with-lapack

# mac
# ./configure --prefix=/Users/shun/.anyenv/envs/Renv/versions/4.0.0 --enable-R-shlib

make
make install
#+end_src

#+RESULTS:

- 有効な機能を確認
#+begin_src R :results output
capabilities()
#+end_src

#+RESULTS:
:        jpeg         png        tiff       tcltk         X11        aqua 
:        TRUE        TRUE        TRUE        TRUE        TRUE       FALSE 
:    http/ftp     sockets      libxml        fifo      cledit       iconv 
:        TRUE        TRUE        TRUE        TRUE       FALSE        TRUE 
:         NLS     profmem       cairo         ICU long.double     libcurl 
:        TRUE       FALSE        TRUE        TRUE        TRUE        TRUE 

** BLAS/LAPACK
*** Overview

参考
- [[https://csantill.github.io/RPerformanceWBLAS/][Improving R Perfomance by installing optimized BLAS/LAPACK libraries]]
  - ベンチマーク比較があり詳細
- [[https://qiita.com/hoxo_m/items/aa04b9d3d7a32cb6a1a3][OpenBLAS で R を高速化 - Qiita]]
  - BLAS を OpenBLAS に切り替えて速度向上を図る
- [[https://www.r-bloggers.com/why-is-r-slow-some-explanations-and-mklopenblas-setup-to-try-to-fix-this/][Why is R slow? some explanations and MKL/OpenBLAS setup to try to fix this | ...]]
- [[https://blog.revolutionanalytics.com/2015/10/edge-cases-in-using-the-intel-mkl-and-parallel-programming.html][Edge cases in using the Intel MKL and parallel programming (Revolutions)]]
  - BLAS ライブラリが並列化パッケージと干渉してしまう場合のコア数制限方法
 
- BLAS (Basic Linear Algebra Subprograms)
  - 行列計算用のライブラリ
  - Ubuntu パッケージは =libblas3=

- LAPACK
  - Fortran 製
  - Ubuntu パッケージは =liblapack3=
  - 連立一次方程式・最小二乗法・固有値問題・特異値問題
  - LU, Cholesky, QR, SVD, Schur, generalized Schur

- 選択肢
  - OpenBLAS
  - AtlasBLAS
  - GotoBLAS
  - Intel MKL: Intel CPU では当然速い
    - [[https://software.intel.com/content/www/us/en/develop/articles/installing-intel-free-libs-and-python-apt-repo.html][Installing Intel® Performance Libraries and Intel® Distribution for...]] 
    - [[https://qiita.com/f0o0o/items/d79971215fd37c3a5d36][Intel MKL を apt からインストールする - Qiita]]
    - [[http://dirk.eddelbuettel.com/blog/2018/04/15/][Thinking inside the box]]
  - Microsoft R Open
- 選択肢 (Mac)
  - veclib

- 利用方法
  - R を =--with-blas= でビルド
  - =update-alternatives= で利用するライブラリを選択

- 現在の設定を確認
#+begin_src R :exports both :results output
sessionInfo() 
#+end_src

#+RESULTS:
#+begin_example
R version 3.6.3 (2020-02-29)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.4 LTS

Matrix products: default
BLAS:   /home/shun/.anyenv/envs/Renv/versions/3.6.3/lib/R/lib/libRblas.so
LAPACK: /home/shun/.anyenv/envs/Renv/versions/3.6.3/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C              
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=C             
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_3.6.3
#+end_example

*** update-alternatives

- 複数のライブラリの切り替えに必要な設定
- system の R 向けの設定 
#+begin_src shell
sudo alternatives --install /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 libblas.so.3 /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1 10

sudo update-alternatives --install /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 libblas.so.3 /opt/intel/mkl/lib/intel64/libmkl_rt.so 50

sudo alternatives --install /usr/lib/x86_64-linux-gnu/liblapack.a liblapack.a /usr/lib/x86_64-linux-gnu/lapack/liblapack.a
#+end_src

- anyenv 環境での利用を想定
#+begin_src shell
sudo alternatives --install /usr/lib64/libblas.so.3 libblas.so.3 /usr/lib64/libblas.so.3.5.0 10

sudo update-alternatives --install /home/shun/.anyenv/envs/Renv/versions/3.6.3/lib/R/lib/libRblas.so libRblas.so /home/shun/.anyenv/envs/Renv/versions/3.6.3/lib/R/lib/libRblas.so 

sudo update-alternatives --install /home/shun/.anyenv/envs/Renv/versions/3.6.3/lib/R/lib/libRblas.so libRblas.so /opt/intel/mkl/lib/intel64/libmkl_rt.so 50
#+end_src
  
*** ベンチマーク

- [[https://github.com/pachamaltese/r-with-intel-mkl/blob/master/00-benchmark-scripts/1-r-benchmark-25.R][r-with-intel-mkl/1-r-benchmark-25.R at master · pachamaltese/r-with-intel-mkl...]] 
#+BEGIN_QUOTE
quote
   R Benchmark 2.5
   ===============
Number of times each test is run__________________________:  3

   I. Matrix calculation
   ---------------------
Creation, transp., deformation of a 2500x2500 matrix (sec):  0.586333333333333 
2400x2400 normal distributed random matrix ^1000____ (sec):  0.45 
Sorting of 7,000,000 random values__________________ (sec):  0.702333333333334 
2800x2800 cross-product matrix (b = a' * a)_________ (sec):  13.1966666666667 
Linear regr. over a 3000x3000 matrix (c = a \ b')___ (sec):  6.10233333333333 
                      --------------------------------------------
                 Trimmed geom. mean (2 extremes eliminated):  1.3595481632573 

   II. Matrix functions
   --------------------
FFT over 2,400,000 random values____________________ (sec):  0.266666666666666 
Eigenvalues of a 640x640 random matrix______________ (sec):  0.623666666666665 
Determinant of a 2500x2500 random matrix____________ (sec):  2.46199999999999 
Cholesky decomposition of a 3000x3000 matrix________ (sec):  4.66266666666666 
Inverse of a 1600x1600 random matrix________________ (sec):  2.455 
                      --------------------------------------------
                Trimmed geom. mean (2 extremes eliminated):  1.55631448400477 

   III. Programmation
   ------------------
3,500,000 Fibonacci numbers calculation (vector calc)(sec):  0.413666666666662 
Creation of a 3000x3000 Hilbert matrix (matrix calc) (sec):  0.187666666666663 
Grand common divisors of 400,000 pairs (recursion)__ (sec):  0.184999999999993 
Creation of a 500x500 Toeplitz matrix (loops)_______ (sec):  0.0360000000000108 
Escoufier's method on a 45x45 matrix (mixed)________ (sec):  0.217999999999989 
                      --------------------------------------------
                Trimmed geom. mean (2 extremes eliminated):  0.196338342671326 


Total time for all 15 tests_________________________ (sec):  32.548 
Overall mean (sum of I, II and III trimmed means/3)_ (sec):  0.746160679340756 
                      --- End of test ---
#+end_quote

* WSL

- [[https://qiita.com/yutannihilation/items/78708fa9f3a9c22e56b3][WSLのUbuntu 18.04にRをインストールする@Qiita]]

* anyenv/Renv

- [[https://github.com/anyenv/anyenv][anyenv@Github]]
- [[https://github.com/viking/Renv][Renv@Github]]

* Ubuntu
** R from apt repo

- [[https://cran.r-project.org/bin/linux/ubuntu/README.html][UBUNTU PACKAGES FOR R]]
- バイナリのパッケージをインストールする方法
- =/etc/apt/sources.list= に追加
  - deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/

- リリースの確認方法
#+begin_src shell
lsb_release -cs
#+end_src

#+RESULTS:
: bionic

#+begin_src shell
sudo apt install r-base
sudo apt install r-base-dev
#+end_src

- 公開鍵の追加
- 方法 1
#+begin_src shell
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
#+end_src

- 方法２ WSL の場合はこちらを使う

#+begin_src shell
gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
gpg -a --export E298A3A825C0D65DFD57CBB651716619E084DAB9 | sudo apt-key add -
#+end_src

_インストール済みの公開鍵の確認_
#+begin_src shell
sudo apt-key list
#+end_src

** Binary package

- ppa: https://launchpad.net/~marutter/+archive/ubuntu/c2d4u3.5

#+begin_src shell
sudo add-apt-repository ppa:marutter/c2d4u3.5
sudo apt install r-cran-tidyverse
#+end_src

このリポジトリに無いパッケージもある模様

* [[./package/renv/renv.org][renv]]

- 懸念点
  - Cache Versio x R Version x platform x Package version で容量が莫大になる
  - Cache version が気づかないうちに上ってないか

* library path

- =/usr/lib/R/library=
  - base, stats などの built-in パッケージ

- =/usr/lib/R/site-library=
  - apt binary パッケージでインストールしたもの

- =/usr/local/lib/R/site-library=
  - =install.package()= でユーザーが個別にインストールしたもの
  - ただし、書き込み権限がない場合がインストールできない

- =/home/shun/Dropbox/R/x86_64-pc-linux-gnu-library/3.6=
  - plotform + version で個別にユーザーパッケージを配置する場所

- =/home/shun/.anyenv/envs/Renv/versions/3.6.2/lib/R/library=
  - anyenv+Renv を利用した場合の lib path

- =./renv/library/R-3.6/x86_64-pc-linux-gnu=
  - ={renv}= を利用した場合の path
  - プロジェクト直下に作成される
  - コード内の利用パッケージを自動的に走査して =renv.lock= ファイルを作成
  - パッケージ自体は、Global Cahce からのリンクを貼っているだけ

- =$RENV_PATHS_ROOT/cahce/V4/R-3.6/x86_64-pc-linx-gnu=
  - ={renv}= の Global Cache
  - $RENV_PATHS_ROOT のデフォルトは =~/.local/share/renv=
  - 各プロジェクトへは、ここからリンクが貼られる

- パッケージのインストール先を変更する
  - =install.packages("dplyr", lib=="~~/lib/")~ のように都度設定する
  - =.libPaths()= で設定する
  - =R_LIBS_USER= に設定する

* RTVS Daemon
** Install

- [[https://github.com/Microsoft/RTVS/blob/master/doc/rtvsd/rtvs-daemon-installation.md][Remote R Service for Linux@Github]]

#+begin_src shell
sudo systemctl enable rtvsd
sudo systemctl start rtvsd
ps -A -f | grep rtvsd
#+end_src

- /etc/rc.local に systemctl start rtvsd 追記

** password 設定

sudo passwd で root パスワード設定
passwd shun で user パスワード設定

** build-essential install

R package のコンパイルのため

** Port 5444 開放

GCP Console で Firewall rule 追加

** RTVS からログイン ユーザー名 = <<unix>>>\shun
** リモート側へ R Package 導入
** WinSCP を利用してファイル転送
** TODOs

- RTVSD 自動起動
- デフォルトの Linux ユーザー名
- ファイル転送(ファイル共有)とパス設定
