#+STARTUP: folded indent inlineimages latexpreview

* =display-buffer=
** 概要

- バッファの内容を読ませる目的
- _ウィンドウは分割するが、選択はしない_
  - =pop-to-buffer= は window を 選択する

- 事前に検証用に doom-emacs の =popup= ルールから外しておく
#+begin_src emacs-lisp :results silent
(set-popup-rules! '(("^\\*Messages\\*$" :ignore t)))
#+end_src

- [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Choosing-Window.html#Choosing-Window][28.13.1 Choosing a Window for Displaying a Buffer]]

** =ACTION=
*** Overview

- '=(FUNCTIONS . ALIST)= の形式で =ACTION= を指定

- display-buffer builds a list of action functions and an action
  alist by combining any action functions and alists specified by
  - =display-buffer-overriding-action=
  - =display-buffer-alist=
  - =ACTION= argument
  - =display-buffer-base-action=
  - =display-buffer-fallback-action=

- Then it calls each function in the combined function list in turn, passing the buffer as the first argument and the combined action alist as the second argument, until one of the functions returns non-nil.

*** Functions

- =FUNCTIONS= (=BUFFER= と =ALIST= の 2 つを引数として取る関数)
  - =display-buffer-same-window=
    - 現在と同じウィンドウを使う
  - =display-buffer-reuse-window=
    - 既にそのバッファを表示しているウィンドウを利用する
  - =display-buffer-reuse-mode-window=
    - そのバッファと同じモードのウィンドウを再利用する
  - =display-buffer-use-some-window=
    - どこか使えそうなウィンドウを探して表示する
  - =display-buffer-pop-up-window=
    - 新たにウィンドウをポップアップする

  - =display-buffer-below-selected=
    - _現在のウィンドウの下に分割して表示する_
  - =display-buffer-at-bottom=
    - 現在のフレームの下に表示する (フレーム幅一杯に)

  - =display-buffer-in-previous-window=
    - 以前にそのバッファを表示していたウィンドウを利用する
  - =display-buffer-in-child-frame=
    - _child-frame を作成して表示する_
  - =display-buffer-in-side-window=
    - =ALIST= を指定して好きな場所に制御できる
  - =display-buffer-in-atomic-window=
    - 現在のウィンドウを分割して atomic window を作成する
    - atomic window = 複数のウィンドウで 1 つのウィンドウとなる (一方を削除すると全て消える)

  - =display-buffer-pop-up-frame=
    - 新しいフレームに表示する
  - =display-buffer-no-window=
    - Do not display the buffer and have display-buffer return nil immediately.

*** Alist

- =inhibit-same-window=
  non-nil の場合、現在のウィンドウを再利用することを禁止する

- =inhibit-switch-frame=
  A non-nil value prevents any frame used for showing the buffer from being raised or selected.

- =reusable-frames=
  The value specifies the set of frames to search for a window that already displays the buffer. Possible values are nil (the selected frame), t (any live frame), visible (any visible frame), 0 (any visible or iconified frame) or an existing live frame.

- =pop-up-frame-parameters=
  The value specifies an alist of frame parameters to give a new frame, if one is created.

- =window-height=
  The value specifies the desired height of the window chosen and is either an integer (the total height of the window), a floating point number (the fraction of its total height with respect to the total height of the frame's root window) or a function to be called with one argument - the chosen window.  The function is supposed to adjust the height of the window; its return value is ignored.  Suitable functions are shrink-window-if-larger-than-buffer and fit-window-to-buffer.

- =window-width=
  The value specifies the desired width of the window chosen and is either an integer (the total width of the window), a floating point number (the fraction of its total width with respect to the width of the frame's root window) or a function to be called with one argument - the chosen window.  The function is supposed to adjust the width of the window; its return value is ignored.

- =preserve-size=
  The value should be either (t . nil) to preserve the width of the chosen window, (nil . t) to preserve its height or (t . t) to preserve its height and width in future changes of the window configuration. `window-parameters' -- The value specifies an alist of window parameters to give the chosen window.

- =allow-no-window=
  A non-nil value means that display-buffer may not display the buffer and return nil immediately.

** =display-buffer-overriding-action=

#+begin_src emacs-lisp
display-buffer-overriding-action
#+end_src

#+RESULTS:

** =display-buffer-alist=

- =display-buffer= を制御するための alist
- key がバッファ名の正規表現になっている

#+begin_src emacs-lisp :results list
display-buffer-alist
#+end_src

#+RESULTS:
- ("^\\*Ilist\\*$" imenu-list-display-buffer)

** =display-buffer-base-action=

#+begin_src emacs-lisp
display-buffer-base-action
#+end_src

#+RESULTS:

** =display-buffer-fallback-action=

#+begin_src emacs-lisp :results list
display-buffer-fallback-action
#+end_src

#+RESULTS:
- (display-buffer--maybe-same-window display-buffer-reuse-window display-buffer--maybe-pop-up-frame-or-window display-buffer-in-previous-window display-buffer-use-some-window display-buffer-pop-up-frame)

* =pop-to-buffer=

- 別のウィンドウへバッファを表示させる
- 表示方法のカスタマイズ可能
- 内部で `display-buffer' を呼び出している

#+begin_src emacs-lisp
(pop-to-buffer "*Message*")
#+end_src

* =+popup= from doom-emacs

- =+popup-display-buffer-stacked-side-window-fn=
  - =display-buffer-in-side-window= に =vslot= を指定する機能を追加している

#+begin_src emacs-lisp :results list
+popup-defaults
#+end_src

#+RESULTS:
- :side
- bottom
- :height
- 0.16
- :width
- 40
- :quit
- t
- :select
- ignore
- :ttl
- 5

- default の =ACTION=
#+begin_src emacs-lisp :results list
+popup-default-display-buffer-actions
#+end_src

#+RESULTS:
- +popup-display-buffer-stacked-side-window-fn

#+begin_src emacs-lisp
+popup-default-alist
#+end_src

#+RESULTS:
: ((window-height . 0.16) (reusable-frames . visible))

#+begin_src emacs-lisp
+popup-default-parameters
#+end_src

#+RESULTS:
: ((transient . t) (quit . t) (select . ignore) (no-other-window . t))

#+begin_src emacs-lisp :results list
+popup-window-parameters
#+end_src

#+RESULTS:
- ttl
- quit
- select
- modeline
- popup
