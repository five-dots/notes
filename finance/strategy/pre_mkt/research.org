#+STARTUP: folded indent inlineimages latexpreview
#+PROPERTY: header-args:R :results output :session *R:pre_mkt* :width 560 :height 420

* TODO [0/4]
** TODO 自己相関の高い時期と、ボラティリティの関係
- 同じ lookback window で SD を計算して比較する
  
** TODO Regime Switching
- Positive Return, Low Volatility, Momentum
- Negative Return, High Volatility, Reversal
- by MSwM or depmixs4
** TODO 残差への DCC-GARCH
** TODO Earnings 後のデータを除く 
- 有り・無しのケースで比較

* Load Libraries and Data

#+begin_src R :results silent
infra_path <- glue::glue("{.dropbox}/memo/strategy/pre_mkt/infra.R")
source(infra_path)
#+end_src

#+begin_src R :results silent
universe <- e$universe
type <- "o2c_log"
lookback <- 500

ur_tests <- e$ur_tests %>%
  filter(type == !!type) %>%
  filter(symbol %in% universe)
  
box_tests <- e$box_tests %>%
  filter(type == !!type) %>%
  filter(symbol %in% universe)
  
ac <- e$ac %>%
  filter(type == !!type) %>%
  filter(symbol %in% universe)
  
dist_fits <- e$dist_fits %>%
  filter(type == !!type) %>%
  filter(symbol %in% universe)
  
lm_fits <- e$lm_fits %>%
  filter(symbol %in% universe)
  
## arma_ids <- e$arma_ids %>%
##   filter(type == !!type) %>%
##   filter(symbol %in% universe)
#+end_src

* Functions

#+begin_src R :results silent
calc_ratio <- function(x, cval = 0.1, ...) {
  percent(sum(x < cval, na.rm = TRUE) / length(x), ...)
}

tests_table <- function(data, col, ...) {
  col <- enquo(col)
  data %>%
    group_by(symbol) %>%
    spread(!!col, pval) %>%
    summarise_if(function(x) all(x <= 1, na.rm = TRUE), calc_ratio, ...)
}

tests_plot <- function(data, col, cval = 0.1) {
  col <- enquo(col)
  data %>%
    filter(pval < cval) %>%
    mutate(!!col := as.factor(!!col)) %>%
    ggplot(aes(x = !!col, y = symbol)) +
    geom_count(aes(alpha = stat(n)))
}

plot_points_lm <- function(symbol) {
  data.frame(
    y = e$r[["mat"]][["o2c_log"]][, symbol],
    x = e$r[["mat"]][["c2o_log"]][, symbol]
  ) %>%
    ggplot(aes(x = x, y = y)) +
    geom_point() +
    geom_smooth(method = lm)
}
#+end_src

* Filter Universe
** Unit Root Test

- 計算期間 12/24ヶ月、1ヶ月毎のローリングで単位根検定を実施
- 単位根検定の棄却域は、5%
- 全て単位根を持たないことを確認
#+begin_src R
ur_tests %>%
  group_by(symbol) %>%
  summarise(has_ur = all(has_ur))
#+end_src

#+RESULTS:
#+begin_example

# A tibble: 8 x 2
  symbol has_ur
  <
 <

1 AMZN   FALSE 
2 BA     FALSE 
3 JNJ    FALSE 
4 JPM    FALSE 
5 MSFT   FALSE 
6 NEE    FALSE 
7 PG     FALSE 
8 XOM    FALSE
#+end_example

** Correlation

- すべて正の相関
#+begin_src R
e$r[["mat"]][[type]][, universe] %>% cor() %>% round(2)
#+end_src

#+RESULTS:
:      AMZN   BA  JNJ  JPM MSFT  NEE   PG  XOM
: AMZN 1.00 0.42 0.33 0.41 0.51 0.27 0.31 0.39
: BA   0.42 1.00 0.37 0.42 0.46 0.28 0.36 0.44
: JNJ  0.33 0.37 1.00 0.34 0.42 0.41 0.52 0.46
: JPM  0.41 0.42 0.34 1.00 0.45 0.27 0.38 0.43
: MSFT 0.51 0.46 0.42 0.45 1.00 0.35 0.41 0.48
: NEE  0.27 0.28 0.41 0.27 0.35 1.00 0.42 0.44
: PG   0.31 0.36 0.52 0.38 0.41 0.42 1.00 0.48
: XOM  0.39 0.44 0.46 0.43 0.48 0.44 0.48 1.00

#+begin_src R :results graphics :file (get-babel-file)
e$r[["df"]][[type]][, universe] %>% ggpairs()
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-Em5CFW.png]]

** Autocorrelation
*** Correlogram
**** AMZN

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "AMZN"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-qXBDC8.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "AMZN"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-AJXkZe.png]]

**** BA

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "BA"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-vdZYM4.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "BA"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-yV6N4b.png]]

**** JNJ*

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "JNJ"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-ATgi8m.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "JNJ"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-0g6e0w.png]]

**** JPM*

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "JPM"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-U8mgOk.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "JPM"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-8Eoacu.png]]

**** MSFT*

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "MSFT"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-1QNsV9.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "MSFT"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-01tkqz.png]]

**** NEE

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "NEE"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-0bU7oH.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "NEE"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-QuwNqc.png]]

**** PG

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "PG"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-D6y0dd.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "PG"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-zrvMUS.png]]

**** XOM*

#+begin_src R :results graphics :file (get-babel-file)
ggtsdisplay(e$r[["xts"]][[type]][, "XOM"])
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-1eDw73.png]]

#+begin_src R :results graphics :file (get-babel-file)
Acf(e$r[["xts"]][[type]][, "XOM"]^2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-8XQjpx.png]]

*** Ljung-Box Tests
**** Analysis by Lags
***** Summary

- 棄却域は、10%
- 1/3 程度の銘柄にしか有意な自己相関がない
#+begin_src R
box_tests %>%
  group_by(lag) %>%
  summarise(ratio = calc_ratio(pval, cval = 0.1, digit = 0))
#+end_src

#+RESULTS:
#+begin_example

# A tibble: 10 x 2
     lag ratio     
   <
<formttbl>
 1     1 31%       
 2     2 36%       
 3     3 39%       
 4     4 41%       
 5     5 42%       
 6     6 41%       
 7     7 42%       
 8     8 43%       
 9     9 41%       
10    10 43%
#+end_example

***** Table

- JNJ, JPM, MSFT, XOM が高い自己相関
#+begin_src R
tests_table(box_tests, lag, cval = 0.1, digit = 0)
#+end_src

#+RESULTS:
#+begin_example
# A tibble: 8 x 11
  symbol `1`     `2`     `3`    `4`    `5`    `6`    `7`    `8`    `9`    `10`  
  <
 <
<
<
<
<
<
<
<
<
<form>
1 AMZN   13%     14%     14%    12%    11%    8%     13%    16%    17%    15%   
2 BA     12%     19%     18%    10%    9%     8%     8%     10%    7%     7%    
3 JNJ    46%     37%     46%    56%    57%    59%    67%    66%    62%    63%   
4 JPM    59%     59%     76%    77%    78%    78%    77%    75%    73%    79%   
5 MSFT   35%     50%     48%    47%    54%    52%    52%    49%    46%    54%   
6 NEE    18%     37%     31%    36%    37%    37%    38%    38%    38%    36%   
7 PG     27%     33%     29%    27%    30%    32%    30%    27%    26%    28%   
8 XOM    39%     41%     49%    63%    63%    58%    55%    62%    58%    61%
#+end_example

***** Plot Counts

#+begin_src R :results graphics :file (get-babel-file)
tests_plot(box_tests, lag)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-J02l4O.png]]

****** ETF

- ボラティリティの大きいセクターは自己相関も大きそう
#+begin_src R :results graphics :file (get-babel-file)
ac_tests %>%
  filter(!symbol %in% common_stock) %>%
  ac_tests_plot(lag)
#+end_src

#+RESULTS:
[[file:~/Dropbox/memo/img/babel/fig-6z2viN.png]]

**** Analysis by Lookbacks
***** Summary

#+begin_src R
box_tests %>%
  group_by(lookback) %>%
  summarise(ratio = calc_ratio(pval, digit = 0))
#+end_src

#+RESULTS:
: 
: # A tibble: 1 x 2
:   lookback ratio     
:      <
: <formttbl>
: 1      500 40%

***** Table

#+begin_src R
tests_table(box_tests, lookback, cval = 0.1, digit = 0)
#+end_src

#+RESULTS:
#+begin_example
# A tibble: 8 x 2
  symbol `500`     
  <
 <formttbl>
1 AMZN   13%       
2 BA     11%       
3 JNJ    56%       
4 JPM    73%       
5 MSFT   49%       
6 NEE    35%       
7 PG     29%       
8 XOM    55%
#+end_example

***** Plot Counts

#+begin_src R :results graphics :file (get-babel-file)
tests_plot(box_tests, lookback)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-vrgrGL.png]]

**** Summary
***** Plots (lag = 1)

- lag = 1 だけで見てみる
#+begin_src R :results graphics :file (get-babel-file)
box_tests %>%
  filter(lag == 1) %>%
  filter(pval < 0.1) %>%
  ggplot(aes(x = date)) +
  geom_bar() +
  ylim(c(0, length(universe))) +
  facet_grid(lookback ~ .)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-5KYA28.png]]

*** Autocorrelation
**** Prepare Data

#+begin_src R :results silent
conf_level <- 0.95
ac_by_lags <- ac %>%
  ## 自己相関の有意水準を計算
  mutate(level = abs(qnorm((1 - conf_level) / 2) / sqrt(lookback))) %>%
  select_at(vars(starts_with("lag_"), symbol, date, level)) %>%
  rename_all(function(x) str_remove(x, "lag_")) %>%
  gather(key = "lag", value = "value", -symbol, -date, -level) %>%
  ## 整列して、表示させるために factor へ変換
  mutate(lag = factor(lag, levels = 1:20))

## 有意な値のみ抜き出す  
ac_signf_by_lags <- ac_by_lags %>%
  filter(abs(value) > level) %>%
  mutate(side = factor(if_else(value > 0, "Positive", "Negative"),
                       levels = c("Positive", "Negative")))
#+end_src

**** Plot All

#+begin_src R :results graphics :file (get-babel-file)
ac_by_lags %>%
  ggplot(aes(x = lag, y = value)) +
  geom_boxplot()
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-qpQzYg.png]]

**** Plot Significant Values Only (by Lag)

#+begin_src R :results graphics :file (get-babel-file)
ac_signf_by_lags %>%
  ggplot(aes(x = lag)) + geom_bar()
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-K42iKh.png]]

**** Plot Significant Values Only (by Date)

#+begin_src R :results graphics :file (get-babel-file)
ac_signf_by_lags %>%
  ggplot(aes(x = date)) + geom_bar()
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-L5egsi.png]]

#+begin_src R :results graphics :file (get-babel-file)
e$r[["xts"]][["c2c"]]["2010-07-30::", "SPY"] %>%
  autoplot()
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-4DGpVO.png]]

**** Plot Significant Values Only (Facet by Positive/Negative)

#+begin_src R :results graphics :file (get-babel-file)
ac_signf_by_lags %>%
  ggplot(aes(x = lag)) + geom_bar() + facet_grid(side ~ .)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-OUBNtl.png]]

**** Plot Significant Negative Values Only (Facet by Symbol)

#+begin_src R :results graphics :file (get-babel-file)
ac_signf_by_lags %>%
  filter(side == "Negative") %>%
  ggplot(aes(x = lag)) +
  geom_bar() + facet_wrap(~ symbol, nrow = 2)
#+end_src

#+RESULTS:
[[file:/home/shun/Dropbox/memo/img/babel/fig-YkO315.png]]

** Distribution Fit

#+begin_src R
unique(dist_fits$dist)
#+end_src

#+RESULTS:
: [1] "std"  "sstd" "ged"  "sged" "nig"

- Lookback 毎のカウント
#+begin_src R
dist_fits %>%
  group_by(symbol, date, lookback) %>%
  slice(which.min(aic)) %>%
  group_by(dist, lookback) %>%
  tally() %>%
  spread(lookback, n)
#+end_src

#+RESULTS:
#+begin_example

# A tibble: 5 x 2
# Groups:   dist [5]
  dist  `500`
  <
<int>
1 ged     216
2 nig     144
3 sged     72
4 sstd     80
5 std     648
#+end_example

- 全体の集計
#+begin_src R
dist_fits %>%
  group_by(symbol, date, lookback) %>%
  slice(which.min(aic)) %>%
  group_by(dist) %>%
  summarise(count = n()) %>%
  mutate(pct = percent(count / sum(count)))
#+end_src

#+RESULTS:
#+begin_example

# A tibble: 5 x 3
  dist  count pct       
  <
<
<formttbl>
1 ged     216 18.62%    
2 nig     144 12.41%    
3 sged     72 6.21%     
4 sstd     80 6.90%     
5 std     648 55.86%
#+end_example

|-------------------------+------------+----+-------+------+-------+--------|
| name                    | short name | mu | sigma | skew | shape | lambda |
|-------------------------+------------+----+-------+------+-------+--------|
| normal                  | norm       | x  | x     |      |       |        |
| student-t               | std        | x  | x     |      | x     |        |
| generalized error       | ged        | x  | x     |      | x     |        |
|-------------------------+------------+----+-------+------+-------+--------|
| skew normal             | snorm      | x  | x     | x    |       |        |
| skew student            | sstd       | x  | x     | x    | x     |        |
| skew ged                | sged       | x  | x     | x    | x     |        |
|-------------------------+------------+----+-------+------+-------+--------|
| normal inverse gaussian | nig        | x  | x     | x    | x     |        |
| johnson's SU            | jsu        | x  | x     | x    | x     |        |
|-------------------------+------------+----+-------+------+-------+--------|
| generalized hyperbolic  | ghyp       | x  | x     | x    | x     | x      |
| GH skew student         | ghst       | x  | x     | x    | x     | x      |
|-------------------------+------------+----+-------+------+-------+--------|

** Linear Regression
*** Intercept
**** All
***** Plot

#+begin_src R :results graphics :file (get-babel-file)
lm_fits %>%
  mutate(Lookback = as.factor(lookback)) %>%
  ggplot(aes(x = Lookback, y = i_coef, color = Lookback)) +
  geom_violin(aes(fill = Lookback), alpha = 0.3) +
  geom_boxplot(color = "black", width = 0.25)
#+end_src

  #+RESULTS:
  [[file:/home/shun/Dropbox/memo/img/babel/fig-2sYukc.png]]

***** Summary

#+begin_src R
percent(summary(lm_fits[lm_fits$lookback == 250, ]$i_coef))
percent(summary(lm_fits[lm_fits$lookback == 500, ]$i_coef))
#+end_src

  #+RESULTS:
  :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  : -2.408% -0.029%  0.030%  0.020%  0.083%  0.685%
  :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  : -1.326% -0.015%  0.031%  0.021%  0.070%  0.431%

**** Significant Values Only
***** Plot

#+begin_src R :results graphics :file (get-babel-file)
i_coef_signf <- lm_fits %>%
  filter(i_pval <= 0.05) %>%
  mutate(Lookback = as.factor(lookback))

i_coef_signf %>%
  ggplot(aes(x = Lookback, y = i_coef)) +
  geom_boxplot()
#+end_src

  #+RESULTS:
  [[file:/home/shun/Dropbox/memo/img/babel/fig-n3hCg6.png]]

***** Summary

#+begin_src R
percent(summary(i_coef_signf[i_coef_signf$lookback == 250, ]$i_coef))
percent(summary(i_coef_signf[i_coef_signf$lookback == 500, ]$i_coef))
#+end_src

  #+RESULTS:
  :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  : -2.408%  0.108%  0.149%  0.073%  0.196%  0.685%
  :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  : -1.326%  0.086%  0.110%  0.059%  0.142%  0.431%

- 有意な係数の割合
#+begin_src R
c250 <- nrow(lm_fits[lm_fits$lookback == 250, ])
c500 <- nrow(lm_fits[lm_fits$lookback == 500, ])
percent(nrow(i_coef_signf[i_coef_signf$lookback == 250, ]) / c250)
percent(nrow(i_coef_signf[i_coef_signf$lookback == 500, ]) / c500)
#+end_src

#+RESULTS:
: [1] 6.36%
: [1] 8.40%

*** X1
**** All
***** Plot

#+begin_src R :results graphics :file (get-babel-file)
lm_fits %>%
  mutate(Lookback = as.factor(lookback)) %>%
  ggplot(aes(x = Lookback, y = x1_coef)) +
  geom_boxplot()
#+end_src

  #+RESULTS:
  [[file:/home/shun/Dropbox/memo/img/babel/fig-yDaCpO.png]]

***** Summary

#+begin_src R
summary(lm_fits[lm_fits$lookback == 250, ]$x1_coef)
summary(lm_fits[lm_fits$lookback == 500, ]$x1_coef)
#+end_src

  #+RESULTS:
  :     Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
  : -1.18354 -0.16785 -0.03677 -0.04469  0.08713  0.95698
  :     Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
  : -1.09308 -0.13712 -0.03011 -0.03954  0.06864  0.67560

**** Significant Values Only
***** Plot

#+begin_src R :results graphics :file (get-babel-file)
x1_coef_signf <- lm_fits %>%
  filter(x1_pval <= 0.05) %>%
  mutate(Lookback = as.factor(lookback))

x1_coef_signf %>%
  ggplot(aes(x = Lookback, y = x1_coef)) +
  geom_boxplot()
#+end_src

  #+RESULTS:
  [[file:/home/shun/Dropbox/memo/img/babel/fig-6DreA9.png]]

***** Summary

#+begin_src R
summary(x1_coef_signf[x1_coef_signf$lookback == 250, ]$x1_coef)
summary(x1_coef_signf[x1_coef_signf$lookback == 500, ]$x1_coef)
#+end_src

  #+RESULTS:
  :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  : -1.1835 -0.3383 -0.2366 -0.1265  0.2140  0.9570
  :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  : -1.0931 -0.2607 -0.1763 -0.1025  0.1565  0.6756

- 有意な係数の割合
#+begin_src R
c250 <- nrow(lm_fits[lm_fits$lookback == 250, ])
c500 <- nrow(lm_fits[lm_fits$lookback == 500, ])
percent(nrow(x1_coef_signf[x1_coef_signf$lookback == 250, ]) / c250)
percent(nrow(x1_coef_signf[x1_coef_signf$lookback == 500, ]) / c500)
#+end_src

#+RESULTS:
: [1] 29.98%
: [1] 36.42%

** ARMA Orders

#+begin_src R
arma_ids %>%
  group_by(symbol, date, lookback) %>%
  slice(which.min(aic)) %>%
  group_by(arma = glue("{ar}:{ma}")) %>%
  tally()
#+end_src

#+RESULTS:
#+begin_example

# A tibble: 9 x 2
  arma      n
  <
<int>
1 0:0     295
2 0:1      49
3 0:2      12
4 1:0      41
5 1:1      62
6 1:2      25
7 2:0      16
8 2:1      38
9 2:2     238
There were 50 or more warnings (use warnings() to see the first 50)
#+end_example

** ARMA(1, 1) + Xreg Model
** ARIMAX + GARCH Specs

#+begin_src R
specs <- map_dfr(c(24), function(lookback) {
  calc(y, "month", lookback, get_garch_spec, parallel = TRUE,
       args_fun = get_arimax_xreg)
})
env$specs <- specs
#+end_src

#+RESULTS:
: 
: Error in calc(y, "month", lookback, get_garch_spec, parallel = TRUE, args_fun = get_arimax_xreg) (from #2) : 
:   could not find function "calc"
: 
: Error: object 'specs' not found

- 同定された ARMA の次数を確認する
#+begin_src R :results value :colnames yes
orders <- map_dfr(1:nrow(specs), function(idx) {
  spec <- specs[idx, ]$ugarchspec[[1]]
  model <- spec@model$modelinc
  data.frame(
    ar = as.integer(model["ar"]),
    ma = as.integer(model["ma"])
  )
})

orders %>%
  group_by(ar, ma) %>%
  summarise(count = n())
#+end_src

#+RESULTS:
| x               |
|-----------------|
| org_babel_R_eoe |



